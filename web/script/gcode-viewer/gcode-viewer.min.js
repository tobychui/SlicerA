!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("gcodeViewer",[],t):"object"==typeof exports?exports.gcodeViewer=t():e.gcodeViewer=t()}(self,function(){return(()=>{"use strict";var n={212:(e,t,n)=>{n.r(t),n.d(t,{ACESFilmicToneMapping:()=>I,AddEquation:()=>te,AddOperation:()=>E,AdditiveAnimationBlendMode:()=>qt,AdditiveBlending:()=>Q,AlphaFormat:()=>Be,AlwaysDepth:()=>ye,AlwaysStencilFunc:()=>Sn,AmbientLight:()=>bu,AmbientLightProbe:()=>Vu,AnimationClip:()=>Mc,AnimationLoader:()=>Cc,AnimationMixer:()=>fd,AnimationObjectGroup:()=>pd,AnimationUtils:()=>cc,ArcCurve:()=>Fc,ArrayCamera:()=>jo,ArrowHelper:()=>ip,Audio:()=>$u,AudioAnalyser:()=>ad,AudioContext:()=>Hu,AudioListener:()=>Ku,AudioLoader:()=>Uu,AxesHelper:()=>ap,AxisHelper:()=>function(e){return console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),new ap(e)},BackSide:()=>X,BasicDepthPacking:()=>an,BasicShadowMap:()=>o,BinaryTextureLoader:()=>function(e){return console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),new Nc(e)},Bone:()=>Cl,BooleanKeyframeTrack:()=>gc,BoundingBoxHelper:()=>function(e,t){return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),new Kd(e,t)},Box2:()=>Td,Box3:()=>hr,Box3Helper:()=>$d,BoxBufferGeometry:()=>Ma,BoxGeometry:()=>Ma,BoxHelper:()=>Kd,BufferAttribute:()=>Bi,BufferGeometry:()=>ra,BufferGeometryLoader:()=>Ru,ByteType:()=>v,Cache:()=>Sc,Camera:()=>La,CameraHelper:()=>Zd,CanvasRenderer:()=>function(){console.error("THREE.CanvasRenderer has been removed")},CanvasTexture:()=>ah,CatmullRomCurve3:()=>Wc,CineonToneMapping:()=>D,CircleBufferGeometry:()=>oh,CircleGeometry:()=>oh,ClampToEdgeWrapping:()=>U,Clock:()=>qu,Color:()=>Di,ColorKeyframeTrack:()=>vc,CompressedTexture:()=>ih,CompressedTextureLoader:()=>Pc,ConeBufferGeometry:()=>hh,ConeGeometry:()=>hh,CubeCamera:()=>Ca,CubeReflectionMapping:()=>z,CubeRefractionMapping:()=>B,CubeTexture:()=>Pa,CubeTextureLoader:()=>Ic,CubeUVReflectionMapping:()=>O,CubeUVRefractionMapping:()=>F,CubicBezierCurve:()=>Yc,CubicBezierCurve3:()=>Zc,CubicInterpolant:()=>dc,CullFaceBack:()=>j,CullFaceFront:()=>q,CullFaceFrontBack:()=>s,CullFaceNone:()=>W,Curve:()=>Bc,CurvePath:()=>nu,CustomBlending:()=>ee,CustomToneMapping:()=>N,CylinderBufferGeometry:()=>lh,CylinderGeometry:()=>lh,Cylindrical:()=>Md,DataTexture:()=>Ia,DataTexture2DArray:()=>rs,DataTexture3D:()=>is,DataTextureLoader:()=>Nc,DataUtils:()=>lp,DecrementStencilOp:()=>pn,DecrementWrapStencilOp:()=>fn,DefaultLoadingManager:()=>Ec,DepthFormat:()=>Ve,DepthStencilFormat:()=>ke,DepthTexture:()=>sh,DirectionalLight:()=>_u,DirectionalLightHelper:()=>qd,DiscreteInterpolant:()=>mc,DodecahedronBufferGeometry:()=>uh,DodecahedronGeometry:()=>uh,DoubleSide:()=>Y,DstAlphaFactor:()=>de,DstColorFactor:()=>me,DynamicBufferAttribute:()=>function(e,t){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."),new Bi(e,t).setUsage(En)},DynamicCopyUsage:()=>Dn,DynamicDrawUsage:()=>En,DynamicReadUsage:()=>Rn,EdgesGeometry:()=>gh,EdgesHelper:()=>function(e,t){return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),new Yl(new gh(e.geometry),new Hl({color:void 0!==t?t:16777215}))},EllipseCurve:()=>Oc,EqualDepth:()=>be,EqualStencilFunc:()=>xn,EquirectangularReflectionMapping:()=>u,EquirectangularRefractionMapping:()=>d,Euler:()=>Xr,EventDispatcher:()=>Bn,ExtrudeBufferGeometry:()=>Oh,ExtrudeGeometry:()=>Oh,FaceColors:()=>Np,FileLoader:()=>Rc,FlatShading:()=>l,Float16BufferAttribute:()=>Wi,Float32Attribute:()=>function(e,t){return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),new ji(e,t)},Float32BufferAttribute:()=>ji,Float64Attribute:()=>function(e,t){return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),new qi(e,t)},Float64BufferAttribute:()=>qi,FloatType:()=>Ie,Fog:()=>el,FogExp2:()=>$o,Font:()=>Bu,FontLoader:()=>Ou,FrontSide:()=>R,Frustum:()=>Ba,GLBufferAttribute:()=>yd,GLSL1:()=>Nn,GLSL3:()=>zn,GammaEncoding:()=>Kt,GreaterDepth:()=>Me,GreaterEqualDepth:()=>we,GreaterEqualStencilFunc:()=>Mn,GreaterStencilFunc:()=>bn,GridHelper:()=>Gd,Group:()=>qo,HalfFloatType:()=>Ne,HemisphereLight:()=>su,HemisphereLightHelper:()=>Ud,HemisphereLightProbe:()=>Gu,IcosahedronBufferGeometry:()=>Hh,IcosahedronGeometry:()=>Hh,ImageBitmapLoader:()=>Nu,ImageLoader:()=>Dc,ImageUtils:()=>Kn,ImmediateRenderObject:()=>Rd,IncrementStencilOp:()=>dn,IncrementWrapStencilOp:()=>mn,InstancedBufferAttribute:()=>Lu,InstancedBufferGeometry:()=>Au,InstancedInterleavedBuffer:()=>vd,InstancedMesh:()=>Fl,Int16Attribute:()=>function(e,t){return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),new Ui(e,t)},Int16BufferAttribute:()=>Ui,Int32Attribute:()=>function(e,t){return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),new Vi(e,t)},Int32BufferAttribute:()=>Vi,Int8Attribute:()=>function(e,t){return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),new Oi(e,t)},Int8BufferAttribute:()=>Oi,IntType:()=>x,InterleavedBuffer:()=>nl,InterleavedBufferAttribute:()=>il,Interpolant:()=>uc,InterpolateDiscrete:()=>Ht,InterpolateLinear:()=>Ut,InterpolateSmooth:()=>Gt,InvertStencilOp:()=>gn,JSONLoader:()=>function(){console.error("THREE.JSONLoader has been removed.")},KeepStencilOp:()=>cn,KeyframeTrack:()=>fc,LOD:()=>Ml,LatheBufferGeometry:()=>Uh,LatheGeometry:()=>Uh,Layers:()=>Yr,LensFlare:()=>function(){console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")},LessDepth:()=>xe,LessEqualDepth:()=>_e,LessEqualStencilFunc:()=>_n,LessStencilFunc:()=>yn,Light:()=>au,LightProbe:()=>Su,Line:()=>jl,Line3:()=>Ld,LineBasicMaterial:()=>Hl,LineCurve:()=>Jc,LineCurve3:()=>Qc,LineDashedMaterial:()=>lc,LineLoop:()=>Zl,LinePieces:()=>Dp,LineSegments:()=>Yl,LineStrip:()=>Pp,LinearEncoding:()=>Jt,LinearFilter:()=>Ae,LinearInterpolant:()=>pc,LinearMipMapLinearFilter:()=>g,LinearMipMapNearestFilter:()=>f,LinearMipmapLinearFilter:()=>Re,LinearMipmapNearestFilter:()=>Le,LinearToneMapping:()=>C,Loader:()=>Ac,LoaderUtils:()=>Eu,LoadingManager:()=>Tc,LogLuvEncoding:()=>en,LoopOnce:()=>Bt,LoopPingPong:()=>Ft,LoopRepeat:()=>Ot,LuminanceAlphaFormat:()=>Ue,LuminanceFormat:()=>He,MOUSE:()=>i,Material:()=>Ti,MaterialLoader:()=>Tu,Math:()=>Yn,MathUtils:()=>Yn,Matrix3:()=>Jn,Matrix4:()=>Or,MaxEquation:()=>ae,Mesh:()=>ba,MeshBasicMaterial:()=>Ii,MeshDepthMaterial:()=>Oo,MeshDistanceMaterial:()=>Fo,MeshFaceMaterial:()=>function(e){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),e},MeshLambertMaterial:()=>sc,MeshMatcapMaterial:()=>oc,MeshNormalMaterial:()=>ac,MeshPhongMaterial:()=>rc,MeshPhysicalMaterial:()=>nc,MeshStandardMaterial:()=>tc,MeshToonMaterial:()=>ic,MinEquation:()=>ie,MirroredRepeatWrapping:()=>G,MixOperation:()=>T,MultiMaterial:()=>function(e=[]){return console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),e.isMultiMaterial=!0,(e.materials=e).clone=function(){return e.slice()},e},MultiplyBlending:()=>$,MultiplyOperation:()=>S,NearestFilter:()=>V,NearestMipMapLinearFilter:()=>m,NearestMipMapNearestFilter:()=>p,NearestMipmapLinearFilter:()=>Te,NearestMipmapNearestFilter:()=>k,NeverDepth:()=>ve,NeverStencilFunc:()=>vn,NoBlending:()=>Z,NoColors:()=>Ip,NoToneMapping:()=>Ee,NormalAnimationBlendMode:()=>jt,NormalBlending:()=>J,NotEqualDepth:()=>Se,NotEqualStencilFunc:()=>wn,NumberKeyframeTrack:()=>yc,Object3D:()=>li,ObjectLoader:()=>Cu,ObjectSpaceNormalMap:()=>ln,OctahedronBufferGeometry:()=>Gh,OctahedronGeometry:()=>Gh,OneFactor:()=>oe,OneMinusDstAlphaFactor:()=>pe,OneMinusDstColorFactor:()=>fe,OneMinusSrcAlphaFactor:()=>ue,OneMinusSrcColorFactor:()=>he,OrthographicCamera:()=>yu,PCFShadowMap:()=>A,PCFSoftShadowMap:()=>M,PMREMGenerator:()=>Mp,ParametricBufferGeometry:()=>Vh,ParametricGeometry:()=>Vh,Particle:()=>function(e){return console.warn("THREE.Particle has been renamed to THREE.Sprite."),new xl(e)},ParticleBasicMaterial:()=>function(e){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new Jl(e)},ParticleSystem:()=>function(e,t){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new th(e,t)},ParticleSystemMaterial:()=>function(e){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new Jl(e)},Path:()=>ru,PerspectiveCamera:()=>Ra,Plane:()=>di,PlaneBufferGeometry:()=>Ha,PlaneGeometry:()=>Ha,PlaneHelper:()=>ep,PointCloud:()=>function(e,t){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new th(e,t)},PointCloudMaterial:()=>function(e){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new Jl(e)},PointLight:()=>vu,PointLightHelper:()=>Bd,Points:()=>th,PointsMaterial:()=>Jl,PolarGridHelper:()=>Vd,PolyhedronBufferGeometry:()=>ch,PolyhedronGeometry:()=>ch,PositionalAudio:()=>id,PropertyBinding:()=>dd,PropertyMixer:()=>sd,QuadraticBezierCurve:()=>Kc,QuadraticBezierCurve3:()=>$c,Quaternion:()=>ar,QuaternionKeyframeTrack:()=>_c,QuaternionLinearInterpolant:()=>xc,REVISION:()=>r,RGBADepthPacking:()=>sn,RGBAFormat:()=>Fe,RGBAIntegerFormat:()=>Ze,RGBA_ASTC_10x10_Format:()=>yt,RGBA_ASTC_10x5_Format:()=>ft,RGBA_ASTC_10x6_Format:()=>gt,RGBA_ASTC_10x8_Format:()=>vt,RGBA_ASTC_12x10_Format:()=>xt,RGBA_ASTC_12x12_Format:()=>_t,RGBA_ASTC_4x4_Format:()=>ot,RGBA_ASTC_5x4_Format:()=>lt,RGBA_ASTC_5x5_Format:()=>ht,RGBA_ASTC_6x5_Format:()=>ct,RGBA_ASTC_6x6_Format:()=>ut,RGBA_ASTC_8x5_Format:()=>dt,RGBA_ASTC_8x6_Format:()=>pt,RGBA_ASTC_8x8_Format:()=>mt,RGBA_BPTC_Format:()=>bt,RGBA_ETC2_EAC_Format:()=>st,RGBA_PVRTC_2BPPV1_Format:()=>rt,RGBA_PVRTC_4BPPV1_Format:()=>nt,RGBA_S3TC_DXT1_Format:()=>Qe,RGBA_S3TC_DXT3_Format:()=>Ke,RGBA_S3TC_DXT5_Format:()=>$e,RGBDEncoding:()=>rn,RGBEEncoding:()=>$t,RGBEFormat:()=>Ge,RGBFormat:()=>Oe,RGBIntegerFormat:()=>Ye,RGBM16Encoding:()=>nn,RGBM7Encoding:()=>tn,RGB_ETC1_Format:()=>it,RGB_ETC2_Format:()=>at,RGB_PVRTC_2BPPV1_Format:()=>tt,RGB_PVRTC_4BPPV1_Format:()=>et,RGB_S3TC_DXT1_Format:()=>Je,RGFormat:()=>qe,RGIntegerFormat:()=>Xe,RawShaderMaterial:()=>ec,Ray:()=>Br,Raycaster:()=>xd,RectAreaLight:()=>wu,RedFormat:()=>We,RedIntegerFormat:()=>je,ReinhardToneMapping:()=>P,RepeatWrapping:()=>H,ReplaceStencilOp:()=>un,ReverseSubtractEquation:()=>re,RingBufferGeometry:()=>kh,RingGeometry:()=>kh,SRGB8_ALPHA8_ASTC_10x10_Format:()=>It,SRGB8_ALPHA8_ASTC_10x5_Format:()=>Ct,SRGB8_ALPHA8_ASTC_10x6_Format:()=>Pt,SRGB8_ALPHA8_ASTC_10x8_Format:()=>Dt,SRGB8_ALPHA8_ASTC_12x10_Format:()=>Nt,SRGB8_ALPHA8_ASTC_12x12_Format:()=>zt,SRGB8_ALPHA8_ASTC_4x4_Format:()=>wt,SRGB8_ALPHA8_ASTC_5x4_Format:()=>Mt,SRGB8_ALPHA8_ASTC_5x5_Format:()=>St,SRGB8_ALPHA8_ASTC_6x5_Format:()=>Tt,SRGB8_ALPHA8_ASTC_6x6_Format:()=>Et,SRGB8_ALPHA8_ASTC_8x5_Format:()=>At,SRGB8_ALPHA8_ASTC_8x6_Format:()=>Lt,SRGB8_ALPHA8_ASTC_8x8_Format:()=>Rt,Scene:()=>tl,SceneUtils:()=>Bp,ShaderChunk:()=>Ua,ShaderLib:()=>Va,ShaderMaterial:()=>Aa,ShadowMaterial:()=>$h,Shape:()=>iu,ShapeBufferGeometry:()=>Wh,ShapeGeometry:()=>Wh,ShapePath:()=>zu,ShapeUtils:()=>Nh,ShortType:()=>y,Skeleton:()=>Il,SkeletonHelper:()=>zd,SkinnedMesh:()=>Rl,SmoothShading:()=>h,Sphere:()=>Lr,SphereBufferGeometry:()=>jh,SphereGeometry:()=>jh,Spherical:()=>wd,SphericalHarmonics3:()=>Mu,SplineCurve:()=>eu,SpotLight:()=>du,SpotLightHelper:()=>Pd,Sprite:()=>xl,SpriteMaterial:()=>al,SrcAlphaFactor:()=>ce,SrcAlphaSaturateFactor:()=>ge,SrcColorFactor:()=>le,StaticCopyUsage:()=>Pn,StaticDrawUsage:()=>Tn,StaticReadUsage:()=>Ln,StereoCamera:()=>ju,StreamCopyUsage:()=>In,StreamDrawUsage:()=>An,StreamReadUsage:()=>Cn,StringKeyframeTrack:()=>bc,SubtractEquation:()=>ne,SubtractiveBlending:()=>K,TOUCH:()=>a,TangentSpaceNormalMap:()=>on,TetrahedronBufferGeometry:()=>qh,TetrahedronGeometry:()=>qh,TextBufferGeometry:()=>Xh,TextGeometry:()=>Xh,Texture:()=>er,TextureLoader:()=>zc,TorusBufferGeometry:()=>Yh,TorusGeometry:()=>Yh,TorusKnotBufferGeometry:()=>Zh,TorusKnotGeometry:()=>Zh,Triangle:()=>Mi,TriangleFanDrawMode:()=>Zt,TriangleStripDrawMode:()=>Yt,TrianglesDrawMode:()=>Xt,TubeBufferGeometry:()=>Jh,TubeGeometry:()=>Jh,UVMapping:()=>c,Uint16Attribute:()=>function(e,t){return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),new Gi(e,t)},Uint16BufferAttribute:()=>Gi,Uint32Attribute:()=>function(e,t){return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),new ki(e,t)},Uint32BufferAttribute:()=>ki,Uint8Attribute:()=>function(e,t){return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),new Fi(e,t)},Uint8BufferAttribute:()=>Fi,Uint8ClampedAttribute:()=>function(e,t){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),new Hi(e,t)},Uint8ClampedBufferAttribute:()=>Hi,Uniform:()=>gd,UniformsLib:()=>Ga,UniformsUtils:()=>Ea,UnsignedByteType:()=>Ce,UnsignedInt248Type:()=>ze,UnsignedIntType:()=>De,UnsignedShort4444Type:()=>_,UnsignedShort5551Type:()=>b,UnsignedShort565Type:()=>w,UnsignedShortType:()=>Pe,VSMShadowMap:()=>L,Vector2:()=>Zn,Vector3:()=>sr,Vector4:()=>nr,VectorKeyframeTrack:()=>wc,Vertex:()=>function(e,t,n){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new sr(e,t,n)},VertexColors:()=>zp,VideoTexture:()=>rh,WebGL1Renderer:()=>Ko,WebGLCubeRenderTarget:()=>Da,WebGLMultisampleRenderTarget:()=>ir,WebGLRenderTarget:()=>rr,WebGLRenderTargetCube:()=>function(e,t,n){return console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."),new Da(e,n)},WebGLRenderer:()=>Qo,WebGLUtils:()=>Wo,WireframeGeometry:()=>Qh,WireframeHelper:()=>function(e,t){return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),new Yl(new Qh(e.geometry),new Hl({color:void 0!==t?t:16777215}))},WrapAroundEnding:()=>Wt,XHRLoader:()=>function(e){return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),new Rc(e)},ZeroCurvatureEnding:()=>Vt,ZeroFactor:()=>se,ZeroSlopeEnding:()=>kt,ZeroStencilOp:()=>hn,sRGBEncoding:()=>Qt});
/**
 * @license
 * Copyright 2010-2021 Three.js Authors
 * SPDX-License-Identifier: MIT
 */
const r="128",i={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},a={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},W=0,j=1,q=2,s=3,o=0,A=1,M=2,L=3,R=0,X=1,Y=2,l=1,h=2,Z=0,J=1,Q=2,K=3,$=4,ee=5,te=100,ne=101,re=102,ie=103,ae=104,se=200,oe=201,le=202,he=203,ce=204,ue=205,de=206,pe=207,me=208,fe=209,ge=210,ve=0,ye=1,xe=2,_e=3,be=4,we=5,Me=6,Se=7,S=0,T=1,E=2,Ee=0,C=1,P=2,D=3,I=4,N=5,c=300,z=301,B=302,u=303,d=304,O=306,F=307,H=1e3,U=1001,G=1002,V=1003,k=1004,p=1004,Te=1005,m=1005,Ae=1006,Le=1007,f=1007,Re=1008,g=1008,Ce=1009,v=1010,y=1011,Pe=1012,x=1013,De=1014,Ie=1015,Ne=1016,_=1017,b=1018,w=1019,ze=1020,Be=1021,Oe=1022,Fe=1023,He=1024,Ue=1025,Ge=Fe,Ve=1026,ke=1027,We=1028,je=1029,qe=1030,Xe=1031,Ye=1032,Ze=1033,Je=33776,Qe=33777,Ke=33778,$e=33779,et=35840,tt=35841,nt=35842,rt=35843,it=36196,at=37492,st=37496,ot=37808,lt=37809,ht=37810,ct=37811,ut=37812,dt=37813,pt=37814,mt=37815,ft=37816,gt=37817,vt=37818,yt=37819,xt=37820,_t=37821,bt=36492,wt=37840,Mt=37841,St=37842,Tt=37843,Et=37844,At=37845,Lt=37846,Rt=37847,Ct=37848,Pt=37849,Dt=37850,It=37851,Nt=37852,zt=37853,Bt=2200,Ot=2201,Ft=2202,Ht=2300,Ut=2301,Gt=2302,Vt=2400,kt=2401,Wt=2402,jt=2500,qt=2501,Xt=0,Yt=1,Zt=2,Jt=3e3,Qt=3001,Kt=3007,$t=3002,en=3003,tn=3004,nn=3005,rn=3006,an=3200,sn=3201,on=0,ln=1,hn=0,cn=7680,un=7681,dn=7682,pn=7683,mn=34055,fn=34056,gn=5386,vn=512,yn=513,xn=514,_n=515,bn=516,wn=517,Mn=518,Sn=519,Tn=35044,En=35048,An=35040,Ln=35045,Rn=35049,Cn=35041,Pn=35046,Dn=35050,In=35042,Nn="100",zn="300 es";class Bn{addEventListener(e,t){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[e]&&(n[e]=[]),-1===n[e].indexOf(t)&&n[e].push(t)}hasEventListener(e,t){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[e]&&-1!==n[e].indexOf(t)}removeEventListener(e,t){if(void 0!==this._listeners){const n=this._listeners[e];void 0===n||-1!==(t=n.indexOf(t))&&n.splice(t,1)}}dispatchEvent(n){if(void 0!==this._listeners){const e=this._listeners[n.type];if(void 0!==e){n.target=this;const r=e.slice(0);for(let e=0,t=r.length;e<t;e++)r[e].call(this,n);n.target=null}}}}const On=[];for(let e=0;e<256;e++)On[e]=(e<16?"0":"")+e.toString(16);let Fn=1234567;const Hn=Math.PI/180,Un=180/Math.PI;function Gn(){var e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,n=4294967295*Math.random()|0,r=4294967295*Math.random()|0;const i=On[255&e]+On[e>>8&255]+On[e>>16&255]+On[e>>24&255]+"-"+On[255&t]+On[t>>8&255]+"-"+On[t>>16&15|64]+On[t>>24&255]+"-"+On[63&n|128]+On[n>>8&255]+"-"+On[n>>16&255]+On[n>>24&255]+On[255&r]+On[r>>8&255]+On[r>>16&255]+On[r>>24&255];return i.toUpperCase()}function Vn(e,t,n){return Math.max(t,Math.min(n,e))}function kn(e,t){return(e%t+t)%t}function Wn(e,t,n){return(1-n)*e+n*t}function jn(e){return 0==(e&e-1)&&0!==e}function qn(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))}function Xn(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))}var Yn=Object.freeze({__proto__:null,DEG2RAD:Hn,RAD2DEG:Un,generateUUID:Gn,clamp:Vn,euclideanModulo:kn,mapLinear:function(e,t,n,r,i){return r+(e-t)*(i-r)/(n-t)},inverseLerp:function(e,t,n){return e!==t?(n-e)/(t-e):0},lerp:Wn,damp:function(e,t,n,r){return Wn(e,t,1-Math.exp(-n*r))},pingpong:function(e,t=1){return t-Math.abs(kn(e,2*t)-t)},smoothstep:function(e,t,n){return e<=t?0:n<=e?1:(e=(e-t)/(n-t))*e*(3-2*e)},smootherstep:function(e,t,n){return e<=t?0:n<=e?1:(e=(e-t)/(n-t))*e*e*(e*(6*e-15)+10)},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},seededRandom:function(e){return void 0!==e&&(Fn=e%2147483647),Fn=16807*Fn%2147483647,(Fn-1)/2147483646},degToRad:function(e){return e*Hn},radToDeg:function(e){return e*Un},isPowerOfTwo:jn,ceilPowerOfTwo:qn,floorPowerOfTwo:Xn,setQuaternionFromProperEuler:function(e,t,n,r,i){const a=Math.cos,s=Math.sin;var o=a(n/2),l=s(n/2),h=a((t+r)/2),c=s((t+r)/2),u=a((t-r)/2),d=s((t-r)/2),p=a((r-t)/2),m=s((r-t)/2);switch(i){case"XYX":e.set(o*c,l*u,l*d,o*h);break;case"YZY":e.set(l*d,o*c,l*u,o*h);break;case"ZXZ":e.set(l*u,l*d,o*c,o*h);break;case"XZX":e.set(o*c,l*m,l*p,o*h);break;case"YXY":e.set(l*p,o*c,l*m,o*h);break;case"ZYZ":e.set(l*m,l*p,o*c,o*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}});class Zn{constructor(e=0,t=0){this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){var t=this.x,n=this.y,e=e.elements;return this.x=e[0]*t+e[3]*n+e[6],this.y=e[1]*t+e[4]*n+e[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){var t=this.x-e.x,e=this.y-e.y;return t*t+e*e}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){var n=Math.cos(t),r=Math.sin(t),i=this.x-e.x,t=this.y-e.y;return this.x=i*n-t*r+e.x,this.y=i*r+t*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}Zn.prototype.isVector2=!0;class Jn{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],0<arguments.length&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,r,i,a,s,o,l){const h=this.elements;return h[0]=e,h[1]=r,h[2]=s,h[3]=t,h[4]=i,h[5]=o,h[6]=n,h[7]=a,h[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements;e=e.elements;return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){e=e.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){var n=e.elements,r=t.elements;const i=this.elements;var a=n[0],s=n[3],o=n[6],l=n[1],h=n[4],c=n[7],u=n[2],d=n[5],p=n[8],m=r[0],f=r[3],g=r[6],v=r[1],y=r[4],e=r[7],t=r[2],n=r[5],r=r[8];return i[0]=a*m+s*v+o*t,i[3]=a*f+s*y+o*n,i[6]=a*g+s*e+o*r,i[1]=l*m+h*v+c*t,i[4]=l*f+h*y+c*n,i[7]=l*g+h*e+c*r,i[2]=u*m+d*v+p*t,i[5]=u*f+d*y+p*n,i[8]=u*g+d*e+p*r,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){var e=this.elements,t=e[0],n=e[1],r=e[2],i=e[3],a=e[4],s=e[5],o=e[6],l=e[7],e=e[8];return t*a*e-t*s*l-n*i*e+n*s*o+r*i*l-r*a*o}invert(){const e=this.elements,t=e[0],n=e[1],r=e[2],i=e[3],a=e[4],s=e[5],o=e[6],l=e[7],h=e[8],c=h*a-s*l,u=s*o-h*i,d=l*i-a*o,p=t*c+n*u+r*d;if(0==p)return this.set(0,0,0,0,0,0,0,0,0);var m=1/p;return e[0]=c*m,e[1]=(r*l-h*n)*m,e[2]=(s*n-r*a)*m,e[3]=u*m,e[4]=(h*t-r*o)*m,e[5]=(r*i-s*t)*m,e[6]=d*m,e[7]=(n*o-l*t)*m,e[8]=(a*t-n*i)*m,this}transpose(){var e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,r,i,a,s){var o=Math.cos(i),i=Math.sin(i);return this.set(n*o,n*i,-n*(o*a+i*s)+a+e,-r*i,r*o,-r*(-i*a+o*s)+s+t,0,0,1),this}scale(e,t){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this}rotate(e){var t=Math.cos(e),n=Math.sin(e);const r=this.elements;var i=r[0],a=r[3],s=r[6],o=r[1],l=r[4],e=r[7];return r[0]=t*i+n*o,r[3]=t*a+n*l,r[6]=t*s+n*e,r[1]=-n*i+t*o,r[4]=-n*a+t*l,r[7]=-n*s+t*e,this}translate(e,t){const n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this}equals(e){var t=this.elements,n=e.elements;for(let e=0;e<9;e++)if(t[e]!==n[e])return!1;return!0}fromArray(t,n=0){for(let e=0;e<9;e++)this.elements[e]=t[e+n];return this}toArray(e=[],t=0){var n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return(new this.constructor).fromArray(this.elements)}}Jn.prototype.isMatrix3=!0;let Qn;class Kn{static getDataURL(e){if(/^data:/i.test(e.src))return e.src;if("undefined"==typeof HTMLCanvasElement)return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{void 0===Qn&&(Qn=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),Qn.width=e.width,Qn.height=e.height;const n=Qn.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=Qn}return 2048<t.width||2048<t.height?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}}let $n=0;class er extends Bn{constructor(e=er.DEFAULT_IMAGE,t=er.DEFAULT_MAPPING,n=U,r=U,i=Ae,a=Re,s=Fe,o=Ce,l=1,h=Jt){super(),Object.defineProperty(this,"id",{value:$n++}),this.uuid=Gn(),this.name="",this.image=e,this.mipmaps=[],this.mapping=t,this.wrapS=n,this.wrapT=r,this.magFilter=i,this.minFilter=a,this.anisotropy=l,this.format=s,this.internalFormat=null,this.type=o,this.offset=new Zn(0,0),this.repeat=new Zn(1,1),this.center=new Zn(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Jn,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=h,this.version=0,this.onUpdate=null}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this}toJSON(e){var t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const r=this.image;if(void 0===r.uuid&&(r.uuid=Gn()),!t&&void 0===e.images[r.uuid]){let n;if(Array.isArray(r)){n=[];for(let e=0,t=r.length;e<t;e++)r[e].isDataTexture?n.push(tr(r[e].image)):n.push(tr(r[e]))}else n=tr(r);e.images[r.uuid]={uuid:r.uuid,url:n}}n.image=r.uuid}return t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==c)return e;if(e.applyMatrix3(this.matrix),e.x<0||1<e.x)switch(this.wrapS){case H:e.x=e.x-Math.floor(e.x);break;case U:e.x=e.x<0?0:1;break;case G:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||1<e.y)switch(this.wrapT){case H:e.y=e.y-Math.floor(e.y);break;case U:e.y=e.y<0?0:1;break;case G:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){!0===e&&this.version++}}function tr(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap?Kn.getDataURL(e):e.data?{data:Array.prototype.slice.call(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}er.DEFAULT_IMAGE=void 0,er.DEFAULT_MAPPING=c,er.prototype.isTexture=!0;class nr{constructor(e=0,t=0,n=0,r=1){this.x=e,this.y=t,this.z=n,this.w=r}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,r){return this.x=e,this.y=t,this.z=n,this.w=r,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){var t=this.x,n=this.y,r=this.z,i=this.w,e=e.elements;return this.x=e[0]*t+e[4]*n+e[8]*r+e[12]*i,this.y=e[1]*t+e[5]*n+e[9]*r+e[13]*i,this.z=e[2]*t+e[6]*n+e[10]*r+e[14]*i,this.w=e[3]*t+e[7]*n+e[11]*r+e[15]*i,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,r,i;var a=e.elements,s=a[0],o=a[4],l=a[8],h=a[1],c=a[5],u=a[9],d=a[2],p=a[6],m=a[10];if(Math.abs(o-h)<.01&&Math.abs(l-d)<.01&&Math.abs(u-p)<.01){if(Math.abs(o+h)<.1&&Math.abs(l+d)<.1&&Math.abs(u+p)<.1&&Math.abs(s+c+m-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;var f=(s+1)/2,g=(c+1)/2,v=(m+1)/2,y=(o+h)/4,e=(l+d)/4,a=(u+p)/4;return g<f&&v<f?i=f<.01?(n=0,r=.707106781):(n=Math.sqrt(f),r=y/n,e/n):v<g?i=g<.01?(n=.707106781,r=0,.707106781):(r=Math.sqrt(g),n=y/r,a/r):v<.01?(n=.707106781,r=.707106781,i=0):(i=Math.sqrt(v),n=e/i,r=a/i),this.set(n,r,i,t),this}let x=Math.sqrt((p-u)*(p-u)+(l-d)*(l-d)+(h-o)*(h-o));return Math.abs(x)<.001&&(x=1),this.x=(p-u)/x,this.y=(l-d)/x,this.z=(h-o)/x,this.w=Math.acos((s+c+m-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}nr.prototype.isVector4=!0;class rr extends Bn{constructor(e,t,n){super(),this.width=e,this.height=t,this.depth=1,this.scissor=new nr(0,0,e,t),this.scissorTest=!1,this.viewport=new nr(0,0,e,t),n=n||{},this.texture=new er(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.image={},this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=1,this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:Ae,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0!==n.stencilBuffer&&n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null}setTexture(e){e.image={width:this.width,height:this.height,depth:this.depth},this.texture=e}setSize(e,t,n=1){this.width===e&&this.height===t&&this.depth===n||(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return(new this.constructor).copy(this)}copy(e){return this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this}dispose(){this.dispatchEvent({type:"dispose"})}}rr.prototype.isWebGLRenderTarget=!0;class ir extends rr{constructor(e,t,n){super(e,t,n),this.samples=4}copy(e){return super.copy.call(this,e),this.samples=e.samples,this}}ir.prototype.isWebGLMultisampleRenderTarget=!0;class ar{constructor(e=0,t=0,n=0,r=1){this._x=e,this._y=t,this._z=n,this._w=r}static slerp(e,t,n,r){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(e,t,r)}static slerpFlat(e,t,n,r,i,a,s){let o=n[r+0],l=n[r+1],h=n[r+2],c=n[r+3];var u=i[a+0],d=i[a+1],p=i[a+2],n=i[a+3];if(0===s)return e[t+0]=o,e[t+1]=l,e[t+2]=h,void(e[t+3]=c);if(1===s)return e[t+0]=u,e[t+1]=d,e[t+2]=p,void(e[t+3]=n);if(c!==n||o!==u||l!==d||h!==p){let e=1-s;r=o*u+l*d+h*p+c*n,i=0<=r?1:-1,a=1-r*r;a>Number.EPSILON&&(a=Math.sqrt(a),r=Math.atan2(a,r*i),e=Math.sin(e*r)/a,s=Math.sin(s*r)/a);i=s*i;o=o*e+u*i,l=l*e+d*i,h=h*e+p*i,c=c*e+n*i,e===1-s&&(s=1/Math.sqrt(o*o+l*l+h*h+c*c),o*=s,l*=s,h*=s,c*=s)}e[t]=o,e[t+1]=l,e[t+2]=h,e[t+3]=c}static multiplyQuaternionsFlat(e,t,n,r,i,a){var s=n[r],o=n[r+1],l=n[r+2],h=n[r+3],c=i[a],n=i[a+1],r=i[a+2],a=i[a+3];return e[t]=s*a+h*c+o*r-l*n,e[t+1]=o*a+h*n+l*c-s*r,e[t+2]=l*a+h*r+s*n-o*c,e[t+3]=h*a-s*c-o*n-l*r,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!e||!e.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");var n=e._x,r=e._y,i=e._z,a=e._order;const s=Math.cos,o=Math.sin;var l=s(n/2),h=s(r/2),c=s(i/2),u=o(n/2),d=o(r/2),p=o(i/2);switch(a){case"XYZ":this._x=u*h*c+l*d*p,this._y=l*d*c-u*h*p,this._z=l*h*p+u*d*c,this._w=l*h*c-u*d*p;break;case"YXZ":this._x=u*h*c+l*d*p,this._y=l*d*c-u*h*p,this._z=l*h*p-u*d*c,this._w=l*h*c+u*d*p;break;case"ZXY":this._x=u*h*c-l*d*p,this._y=l*d*c+u*h*p,this._z=l*h*p+u*d*c,this._w=l*h*c-u*d*p;break;case"ZYX":this._x=u*h*c-l*d*p,this._y=l*d*c+u*h*p,this._z=l*h*p-u*d*c,this._w=l*h*c+u*d*p;break;case"YZX":this._x=u*h*c+l*d*p,this._y=l*d*c+u*h*p,this._z=l*h*p-u*d*c,this._w=l*h*c-u*d*p;break;case"XZY":this._x=u*h*c-l*d*p,this._y=l*d*c-u*h*p,this._z=l*h*p+u*d*c,this._w=l*h*c+u*d*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return!1!==t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){var n=t/2,t=Math.sin(n);return this._x=e.x*t,this._y=e.y*t,this._z=e.z*t,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){var t,n=e.elements,r=n[0],i=n[4],a=n[8],s=n[1],o=n[5],l=n[9],h=n[2],c=n[6],e=n[10],n=r+o+e;return 0<n?(n=.5/Math.sqrt(n+1),this._w=.25/n,this._x=(c-l)*n,this._y=(a-h)*n,this._z=(s-i)*n):o<r&&e<r?(t=2*Math.sqrt(1+r-o-e),this._w=(c-l)/t,this._x=.25*t,this._y=(i+s)/t,this._z=(a+h)/t):e<o?(t=2*Math.sqrt(1+o-r-e),this._w=(a-h)/t,this._x=(i+s)/t,this._y=.25*t,this._z=(l+c)/t):(o=2*Math.sqrt(1+e-r-o),this._w=(s-i)/o,this._x=(a+h)/o,this._y=(l+c)/o,this._z=.25*o),this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0):(this._x=0,this._y=-e.z,this._z=e.y)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x),this._w=n,this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(Vn(this.dot(e),-1,1)))}rotateTowards(e,t){var n=this.angleTo(e);if(0===n)return this;n=Math.min(1,t/n);return this.slerp(e,n),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){var e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(this._x=this._x*(e=1/e),this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return void 0!==t?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){var n=e._x,r=e._y,i=e._z,a=e._w,s=t._x,o=t._y,e=t._z,t=t._w;return this._x=n*t+a*s+r*e-i*o,this._y=r*t+a*o+i*s-n*e,this._z=i*t+a*e+n*o-r*s,this._w=a*t-n*s-r*o-i*e,this._onChangeCallback(),this}slerp(e,t){if(0===t)return this;if(1===t)return this.copy(e);var n=this._x,r=this._y,i=this._z,a=this._w;let s=a*e._w+n*e._x+r*e._y+i*e._z;if(s<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,s=-s):this.copy(e),1<=s)return this._w=a,this._x=n,this._y=r,this._z=i,this;var o=1-s*s;if(o<=Number.EPSILON){var l=1-t;return this._w=l*a+t*this._w,this._x=l*n+t*this._x,this._y=l*r+t*this._y,this._z=l*i+t*this._z,this.normalize(),this._onChangeCallback(),this}e=Math.sqrt(o),l=Math.atan2(e,s),o=Math.sin((1-t)*l)/e,e=Math.sin(t*l)/e;return this._w=a*o+this._w*e,this._x=n*o+this._x*e,this._y=r*o+this._y*e,this._z=i*o+this._z*e,this._onChangeCallback(),this}slerpQuaternions(e,t,n){this.copy(e).slerp(t,n)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}ar.prototype.isQuaternion=!0;class sr{constructor(e=0,t=0,n=0){this.x=e,this.y=t,this.z=n}set(e,t,n){return void 0===n&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return void 0!==t?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return void 0!==t?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(lr.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(lr.setFromAxisAngle(e,t))}applyMatrix3(e){var t=this.x,n=this.y,r=this.z,e=e.elements;return this.x=e[0]*t+e[3]*n+e[6]*r,this.y=e[1]*t+e[4]*n+e[7]*r,this.z=e[2]*t+e[5]*n+e[8]*r,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){var t=this.x,n=this.y,r=this.z,i=e.elements,e=1/(i[3]*t+i[7]*n+i[11]*r+i[15]);return this.x=(i[0]*t+i[4]*n+i[8]*r+i[12])*e,this.y=(i[1]*t+i[5]*n+i[9]*r+i[13])*e,this.z=(i[2]*t+i[6]*n+i[10]*r+i[14])*e,this}applyQuaternion(e){var t=this.x,n=this.y,r=this.z,i=e.x,a=e.y,s=e.z,o=e.w,l=o*t+a*r-s*n,h=o*n+s*t-i*r,e=o*r+i*n-a*t,r=-i*t-a*n-s*r;return this.x=l*o+r*-i+h*-s-e*-a,this.y=h*o+r*-a+e*-i-l*-s,this.z=e*o+r*-s+l*-a-h*-i,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){var t=this.x,n=this.y,r=this.z,e=e.elements;return this.x=e[0]*t+e[4]*n+e[8]*r,this.y=e[1]*t+e[5]*n+e[9]*r,this.z=e[2]*t+e[6]*n+e[10]*r,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e,t){return void 0!==t?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){var n=e.x,r=e.y,i=e.z,a=t.x,e=t.y,t=t.z;return this.x=r*t-i*e,this.y=i*a-n*t,this.z=n*e-r*a,this}projectOnVector(e){var t=e.lengthSq();if(0===t)return this.set(0,0,0);t=e.dot(this)/t;return this.copy(e).multiplyScalar(t)}projectOnPlane(e){return or.copy(this).projectOnVector(e),this.sub(or)}reflect(e){return this.sub(or.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){var t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;t=this.dot(e)/t;return Math.acos(Vn(t,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){var t=this.x-e.x,n=this.y-e.y,e=this.z-e.z;return t*t+n*n+e*e}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){var r=Math.sin(t)*e;return this.x=r*Math.sin(n),this.y=Math.cos(t)*e,this.z=r*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){e=e.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(e){var t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),e=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=e,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}sr.prototype.isVector3=!0;const or=new sr,lr=new ar;class hr{constructor(e=new sr(1/0,1/0,1/0),t=new sr(-1/0,-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(n){let r=1/0,i=1/0,a=1/0,s=-1/0,o=-1/0,l=-1/0;for(let e=0,t=n.length;e<t;e+=3){var h=n[e],c=n[e+1],u=n[e+2];h<r&&(r=h),c<i&&(i=c),u<a&&(a=u),h>s&&(s=h),c>o&&(o=c),u>l&&(l=u)}return this.min.set(r,i,a),this.max.set(s,o,l),this}setFromBufferAttribute(n){let r=1/0,i=1/0,a=1/0,s=-1/0,o=-1/0,l=-1/0;for(let e=0,t=n.count;e<t;e++){var h=n.getX(e),c=n.getY(e),u=n.getZ(e);h<r&&(r=h),c<i&&(i=c),u<a&&(a=u),h>s&&(s=h),c>o&&(o=c),u>l&&(l=u)}return this.min.set(r,i,a),this.max.set(s,o,l),this}setFromPoints(n){this.makeEmpty();for(let e=0,t=n.length;e<t;e++)this.expandByPoint(n[e]);return this}setFromCenterAndSize(e,t){t=ur.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(t),this.max.copy(e).add(t),this}setFromObject(e){return this.makeEmpty(),this.expandByObject(e)}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return void 0===e&&(console.warn("THREE.Box3: .getCenter() target is now required"),e=new sr),this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return void 0===e&&(console.warn("THREE.Box3: .getSize() target is now required"),e=new sr),this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e){e.updateWorldMatrix(!1,!1);const t=e.geometry;void 0!==t&&(null===t.boundingBox&&t.computeBoundingBox(),dr.copy(t.boundingBox),dr.applyMatrix4(e.matrixWorld),this.union(dr));var n=e.children;for(let e=0,t=n.length;e<t;e++)this.expandByObject(n[e]);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return void 0===t&&(console.warn("THREE.Box3: .getParameter() target is now required"),t=new sr),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,ur),ur.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return n=0<e.normal.x?(t=e.normal.x*this.min.x,e.normal.x*this.max.x):(t=e.normal.x*this.max.x,e.normal.x*this.min.x),0<e.normal.y?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),0<e.normal.z?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(xr),_r.subVectors(this.max,xr),pr.subVectors(e.a,xr),mr.subVectors(e.b,xr),fr.subVectors(e.c,xr),gr.subVectors(mr,pr),vr.subVectors(fr,mr),yr.subVectors(pr,fr);e=[0,-gr.z,gr.y,0,-vr.z,vr.y,0,-yr.z,yr.y,gr.z,0,-gr.x,vr.z,0,-vr.x,yr.z,0,-yr.x,-gr.y,gr.x,0,-vr.y,vr.x,0,-yr.y,yr.x,0];return!!Mr(e,pr,mr,fr,_r)&&(!!Mr(e=[1,0,0,0,1,0,0,0,1],pr,mr,fr,_r)&&(br.crossVectors(gr,vr),Mr(e=[br.x,br.y,br.z],pr,mr,fr,_r)))}clampPoint(e,t){return void 0===t&&(console.warn("THREE.Box3: .clampPoint() target is now required"),t=new sr),t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){const t=ur.copy(e).clamp(this.min,this.max);return t.sub(e).length()}getBoundingSphere(e){return void 0===e&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(e.center),e.radius=.5*this.getSize(ur).length(),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(cr[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),cr[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),cr[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),cr[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),cr[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),cr[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),cr[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),cr[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(cr)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}hr.prototype.isBox3=!0;const cr=[new sr,new sr,new sr,new sr,new sr,new sr,new sr,new sr],ur=new sr,dr=new hr,pr=new sr,mr=new sr,fr=new sr,gr=new sr,vr=new sr,yr=new sr,xr=new sr,_r=new sr,br=new sr,wr=new sr;function Mr(n,r,i,a,s){for(let e=0,t=n.length-3;e<=t;e+=3){wr.fromArray(n,e);var o=s.x*Math.abs(wr.x)+s.y*Math.abs(wr.y)+s.z*Math.abs(wr.z),l=r.dot(wr),h=i.dot(wr),c=a.dot(wr);if(Math.max(-Math.max(l,h,c),Math.min(l,h,c))>o)return!1}return!0}const Sr=new hr,Tr=new sr,Er=new sr,Ar=new sr;class Lr{constructor(e=new sr,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(n,e){const r=this.center;void 0!==e?r.copy(e):Sr.setFromPoints(n).getCenter(r);let i=0;for(let e=0,t=n.length;e<t;e++)i=Math.max(i,r.distanceToSquared(n[e]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){var n=this.center.distanceToSquared(e);return void 0===t&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),t=new sr),t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return void 0===e&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),e=new hr),this.isEmpty()?e.makeEmpty():(e.set(this.center,this.center),e.expandByScalar(this.radius)),e}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){Ar.subVectors(e,this.center);var t=Ar.lengthSq();return t>this.radius*this.radius&&(t=.5*((e=Math.sqrt(t))-this.radius),this.center.add(Ar.multiplyScalar(t/e)),this.radius+=t),this}union(e){return Er.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(Tr.copy(e.center).add(Er)),this.expandByPoint(Tr.copy(e.center).sub(Er)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const Rr=new sr,Cr=new sr,Pr=new sr,Dr=new sr,Ir=new sr,Nr=new sr,zr=new sr;class Br{constructor(e=new sr,t=new sr(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return void 0===t&&(console.warn("THREE.Ray: .at() target is now required"),t=new sr),t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Rr)),this}closestPointToPoint(e,t){void 0===t&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),t=new sr),t.subVectors(e,this.origin);e=t.dot(this.direction);return e<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(e).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){var t=Rr.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Rr.copy(this.direction).multiplyScalar(t).add(this.origin),Rr.distanceToSquared(e))}distanceSqToSegment(e,t,n,r){Cr.copy(e).add(t).multiplyScalar(.5),Pr.copy(t).sub(e).normalize(),Dr.copy(this.origin).sub(Cr);var i=.5*e.distanceTo(t),a=-this.direction.dot(Pr),s=Dr.dot(this.direction),o=-Dr.dot(Pr),e=Dr.lengthSq(),t=Math.abs(1-a*a);let l,h,c,u;return c=0<t?(l=a*o-s,h=a*s-o,u=i*t,0<=l?h>=-u?h<=u?(t=1/t,l*=t,h*=t,l*(l+a*h+2*s)+h*(a*l+h+2*o)+e):(h=i,l=Math.max(0,-(a*h+s)),-l*l+h*(h+2*o)+e):(h=-i,l=Math.max(0,-(a*h+s)),-l*l+h*(h+2*o)+e):h<=-u?(l=Math.max(0,-(-a*i+s)),h=0<l?-i:Math.min(Math.max(-i,-o),i),-l*l+h*(h+2*o)+e):h<=u?(l=0,h=Math.min(Math.max(-i,-o),i),h*(h+2*o)+e):(l=Math.max(0,-(a*i+s)),h=0<l?i:Math.min(Math.max(-i,-o),i),-l*l+h*(h+2*o)+e)):(h=0<a?-i:i,l=Math.max(0,-(a*h+s)),-l*l+h*(h+2*o)+e),n&&n.copy(this.direction).multiplyScalar(l).add(this.origin),r&&r.copy(Pr).multiplyScalar(h).add(Cr),c}intersectSphere(e,t){Rr.subVectors(e.center,this.origin);var n=Rr.dot(this.direction),r=Rr.dot(Rr)-n*n,e=e.radius*e.radius;if(e<r)return null;e=Math.sqrt(e-r),r=n-e,e=n+e;return r<0&&e<0?null:r<0?this.at(e,t):this.at(r,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){var t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;t=-(this.origin.dot(e.normal)+e.constant)/t;return 0<=t?t:null}intersectPlane(e,t){e=this.distanceToPlane(e);return null===e?null:this.at(e,t)}intersectsPlane(e){var t=e.distanceToPoint(this.origin);return 0===t||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,r,i,a,s,o;var l=1/this.direction.x,h=1/this.direction.y,c=1/this.direction.z,u=this.origin;return r=0<=l?(n=(e.min.x-u.x)*l,(e.max.x-u.x)*l):(n=(e.max.x-u.x)*l,(e.min.x-u.x)*l),a=0<=h?(i=(e.min.y-u.y)*h,(e.max.y-u.y)*h):(i=(e.max.y-u.y)*h,(e.min.y-u.y)*h),n>a||i>r?null:((i>n||n!=n)&&(n=i),(a<r||r!=r)&&(r=a),o=0<=c?(s=(e.min.z-u.z)*c,(e.max.z-u.z)*c):(s=(e.max.z-u.z)*c,(e.min.z-u.z)*c),n>o||s>r?null:((s>n||n!=n)&&(n=s),(o<r||r!=r)&&(r=o),r<0?null:this.at(0<=n?n:r,t)))}intersectsBox(e){return null!==this.intersectBox(e,Rr)}intersectTriangle(e,t,n,r,i){Ir.subVectors(t,e),Nr.subVectors(n,e),zr.crossVectors(Ir,Nr);let a=this.direction.dot(zr),s;if(0<a){if(r)return null;s=1}else{if(!(a<0))return null;s=-1,a=-a}Dr.subVectors(this.origin,e);r=s*this.direction.dot(Nr.crossVectors(Dr,Nr));if(r<0)return null;e=s*this.direction.dot(Ir.cross(Dr));if(e<0)return null;if(r+e>a)return null;e=-s*Dr.dot(zr);return e<0?null:this.at(e/a,i)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class Or{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],0<arguments.length&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,r,i,a,s,o,l,h,c,u,d,p,m,f){const g=this.elements;return g[0]=e,g[4]=t,g[8]=n,g[12]=r,g[1]=i,g[5]=a,g[9]=s,g[13]=o,g[2]=l,g[6]=h,g[10]=c,g[14]=u,g[3]=d,g[7]=p,g[11]=m,g[15]=f,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new Or).fromArray(this.elements)}copy(e){const t=this.elements;e=e.elements;return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){e=e.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements;var n=e.elements,r=1/Fr.setFromMatrixColumn(e,0).length(),i=1/Fr.setFromMatrixColumn(e,1).length(),e=1/Fr.setFromMatrixColumn(e,2).length();return t[0]=n[0]*r,t[1]=n[1]*r,t[2]=n[2]*r,t[3]=0,t[4]=n[4]*i,t[5]=n[5]*i,t[6]=n[6]*i,t[7]=0,t[8]=n[8]*e,t[9]=n[9]*e,t[10]=n[10]*e,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const t=this.elements;var n,r,i,a,s,o,l,h,c,u,d,p=e.x,m=e.y,f=e.z,g=Math.cos(p),v=Math.sin(p),y=Math.cos(m),x=Math.sin(m),p=Math.cos(f),m=Math.sin(f);return"XYZ"===e.order?(n=g*p,i=g*m,r=v*p,f=v*m,t[0]=y*p,t[4]=-y*m,t[8]=x,t[1]=i+r*x,t[5]=n-f*x,t[9]=-v*y,t[2]=f-n*x,t[6]=r+i*x,t[10]=g*y):"YXZ"===e.order?(a=y*p,n=y*m,r=x*p,i=x*m,t[0]=a+i*v,t[4]=r*v-n,t[8]=g*x,t[1]=g*m,t[5]=g*p,t[9]=-v,t[2]=n*v-r,t[6]=i+a*v,t[10]=g*y):"ZXY"===e.order?(l=y*p,a=y*m,s=x*p,o=x*m,t[0]=l-o*v,t[4]=-g*m,t[8]=s+a*v,t[1]=a+s*v,t[5]=g*p,t[9]=o-l*v,t[2]=-g*x,t[6]=v,t[10]=g*y):"ZYX"===e.order?(s=g*p,o=g*m,h=v*p,l=v*m,t[0]=y*p,t[4]=h*x-o,t[8]=s*x+l,t[1]=y*m,t[5]=l*x+s,t[9]=o*x-h,t[2]=-x,t[6]=v*y,t[10]=g*y):"YZX"===e.order?(u=g*y,h=g*x,c=v*y,d=v*x,t[0]=y*p,t[4]=d-u*m,t[8]=c*m+h,t[1]=m,t[5]=g*p,t[9]=-v*p,t[2]=-x*p,t[6]=h*m+c,t[10]=u-d*m):"XZY"===e.order&&(c=g*y,u=g*x,d=v*y,e=v*x,t[0]=y*p,t[4]=-m,t[8]=x*p,t[1]=c*m+e,t[5]=g*p,t[9]=u*m-d,t[2]=d*m-u,t[6]=v*p,t[10]=e*m+c),t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(Ur,e,Gr)}lookAt(e,t,n){const r=this.elements;return Wr.subVectors(e,t),0===Wr.lengthSq()&&(Wr.z=1),Wr.normalize(),Vr.crossVectors(n,Wr),0===Vr.lengthSq()&&(1===Math.abs(n.z)?Wr.x+=1e-4:Wr.z+=1e-4,Wr.normalize(),Vr.crossVectors(n,Wr)),Vr.normalize(),kr.crossVectors(Wr,Vr),r[0]=Vr.x,r[4]=kr.x,r[8]=Wr.x,r[1]=Vr.y,r[5]=kr.y,r[9]=Wr.y,r[2]=Vr.z,r[6]=kr.z,r[10]=Wr.z,this}multiply(e,t){return void 0!==t?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){var n=e.elements,r=t.elements;const i=this.elements;var a=n[0],s=n[4],o=n[8],l=n[12],h=n[1],c=n[5],u=n[9],d=n[13],p=n[2],m=n[6],f=n[10],g=n[14],v=n[3],y=n[7],x=n[11],_=n[15],b=r[0],w=r[4],M=r[8],S=r[12],T=r[1],E=r[5],A=r[9],L=r[13],R=r[2],C=r[6],P=r[10],D=r[14],e=r[3],t=r[7],n=r[11],r=r[15];return i[0]=a*b+s*T+o*R+l*e,i[4]=a*w+s*E+o*C+l*t,i[8]=a*M+s*A+o*P+l*n,i[12]=a*S+s*L+o*D+l*r,i[1]=h*b+c*T+u*R+d*e,i[5]=h*w+c*E+u*C+d*t,i[9]=h*M+c*A+u*P+d*n,i[13]=h*S+c*L+u*D+d*r,i[2]=p*b+m*T+f*R+g*e,i[6]=p*w+m*E+f*C+g*t,i[10]=p*M+m*A+f*P+g*n,i[14]=p*S+m*L+f*D+g*r,i[3]=v*b+y*T+x*R+_*e,i[7]=v*w+y*E+x*C+_*t,i[11]=v*M+y*A+x*P+_*n,i[15]=v*S+y*L+x*D+_*r,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){var e=this.elements,t=e[0],n=e[4],r=e[8],i=e[12],a=e[1],s=e[5],o=e[9],l=e[13],h=e[2],c=e[6],u=e[10],d=e[14];return e[3]*(+i*o*c-r*l*c-i*s*u+n*l*u+r*s*d-n*o*d)+e[7]*(+t*o*d-t*l*u+i*a*u-r*a*d+r*l*h-i*o*h)+e[11]*(+t*l*c-t*s*d-i*a*c+n*a*d+i*s*h-n*l*h)+e[15]*(-r*s*h-t*o*c+t*s*u+r*a*c-n*a*u+n*o*h)}transpose(){const e=this.elements;var t=e[1];return e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const r=this.elements;return e.isVector3?(r[12]=e.x,r[13]=e.y,r[14]=e.z):(r[12]=e,r[13]=t,r[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],r=e[2],i=e[3],a=e[4],s=e[5],o=e[6],l=e[7],h=e[8],c=e[9],u=e[10],d=e[11],p=e[12],m=e[13],f=e[14],g=e[15],v=c*f*l-m*u*l+m*o*d-s*f*d-c*o*g+s*u*g,y=p*u*l-h*f*l-p*o*d+a*f*d+h*o*g-a*u*g,x=h*m*l-p*c*l+p*s*d-a*m*d-h*s*g+a*c*g,_=p*c*o-h*m*o-p*s*u+a*m*u+h*s*f-a*c*f;var b=t*v+n*y+r*x+i*_;if(0==b)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);b=1/b;return e[0]=v*b,e[1]=(m*u*i-c*f*i-m*r*d+n*f*d+c*r*g-n*u*g)*b,e[2]=(s*f*i-m*o*i+m*r*l-n*f*l-s*r*g+n*o*g)*b,e[3]=(c*o*i-s*u*i-c*r*l+n*u*l+s*r*d-n*o*d)*b,e[4]=y*b,e[5]=(h*f*i-p*u*i+p*r*d-t*f*d-h*r*g+t*u*g)*b,e[6]=(p*o*i-a*f*i-p*r*l+t*f*l+a*r*g-t*o*g)*b,e[7]=(a*u*i-h*o*i+h*r*l-t*u*l-a*r*d+t*o*d)*b,e[8]=x*b,e[9]=(p*c*i-h*m*i-p*n*d+t*m*d+h*n*g-t*c*g)*b,e[10]=(a*m*i-p*s*i+p*n*l-t*m*l-a*n*g+t*s*g)*b,e[11]=(h*s*i-a*c*i-h*n*l+t*c*l+a*n*d-t*s*d)*b,e[12]=_*b,e[13]=(h*m*r-p*c*r+p*n*u-t*m*u-h*n*f+t*c*f)*b,e[14]=(p*s*r-a*m*r-p*n*o+t*m*o+a*n*f-t*s*f)*b,e[15]=(a*c*r-h*s*r+h*n*o-t*c*o-a*n*u+t*s*u)*b,this}scale(e){const t=this.elements;var n=e.x,r=e.y,e=e.z;return t[0]*=n,t[4]*=r,t[8]*=e,t[1]*=n,t[5]*=r,t[9]*=e,t[2]*=n,t[6]*=r,t[10]*=e,t[3]*=n,t[7]*=r,t[11]*=e,this}getMaxScaleOnAxis(){var e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],e=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,e))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){var t=Math.cos(e),e=Math.sin(e);return this.set(1,0,0,0,0,t,-e,0,0,e,t,0,0,0,0,1),this}makeRotationY(e){var t=Math.cos(e),e=Math.sin(e);return this.set(t,0,e,0,0,1,0,0,-e,0,t,0,0,0,0,1),this}makeRotationZ(e){var t=Math.cos(e),e=Math.sin(e);return this.set(t,-e,0,0,e,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){var n=Math.cos(t),r=Math.sin(t),i=1-n,a=e.x,s=e.y,o=e.z,t=i*a,e=i*s;return this.set(t*a+n,t*s-r*o,t*o+r*s,0,t*s+r*o,e*s+n,e*o-r*a,0,t*o-r*s,e*o+r*a,i*o*o+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n){return this.set(1,t,n,0,e,1,n,0,e,t,1,0,0,0,0,1),this}compose(e,t,n){const r=this.elements;var i=t._x,a=t._y,s=t._z,o=t._w,l=i+i,h=a+a,c=s+s,u=i*l,d=i*h,p=i*c,t=a*h,i=a*c,a=s*c,s=o*l,l=o*h,h=o*c,o=n.x,c=n.y,n=n.z;return r[0]=(1-(t+a))*o,r[1]=(d+h)*o,r[2]=(p-l)*o,r[3]=0,r[4]=(d-h)*c,r[5]=(1-(u+a))*c,r[6]=(i+s)*c,r[7]=0,r[8]=(p+l)*n,r[9]=(i-s)*n,r[10]=(1-(u+t))*n,r[11]=0,r[12]=e.x,r[13]=e.y,r[14]=e.z,r[15]=1,this}decompose(e,t,n){var r=this.elements;let i=Fr.set(r[0],r[1],r[2]).length();var a=Fr.set(r[4],r[5],r[6]).length(),s=Fr.set(r[8],r[9],r[10]).length();this.determinant()<0&&(i=-i),e.x=r[12],e.y=r[13],e.z=r[14],Hr.copy(this);var o=1/i,e=1/a,r=1/s;return Hr.elements[0]*=o,Hr.elements[1]*=o,Hr.elements[2]*=o,Hr.elements[4]*=e,Hr.elements[5]*=e,Hr.elements[6]*=e,Hr.elements[8]*=r,Hr.elements[9]*=r,Hr.elements[10]*=r,t.setFromRotationMatrix(Hr),n.x=i,n.y=a,n.z=s,this}makePerspective(e,t,n,r,i,a){void 0===a&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const s=this.elements;var o=2*i/(n-r),l=(t+e)/(t-e),n=(n+r)/(n-r),r=-(a+i)/(a-i),a=-2*a*i/(a-i);return s[0]=2*i/(t-e),s[4]=0,s[8]=l,s[12]=0,s[1]=0,s[5]=o,s[9]=n,s[13]=0,s[2]=0,s[6]=0,s[10]=r,s[14]=a,s[3]=0,s[7]=0,s[11]=-1,s[15]=0,this}makeOrthographic(e,t,n,r,i,a){const s=this.elements;var o=1/(t-e),l=1/(n-r),h=1/(a-i),e=(t+e)*o,r=(n+r)*l,i=(a+i)*h;return s[0]=2*o,s[4]=0,s[8]=0,s[12]=-e,s[1]=0,s[5]=2*l,s[9]=0,s[13]=-r,s[2]=0,s[6]=0,s[10]=-2*h,s[14]=-i,s[3]=0,s[7]=0,s[11]=0,s[15]=1,this}equals(e){var t=this.elements,n=e.elements;for(let e=0;e<16;e++)if(t[e]!==n[e])return!1;return!0}fromArray(t,n=0){for(let e=0;e<16;e++)this.elements[e]=t[e+n];return this}toArray(e=[],t=0){var n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}Or.prototype.isMatrix4=!0;const Fr=new sr,Hr=new Or,Ur=new sr(0,0,0),Gr=new sr(1,1,1),Vr=new sr,kr=new sr,Wr=new sr,jr=new Or,qr=new ar;class Xr{constructor(e=0,t=0,n=0,r=Xr.DefaultOrder){this._x=e,this._y=t,this._z=n,this._order=r}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._order=r||this._order,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t,n){var e=e.elements,r=e[0],i=e[4],a=e[8],s=e[1],o=e[5],l=e[9],h=e[2],c=e[6],u=e[10];switch(t=t||this._order){case"XYZ":this._y=Math.asin(Vn(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-l,u),this._z=Math.atan2(-i,r)):(this._x=Math.atan2(c,o),this._z=0);break;case"YXZ":this._x=Math.asin(-Vn(l,-1,1)),Math.abs(l)<.9999999?(this._y=Math.atan2(a,u),this._z=Math.atan2(s,o)):(this._y=Math.atan2(-h,r),this._z=0);break;case"ZXY":this._x=Math.asin(Vn(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(-h,u),this._z=Math.atan2(-i,o)):(this._y=0,this._z=Math.atan2(s,r));break;case"ZYX":this._y=Math.asin(-Vn(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(c,u),this._z=Math.atan2(s,r)):(this._x=0,this._z=Math.atan2(-i,o));break;case"YZX":this._z=Math.asin(Vn(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(-l,o),this._y=Math.atan2(-h,r)):(this._x=0,this._y=Math.atan2(a,u));break;case"XZY":this._z=Math.asin(-Vn(i,-1,1)),Math.abs(i)<.9999999?(this._x=Math.atan2(c,o),this._y=Math.atan2(a,r)):(this._x=Math.atan2(-l,u),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!1!==n&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return jr.makeRotationFromQuaternion(e),this.setFromRotationMatrix(jr,t,n)}setFromVector3(e,t){return this.set(e.x,e.y,e.z,t||this._order)}reorder(e){return qr.setFromEuler(this),this.setFromQuaternion(qr,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}toVector3(e){return e?e.set(this._x,this._y,this._z):new sr(this._x,this._y,this._z)}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}Xr.prototype.isEuler=!0,Xr.DefaultOrder="XYZ",Xr.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class Yr{constructor(){this.mask=1}set(e){this.mask=1<<e|0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return 0!=(this.mask&e.mask)}}let Zr=0;const Jr=new sr,Qr=new ar,Kr=new Or,$r=new sr,ei=new sr,ti=new sr,ni=new ar,ri=new sr(1,0,0),ii=new sr(0,1,0),ai=new sr(0,0,1),si={type:"added"},oi={type:"removed"};class li extends Bn{constructor(){super(),Object.defineProperty(this,"id",{value:Zr++}),this.uuid=Gn(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=li.DefaultUp.clone();var e=new sr;const t=new Xr,n=new ar;var r=new sr(1,1,1);t._onChange(function(){n.setFromEuler(t,!1)}),n._onChange(function(){t.setFromQuaternion(n,void 0,!1)}),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new Or},normalMatrix:{value:new Jn}}),this.matrix=new Or,this.matrixWorld=new Or,this.matrixAutoUpdate=li.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Yr,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Qr.setFromAxisAngle(e,t),this.quaternion.multiply(Qr),this}rotateOnWorldAxis(e,t){return Qr.setFromAxisAngle(e,t),this.quaternion.premultiply(Qr),this}rotateX(e){return this.rotateOnAxis(ri,e)}rotateY(e){return this.rotateOnAxis(ii,e)}rotateZ(e){return this.rotateOnAxis(ai,e)}translateOnAxis(e,t){return Jr.copy(e).applyQuaternion(this.quaternion),this.position.add(Jr.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(ri,e)}translateY(e){return this.translateOnAxis(ii,e)}translateZ(e){return this.translateOnAxis(ai,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(Kr.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?$r.copy(e):$r.set(e,t,n);n=this.parent;this.updateWorldMatrix(!0,!1),ei.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Kr.lookAt(ei,$r,this.up):Kr.lookAt($r,ei,this.up),this.quaternion.setFromRotationMatrix(Kr),n&&(Kr.extractRotation(n.matrixWorld),Qr.setFromRotationMatrix(Kr),this.quaternion.premultiply(Qr.invert()))}add(e){if(1<arguments.length){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return e===this?console.error("THREE.Object3D.add: object can't be added as a child of itself.",e):e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),(e.parent=this).children.push(e),e.dispatchEvent(si)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this}remove(e){if(1<arguments.length){for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}var t=this.children.indexOf(e);return-1!==t&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(oi)),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(oi)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),Kr.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),Kr.multiply(e.parent.matrixWorld)),e.applyMatrix4(Kr),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(n,r){if(this[n]===r)return this;for(let e=0,t=this.children.length;e<t;e++){const a=this.children[e];var i=a.getObjectByProperty(n,r);if(void 0!==i)return i}}getWorldPosition(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),e=new sr),this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),e=new ar),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ei,e,ti),e}getWorldScale(e){return void 0===e&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),e=new sr),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ei,ni,e),e}getWorldDirection(e){void 0===e&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),e=new sr),this.updateWorldMatrix(!0,!1);var t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(n){n(this);const r=this.children;for(let e=0,t=r.length;e<t;e++)r[e].traverse(n)}traverseVisible(n){if(!1!==this.visible){n(this);const r=this.children;for(let e=0,t=r.length;e<t;e++)r[e].traverseVisible(n)}}traverseAncestors(e){const t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(n){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||n)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),n=!(this.matrixWorldNeedsUpdate=!1));const r=this.children;for(let e=0,t=r.length;e<t;e++)r[e].updateMatrixWorld(n)}updateWorldMatrix(e,t){const n=this.parent;if(!0===e&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t){const r=this.children;for(let e=0,t=r.length;e<t;e++)r[e].updateWorldMatrix(!1,!0)}}toJSON(n){var e,t,r,i,a,s=void 0===n||"string"==typeof n;const o={};s&&(n={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},o.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const l={};function h(e,t){return void 0===e[t.uuid]&&(e[t.uuid]=t.toJSON(n)),t.uuid}if(l.uuid=this.uuid,l.type=this.type,""!==this.name&&(l.name=this.name),!0===this.castShadow&&(l.castShadow=!0),!0===this.receiveShadow&&(l.receiveShadow=!0),!1===this.visible&&(l.visible=!1),!1===this.frustumCulled&&(l.frustumCulled=!1),0!==this.renderOrder&&(l.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(l.userData=this.userData),l.layers=this.layers.mask,l.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(l.matrixAutoUpdate=!1),this.isInstancedMesh&&(l.type="InstancedMesh",l.count=this.count,l.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(l.instanceColor=this.instanceColor.toJSON())),this.isMesh||this.isLine||this.isPoints){l.geometry=h(n.geometries,this.geometry);var c=this.geometry.parameters;if(void 0!==c&&void 0!==c.shapes){var u=c.shapes;if(Array.isArray(u))for(let e=0,t=u.length;e<t;e++){var d=u[e];h(n.shapes,d)}else h(n.shapes,u)}}if(this.isSkinnedMesh&&(l.bindMode=this.bindMode,l.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(h(n.skeletons,this.skeleton),l.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const f=[];for(let e=0,t=this.material.length;e<t;e++)f.push(h(n.materials,this.material[e]));l.material=f}else l.material=h(n.materials,this.material);if(0<this.children.length){l.children=[];for(let e=0;e<this.children.length;e++)l.children.push(this.children[e].toJSON(n).object)}if(0<this.animations.length){l.animations=[];for(let e=0;e<this.animations.length;e++){var p=this.animations[e];l.animations.push(h(n.animations,p))}}return s&&(e=m(n.geometries),t=m(n.materials),r=m(n.textures),i=m(n.images),a=m(n.shapes),c=m(n.skeletons),s=m(n.animations),0<e.length&&(o.geometries=e),0<t.length&&(o.materials=t),0<r.length&&(o.textures=r),0<i.length&&(o.images=i),0<a.length&&(o.shapes=a),0<c.length&&(o.skeletons=c),0<s.length&&(o.animations=s)),o.object=l,o;function m(e){const t=[];for(const n in e){const r=e[n];delete r.metadata,t.push(r)}return t}}clone(e){return(new this.constructor).copy(this,e)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let e=0;e<t.children.length;e++){const n=t.children[e];this.add(n.clone())}return this}}li.DefaultUp=new sr(0,1,0),li.DefaultMatrixAutoUpdate=!0,li.prototype.isObject3D=!0;const hi=new sr,ci=new sr,ui=new Jn;class di{constructor(e=new sr(1,0,0),t=0){this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,r){return this.normal.set(e,t,n),this.constant=r,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){t=hi.subVectors(n,t).cross(ci.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(t,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return void 0===t&&(console.warn("THREE.Plane: .projectPoint() target is now required"),t=new sr),t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){void 0===t&&(console.warn("THREE.Plane: .intersectLine() target is now required"),t=new sr);var n=e.delta(hi),r=this.normal.dot(n);if(0===r)return 0===this.distanceToPoint(e.start)?t.copy(e.start):null;r=-(e.start.dot(this.normal)+this.constant)/r;return r<0||1<r?null:t.copy(n).multiplyScalar(r).add(e.start)}intersectsLine(e){var t=this.distanceToPoint(e.start),e=this.distanceToPoint(e.end);return t<0&&0<e||e<0&&0<t}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return void 0===e&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),e=new sr),e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){t=t||ui.getNormalMatrix(e);const n=this.coplanarPoint(hi).applyMatrix4(e);t=this.normal.applyMatrix3(t).normalize();return this.constant=-n.dot(t),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return(new this.constructor).copy(this)}}di.prototype.isPlane=!0;const pi=new sr,mi=new sr,fi=new sr,gi=new sr,vi=new sr,yi=new sr,xi=new sr,_i=new sr,bi=new sr,wi=new sr;class Mi{constructor(e=new sr,t=new sr,n=new sr){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,r){void 0===r&&(console.warn("THREE.Triangle: .getNormal() target is now required"),r=new sr),r.subVectors(n,t),pi.subVectors(e,t),r.cross(pi);t=r.lengthSq();return 0<t?r.multiplyScalar(1/Math.sqrt(t)):r.set(0,0,0)}static getBarycoord(e,t,n,r,i){pi.subVectors(r,t),mi.subVectors(n,t),fi.subVectors(e,t);var a=pi.dot(pi),s=pi.dot(mi),r=pi.dot(fi),n=mi.dot(mi),e=mi.dot(fi),t=a*n-s*s;if(void 0===i&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),i=new sr),0==t)return i.set(-2,-1,-1);t=1/t,n=(n*r-s*e)*t,t*=a*e-s*r;return i.set(1-n-t,t,n)}static containsPoint(e,t,n,r){return this.getBarycoord(e,t,n,r,gi),0<=gi.x&&0<=gi.y&&gi.x+gi.y<=1}static getUV(e,t,n,r,i,a,s,o){return this.getBarycoord(e,t,n,r,gi),o.set(0,0),o.addScaledVector(i,gi.x),o.addScaledVector(a,gi.y),o.addScaledVector(s,gi.z),o}static isFrontFacing(e,t,n,r){return pi.subVectors(n,t),mi.subVectors(e,t),pi.cross(mi).dot(r)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,r){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[r]),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return pi.subVectors(this.c,this.b),mi.subVectors(this.a,this.b),.5*pi.cross(mi).length()}getMidpoint(e){return void 0===e&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),e=new sr),e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Mi.getNormal(this.a,this.b,this.c,e)}getPlane(e){return void 0===e&&(console.warn("THREE.Triangle: .getPlane() target is now required"),e=new di),e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Mi.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,r,i){return Mi.getUV(e,this.a,this.b,this.c,t,n,r,i)}containsPoint(e){return Mi.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Mi.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){void 0===t&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),t=new sr);var n=this.a,r=this.b,i=this.c;let a,s;vi.subVectors(r,n),yi.subVectors(i,n),_i.subVectors(e,n);var o=vi.dot(_i),l=yi.dot(_i);if(o<=0&&l<=0)return t.copy(n);bi.subVectors(e,r);var h=vi.dot(bi),c=yi.dot(bi);if(0<=h&&c<=h)return t.copy(r);var u=o*c-h*l;if(u<=0&&0<=o&&h<=0)return a=o/(o-h),t.copy(n).addScaledVector(vi,a);wi.subVectors(e,i);var d=vi.dot(wi),e=yi.dot(wi);if(0<=e&&d<=e)return t.copy(i);o=d*l-o*e;if(o<=0&&0<=l&&e<=0)return s=l/(l-e),t.copy(n).addScaledVector(yi,s);l=h*e-d*c;if(l<=0&&0<=c-h&&0<=d-e)return xi.subVectors(i,r),s=(c-h)/(c-h+(d-e)),t.copy(r).addScaledVector(xi,s);l=1/(l+o+u);return a=o*l,s=u*l,t.copy(n).addScaledVector(vi,a).addScaledVector(yi,s)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let Si=0;function Ti(){Object.defineProperty(this,"id",{value:Si++}),this.uuid=Gn(),this.name="",this.type="Material",this.fog=!0,this.blending=J,this.side=R,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=ce,this.blendDst=ue,this.blendEquation=te,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=_e,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Sn,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=cn,this.stencilZFail=cn,this.stencilZPass=cn,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}Ti.prototype=Object.assign(Object.create(Bn.prototype),{constructor:Ti,isMaterial:!0,onBuild:function(){},onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(e){if(void 0!==e)for(const n in e){var t=e[n];if(void 0!==t)if("shading"!==n){const r=this[n];void 0!==r?r&&r.isColor?r.set(t):r&&r.isVector3&&t&&t.isVector3?r.copy(t):this[n]=t:console.warn("THREE."+this.type+": '"+n+"' is not a property of this material.")}else console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=t===l;else console.warn("THREE.Material: '"+n+"' parameter is undefined.")}},toJSON:function(e){var t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function r(e){const t=[];for(const n in e){const r=e[n];delete r.metadata,t.push(r)}return t}return n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(n.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine&&(n.combine=this.combine)),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(n.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==J&&(n.blending=this.blending),this.side!==R&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),0<this.alphaTest&&(n.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(n.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),1<this.wireframeLinewidth&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(n.morphTargets=!0),!0===this.morphNormals&&(n.morphNormals=!0),!0===this.skinning&&(n.skinning=!0),!0===this.flatShading&&(n.flatShading=this.flatShading),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),t&&(t=r(e.textures),e=r(e.images),0<t.length&&(n.textures=t),0<e.length&&(n.images=e)),n},clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(null!==t){var r=t.length;n=new Array(r);for(let e=0;e!==r;++e)n[e]=t[e].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(Ti.prototype,"needsUpdate",{set:function(e){!0===e&&this.version++}});const Ei={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Ai={h:0,s:0,l:0},Li={h:0,s:0,l:0};function Ri(e,t,n){return n<0&&(n+=1),1<n&&--n,n<1/6?e+6*(t-e)*n:n<.5?t:n<2/3?e+6*(t-e)*(2/3-n):e}function Ci(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function Pi(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}class Di{constructor(e,t,n){return void 0===t&&void 0===n?this.set(e):this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this}setRGB(e,t,n){return this.r=e,this.g=t,this.b=n,this}setHSL(e,t,n){return e=kn(e,1),t=Vn(t,0,1),n=Vn(n,0,1),0===t?this.r=this.g=this.b=n:(this.r=Ri(t=2*n-(n=n<=.5?n*(1+t):n+t-n*t),n,e+1/3),this.g=Ri(t,n,e),this.b=Ri(t,n,e-1/3)),this}setStyle(t){function n(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let r;if(r=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(t)){let e;var i=r[1],a=r[2];switch(i){case"rgb":case"rgba":if(e=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(e[1],10))/255,this.g=Math.min(255,parseInt(e[2],10))/255,this.b=Math.min(255,parseInt(e[3],10))/255,n(e[4]),this;if(e=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(e[1],10))/100,this.g=Math.min(100,parseInt(e[2],10))/100,this.b=Math.min(100,parseInt(e[3],10))/100,n(e[4]),this;break;case"hsl":case"hsla":if(e=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){var s=parseFloat(e[1])/360,o=parseInt(e[2],10)/100,l=parseInt(e[3],10)/100;return n(e[4]),this.setHSL(s,o,l)}}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(t)){const e=r[1];i=e.length;if(3===i)return this.r=parseInt(e.charAt(0)+e.charAt(0),16)/255,this.g=parseInt(e.charAt(1)+e.charAt(1),16)/255,this.b=parseInt(e.charAt(2)+e.charAt(2),16)/255,this;if(6===i)return this.r=parseInt(e.charAt(0)+e.charAt(1),16)/255,this.g=parseInt(e.charAt(2)+e.charAt(3),16)/255,this.b=parseInt(e.charAt(4)+e.charAt(5),16)/255,this}return t&&0<t.length?this.setColorName(t):this}setColorName(e){var t=Ei[e.toLowerCase()];return void 0!==t?this.setHex(t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copyGammaToLinear(e,t=2){return this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this}copyLinearToGamma(e,t=2){t=0<t?1/t:1;return this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this}convertGammaToLinear(e){return this.copyGammaToLinear(this,e),this}convertLinearToGamma(e){return this.copyLinearToGamma(this,e),this}copySRGBToLinear(e){return this.r=Ci(e.r),this.g=Ci(e.g),this.b=Ci(e.b),this}copyLinearToSRGB(e){return this.r=Pi(e.r),this.g=Pi(e.g),this.b=Pi(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(e){void 0===e&&(console.warn("THREE.Color: .getHSL() target is now required"),e={h:0,s:0,l:0});var t=this.r,n=this.g,r=this.b,i=Math.max(t,n,r),a=Math.min(t,n,r);let s,o;var l=(a+i)/2;if(a===i)s=0,o=0;else{var h=i-a;switch(o=l<=.5?h/(i+a):h/(2-i-a),i){case t:s=(n-r)/h+(n<r?6:0);break;case n:s=(r-t)/h+2;break;case r:s=(t-n)/h+4}s/=6}return e.h=s,e.s=o,e.l=l,e}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(e,t,n){return this.getHSL(Ai),Ai.h+=e,Ai.s+=t,Ai.l+=n,this.setHSL(Ai.h,Ai.s,Ai.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(Ai),e.getHSL(Li);var n=Wn(Ai.h,Li.h,t),e=Wn(Ai.s,Li.s,t),t=Wn(Ai.l,Li.l,t);return this.setHSL(n,e,t),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),!0===e.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}Di.NAMES=Ei,Di.prototype.isColor=!0,Di.prototype.r=1,Di.prototype.g=1,Di.prototype.b=1;class Ii extends Ti{constructor(e){super(),this.type="MeshBasicMaterial",this.color=new Di(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=S,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this}}Ii.prototype.isMeshBasicMaterial=!0;const Ni=new sr,zi=new Zn;class Bi{constructor(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=!0===n,this.usage=Tn,this.updateRange={offset:0,count:-1},this.version=0,this.onUploadCallback=function(){}}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(n,r,i){n*=this.itemSize,i*=r.itemSize;for(let e=0,t=this.itemSize;e<t;e++)this.array[n+e]=r.array[i+e];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(n){const r=this.array;let i=0;for(let t=0,e=n.length;t<e;t++){let e=n[t];void 0===e&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",t),e=new Di),r[i++]=e.r,r[i++]=e.g,r[i++]=e.b}return this}copyVector2sArray(n){const r=this.array;let i=0;for(let t=0,e=n.length;t<e;t++){let e=n[t];void 0===e&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",t),e=new Zn),r[i++]=e.x,r[i++]=e.y}return this}copyVector3sArray(n){const r=this.array;let i=0;for(let t=0,e=n.length;t<e;t++){let e=n[t];void 0===e&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",t),e=new sr),r[i++]=e.x,r[i++]=e.y,r[i++]=e.z}return this}copyVector4sArray(n){const r=this.array;let i=0;for(let t=0,e=n.length;t<e;t++){let e=n[t];void 0===e&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",t),e=new nr),r[i++]=e.x,r[i++]=e.y,r[i++]=e.z,r[i++]=e.w}return this}applyMatrix3(n){if(2===this.itemSize)for(let e=0,t=this.count;e<t;e++)zi.fromBufferAttribute(this,e),zi.applyMatrix3(n),this.setXY(e,zi.x,zi.y);else if(3===this.itemSize)for(let e=0,t=this.count;e<t;e++)Ni.fromBufferAttribute(this,e),Ni.applyMatrix3(n),this.setXYZ(e,Ni.x,Ni.y,Ni.z);return this}applyMatrix4(n){for(let e=0,t=this.count;e<t;e++)Ni.x=this.getX(e),Ni.y=this.getY(e),Ni.z=this.getZ(e),Ni.applyMatrix4(n),this.setXYZ(e,Ni.x,Ni.y,Ni.z);return this}applyNormalMatrix(n){for(let e=0,t=this.count;e<t;e++)Ni.x=this.getX(e),Ni.y=this.getY(e),Ni.z=this.getZ(e),Ni.applyNormalMatrix(n),this.setXYZ(e,Ni.x,Ni.y,Ni.z);return this}transformDirection(n){for(let e=0,t=this.count;e<t;e++)Ni.x=this.getX(e),Ni.y=this.getY(e),Ni.z=this.getZ(e),Ni.transformDirection(n),this.setXYZ(e,Ni.x,Ni.y,Ni.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){return this.array[e*this.itemSize]}setX(e,t){return this.array[e*this.itemSize]=t,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,t){return this.array[e*this.itemSize+1]=t,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,t){return this.array[e*this.itemSize+2]=t,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,t){return this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this}setXYZW(e,t,n,r,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this.array[e+3]=i,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),this.usage!==Tn&&(e.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(e.updateRange=this.updateRange),e}}Bi.prototype.isBufferAttribute=!0;class Oi extends Bi{constructor(e,t,n){super(new Int8Array(e),t,n)}}class Fi extends Bi{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class Hi extends Bi{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class Ui extends Bi{constructor(e,t,n){super(new Int16Array(e),t,n)}}class Gi extends Bi{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class Vi extends Bi{constructor(e,t,n){super(new Int32Array(e),t,n)}}class ki extends Bi{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class Wi extends Bi{constructor(e,t,n){super(new Uint16Array(e),t,n)}}Wi.prototype.isFloat16BufferAttribute=!0;class ji extends Bi{constructor(e,t,n){super(new Float32Array(e),t,n)}}class qi extends Bi{constructor(e,t,n){super(new Float64Array(e),t,n)}}function Xi(n){if(0===n.length)return-1/0;let r=n[0];for(let e=1,t=n.length;e<t;++e)n[e]>r&&(r=n[e]);return r}const Yi={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function Zi(e,t){return new Yi[e](t)}let Ji=0;const Qi=new Or,Ki=new li,$i=new sr,ea=new hr,ta=new hr,na=new sr;class ra extends Bn{constructor(){super(),Object.defineProperty(this,"id",{value:Ji++}),this.uuid=Gn(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(65535<Xi(e)?ki:Gi)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return void 0!==this.attributes[e]}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;var r;void 0!==n&&(r=(new Jn).getNormalMatrix(e),n.applyNormalMatrix(r),n.needsUpdate=!0);const i=this.attributes.tangent;return void 0!==i&&(i.transformDirection(e),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}rotateX(e){return Qi.makeRotationX(e),this.applyMatrix4(Qi),this}rotateY(e){return Qi.makeRotationY(e),this.applyMatrix4(Qi),this}rotateZ(e){return Qi.makeRotationZ(e),this.applyMatrix4(Qi),this}translate(e,t,n){return Qi.makeTranslation(e,t,n),this.applyMatrix4(Qi),this}scale(e,t,n){return Qi.makeScale(e,t,n),this.applyMatrix4(Qi),this}lookAt(e){return Ki.lookAt(e),Ki.updateMatrix(),this.applyMatrix4(Ki.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter($i).negate(),this.translate($i.x,$i.y,$i.z),this}setFromPoints(n){const r=[];for(let e=0,t=n.length;e<t;e++){var i=n[e];r.push(i.x,i.y,i.z||0)}return this.setAttribute("position",new ji(r,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new hr);var e=this.attributes.position,n=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new sr(-1/0,-1/0,-1/0),new sr(1/0,1/0,1/0));if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),n)for(let e=0,t=n.length;e<t;e++){var r=n[e];ea.setFromBufferAttribute(r),this.morphTargetsRelative?(na.addVectors(this.boundingBox.min,ea.min),this.boundingBox.expandByPoint(na),na.addVectors(this.boundingBox.max,ea.max),this.boundingBox.expandByPoint(na)):(this.boundingBox.expandByPoint(ea.min),this.boundingBox.expandByPoint(ea.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new Lr);var r=this.attributes.position,i=this.morphAttributes.position;if(r&&r.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new sr,1/0);if(r){const l=this.boundingSphere.center;if(ea.setFromBufferAttribute(r),i)for(let e=0,t=i.length;e<t;e++){var a=i[e];ta.setFromBufferAttribute(a),this.morphTargetsRelative?(na.addVectors(ea.min,ta.min),ea.expandByPoint(na),na.addVectors(ea.max,ta.max),ea.expandByPoint(na)):(ea.expandByPoint(ta.min),ea.expandByPoint(ta.max))}ea.getCenter(l);let n=0;for(let e=0,t=r.count;e<t;e++)na.fromBufferAttribute(r,e),n=Math.max(n,l.distanceToSquared(na));if(i)for(let e=0,t=i.length;e<t;e++){var s=i[e],o=this.morphTargetsRelative;for(let e=0,t=s.count;e<t;e++)na.fromBufferAttribute(s,e),o&&($i.fromBufferAttribute(r,e),na.add($i)),n=Math.max(n,l.distanceToSquared(na))}this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeFaceNormals(){}computeTangents(){var e=this.index,t=this.attributes;if(null!==e&&void 0!==t.position&&void 0!==t.normal&&void 0!==t.uv){var r=e.array;const c=t.position.array,u=t.normal.array,d=t.uv.array;var i=c.length/3;void 0===t.tangent&&this.setAttribute("tangent",new Bi(new Float32Array(4*i),4));const p=t.tangent.array,m=[],f=[];for(let e=0;e<i;e++)m[e]=new sr,f[e]=new sr;const g=new sr,v=new sr,y=new sr,x=new Zn,_=new Zn,b=new Zn,w=new sr,M=new sr;let n=this.groups;0===n.length&&(n=[{start:0,count:r.length}]);for(let e=0,t=n.length;e<t;++e){var a=n[e],s=a.start,a=a.count;for(let e=s,t=s+a;e<t;e+=3)!function(e,t,n){g.fromArray(c,3*e),v.fromArray(c,3*t),y.fromArray(c,3*n),x.fromArray(d,2*e),_.fromArray(d,2*t),b.fromArray(d,2*n),v.sub(g),y.sub(g),_.sub(x),b.sub(x);var r=1/(_.x*b.y-b.x*_.y);isFinite(r)&&(w.copy(v).multiplyScalar(b.y).addScaledVector(y,-_.y).multiplyScalar(r),M.copy(y).multiplyScalar(_.x).addScaledVector(v,-b.x).multiplyScalar(r),m[e].add(w),m[t].add(w),m[n].add(w),f[e].add(M),f[t].add(M),f[n].add(M))}(r[e+0],r[e+1],r[e+2])}const S=new sr,T=new sr,E=new sr,A=new sr;for(let e=0,t=n.length;e<t;++e){var o=n[e],l=o.start,o=o.count;for(let e=l,t=l+o;e<t;e+=3)h(r[e+0]),h(r[e+1]),h(r[e+2])}function h(e){E.fromArray(u,3*e),A.copy(E);var t=m[e];S.copy(t),S.sub(E.multiplyScalar(E.dot(t))).normalize(),T.crossVectors(A,t);t=T.dot(f[e])<0?-1:1;p[4*e]=S.x,p[4*e+1]=S.y,p[4*e+2]=S.z,p[4*e+3]=t}}else console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)")}computeVertexNormals(){const r=this.index;var i=this.getAttribute("position");if(void 0!==i){let n=this.getAttribute("normal");if(void 0===n)n=new Bi(new Float32Array(3*i.count),3),this.setAttribute("normal",n);else for(let e=0,t=n.count;e<t;e++)n.setXYZ(e,0,0,0);const l=new sr,h=new sr,c=new sr,u=new sr,d=new sr,p=new sr,m=new sr,f=new sr;if(r)for(let e=0,t=r.count;e<t;e+=3){var a=r.getX(e+0),s=r.getX(e+1),o=r.getX(e+2);l.fromBufferAttribute(i,a),h.fromBufferAttribute(i,s),c.fromBufferAttribute(i,o),m.subVectors(c,h),f.subVectors(l,h),m.cross(f),u.fromBufferAttribute(n,a),d.fromBufferAttribute(n,s),p.fromBufferAttribute(n,o),u.add(m),d.add(m),p.add(m),n.setXYZ(a,u.x,u.y,u.z),n.setXYZ(s,d.x,d.y,d.z),n.setXYZ(o,p.x,p.y,p.z)}else for(let e=0,t=i.count;e<t;e+=3)l.fromBufferAttribute(i,e+0),h.fromBufferAttribute(i,e+1),c.fromBufferAttribute(i,e+2),m.subVectors(c,h),f.subVectors(l,h),m.cross(f),n.setXYZ(e+0,m.x,m.y,m.z),n.setXYZ(e+1,m.x,m.y,m.z),n.setXYZ(e+2,m.x,m.y,m.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(e,t){if(e&&e.isBufferGeometry){void 0===t&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));var n=this.attributes;for(const s in n)if(void 0!==e.attributes[s]){const o=n[s].array;var r=e.attributes[s],i=r.array,r=r.itemSize*t,a=Math.min(i.length,o.length-r);for(let e=0,t=r;e<a;e++,t++)o[t]=i[e]}return this}console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e)}normalizeNormals(){const n=this.attributes.normal;for(let e=0,t=n.count;e<t;e++)na.fromBufferAttribute(n,e),na.normalize(),n.setXYZ(e,na.x,na.y,na.z)}toNonIndexed(){function n(e,n){const r=e.array;var i=e.itemSize,e=e.normalized;const a=new r.constructor(n.length*i);let s=0,o=0;for(let e=0,t=n.length;e<t;e++){s=n[e]*i;for(let e=0;e<i;e++)a[o++]=r[s++]}return new Bi(a,i,e)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const r=new ra;var i=this.index.array,e=this.attributes;for(const c in e){var t=n(e[c],i);r.setAttribute(c,t)}var a=this.morphAttributes;for(const u in a){const d=[];var s=a[u];for(let e=0,t=s.length;e<t;e++){var o=n(s[e],i);d.push(o)}r.morphAttributes[u]=d}r.morphTargetsRelative=this.morphTargetsRelative;var l=this.groups;for(let e=0,t=l.length;e<t;e++){var h=l[e];r.addGroup(h.start,h.count,h.materialIndex)}return r}toJSON(){const n={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),0<Object.keys(this.userData).length&&(n.userData=this.userData),void 0!==this.parameters){var e=this.parameters;for(const l in e)void 0!==e[l]&&(n[l]=e[l]);return n}n.data={attributes:{}};var t=this.index;null!==t&&(n.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});var r=this.attributes;for(const h in r){const c=r[h];n.data.attributes[h]=c.toJSON(n.data)}const i={};let a=!1;for(const u in this.morphAttributes){var s=this.morphAttributes[u];const d=[];for(let e=0,t=s.length;e<t;e++){const p=s[e];d.push(p.toJSON(n.data))}0<d.length&&(i[u]=d,a=!0)}a&&(n.data.morphAttributes=i,n.data.morphTargetsRelative=this.morphTargetsRelative);t=this.groups;0<t.length&&(n.data.groups=JSON.parse(JSON.stringify(t)));const o=this.boundingSphere;return null!==o&&(n.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),n}clone(){return(new ra).copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;var n={};this.name=e.name;const t=e.index;null!==t&&this.setIndex(t.clone(n));var r=e.attributes;for(const h in r){const c=r[h];this.setAttribute(h,c.clone(n))}var i=e.morphAttributes;for(const u in i){const d=[],p=i[u];for(let e=0,t=p.length;e<t;e++)d.push(p[e].clone(n));this.morphAttributes[u]=d}this.morphTargetsRelative=e.morphTargetsRelative;var a=e.groups;for(let e=0,t=a.length;e<t;e++){var s=a[e];this.addGroup(s.start,s.count,s.materialIndex)}const o=e.boundingBox;null!==o&&(this.boundingBox=o.clone());const l=e.boundingSphere;return null!==l&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}ra.prototype.isBufferGeometry=!0;const ia=new Or,aa=new Br,sa=new Lr,oa=new sr,la=new sr,ha=new sr,ca=new sr,ua=new sr,da=new sr,pa=new sr,ma=new sr,fa=new sr,ga=new Zn,va=new Zn,ya=new Zn,xa=new sr,_a=new sr;class ba extends li{constructor(e=new ra,t=new Ii){super(),this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){var e=this.geometry;if(e.isBufferGeometry){var t=e.morphAttributes,n=Object.keys(t);if(0<n.length){var r=t[n[0]];if(void 0!==r){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=r.length;e<t;e++){var i=r[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=e}}}}else{e=e.morphTargets;void 0!==e&&0<e.length&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(r,i){const e=this.geometry;var a=this.material,t=this.matrixWorld;if(void 0!==a&&(null===e.boundingSphere&&e.computeBoundingSphere(),sa.copy(e.boundingSphere),sa.applyMatrix4(t),!1!==r.ray.intersectsSphere(sa)&&(ia.copy(t).invert(),aa.copy(r.ray).applyMatrix4(ia),null===e.boundingBox||!1!==aa.intersectsBox(e.boundingBox)))){let n;if(e.isBufferGeometry){const z=e.index;var s=e.attributes.position,o=e.morphAttributes.position,l=e.morphTargetsRelative,h=e.attributes.uv,c=e.attributes.uv2,u=e.groups,d=e.drawRange;if(null!==z)if(Array.isArray(a))for(let e=0,t=u.length;e<t;e++){var p=u[e],m=a[p.materialIndex],f=Math.max(p.start,d.start),g=Math.min(p.start+p.count,d.start+d.count);for(let e=f,t=g;e<t;e+=3){var v=z.getX(e),y=z.getX(e+1),x=z.getX(e+2);n=wa(this,m,r,aa,s,o,l,h,c,v,y,x),n&&(n.faceIndex=Math.floor(e/3),n.face.materialIndex=p.materialIndex,i.push(n))}}else{var _=Math.max(0,d.start),b=Math.min(z.count,d.start+d.count);for(let e=_,t=b;e<t;e+=3){var w=z.getX(e),M=z.getX(e+1),S=z.getX(e+2);n=wa(this,a,r,aa,s,o,l,h,c,w,M,S),n&&(n.faceIndex=Math.floor(e/3),i.push(n))}}else if(void 0!==s)if(Array.isArray(a))for(let e=0,t=u.length;e<t;e++){var T=u[e],E=a[T.materialIndex],A=Math.max(T.start,d.start),L=Math.min(T.start+T.count,d.start+d.count);for(let e=A,t=L;e<t;e+=3){var R=e,C=e+1,P=e+2;n=wa(this,E,r,aa,s,o,l,h,c,R,C,P),n&&(n.faceIndex=Math.floor(e/3),n.face.materialIndex=T.materialIndex,i.push(n))}}else{_=Math.max(0,d.start),b=Math.min(s.count,d.start+d.count);for(let e=_,t=b;e<t;e+=3){var D=e,I=e+1,N=e+2;n=wa(this,a,r,aa,s,o,l,h,c,D,I,N),n&&(n.faceIndex=Math.floor(e/3),i.push(n))}}}else e.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}}function wa(e,t,n,r,i,a,s,o,l,h,c,u){oa.fromBufferAttribute(i,h),la.fromBufferAttribute(i,c),ha.fromBufferAttribute(i,u);var d=e.morphTargetInfluences;if(t.morphTargets&&a&&d){pa.set(0,0,0),ma.set(0,0,0),fa.set(0,0,0);for(let e=0,t=a.length;e<t;e++){var p=d[e],m=a[e];0!==p&&(ca.fromBufferAttribute(m,h),ua.fromBufferAttribute(m,c),da.fromBufferAttribute(m,u),s?(pa.addScaledVector(ca,p),ma.addScaledVector(ua,p),fa.addScaledVector(da,p)):(pa.addScaledVector(ca.sub(oa),p),ma.addScaledVector(ua.sub(la),p),fa.addScaledVector(da.sub(ha),p)))}oa.add(pa),la.add(ma),ha.add(fa)}e.isSkinnedMesh&&t.skinning&&(e.boneTransform(h,oa),e.boneTransform(c,la),e.boneTransform(u,ha));const f=function(e,t,n,r,i,a,s,o){let l;return l=t.side===X?r.intersectTriangle(s,a,i,!0,o):r.intersectTriangle(i,a,s,t.side!==Y,o),null===l?null:(_a.copy(o),_a.applyMatrix4(e.matrixWorld),(o=n.ray.origin.distanceTo(_a))<n.near||o>n.far?null:{distance:o,point:_a.clone(),object:e})}(e,t,n,r,oa,la,ha,xa);return f&&(o&&(ga.fromBufferAttribute(o,h),va.fromBufferAttribute(o,c),ya.fromBufferAttribute(o,u),f.uv=Mi.getUV(xa,oa,la,ha,ga,va,ya,new Zn)),l&&(ga.fromBufferAttribute(l,h),va.fromBufferAttribute(l,c),ya.fromBufferAttribute(l,u),f.uv2=Mi.getUV(xa,oa,la,ha,ga,va,ya,new Zn)),l={a:h,b:c,c:u,normal:new sr,materialIndex:0},Mi.getNormal(oa,la,ha,l.normal),f.face=l),f}ba.prototype.isMesh=!0;class Ma extends ra{constructor(e=1,t=1,n=1,r=1,i=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:r,heightSegments:i,depthSegments:a};const A=this;r=Math.floor(r),i=Math.floor(i),a=Math.floor(a);const L=[],R=[],C=[],P=[];let D=0,I=0;function s(n,r,i,a,s,e,t,o,l,h,c){var u=e/l,d=t/h,p=e/2,m=t/2,f=o/2,g=l+1,v=h+1;let y=0,x=0;const _=new sr;for(let t=0;t<v;t++){var b=t*d-m;for(let e=0;e<g;e++){var w=e*u-p;_[n]=w*a,_[r]=b*s,_[i]=f,R.push(_.x,_.y,_.z),_[n]=0,_[r]=0,_[i]=0<o?1:-1,C.push(_.x,_.y,_.z),P.push(e/l),P.push(1-t/h),y+=1}}for(let t=0;t<h;t++)for(let e=0;e<l;e++){var M=D+e+g*t,S=D+e+g*(t+1),T=D+(e+1)+g*(t+1),E=D+(e+1)+g*t;L.push(M,S,E),L.push(S,T,E),x+=6}A.addGroup(I,x,c),I+=x,D+=y}s("z","y","x",-1,-1,n,t,e,a,i,0),s("z","y","x",1,-1,n,t,-e,a,i,1),s("x","z","y",1,1,e,n,t,r,a,2),s("x","z","y",1,-1,e,n,-t,r,a,3),s("x","y","z",1,-1,e,t,n,r,i,4),s("x","y","z",-1,-1,e,t,-n,r,i,5),this.setIndex(L),this.setAttribute("position",new ji(R,3)),this.setAttribute("normal",new ji(C,3)),this.setAttribute("uv",new ji(P,2))}}function Sa(e){const t={};for(const n in e){t[n]={};for(const r in e[n]){const i=e[n][r];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?t[n][r]=i.clone():Array.isArray(i)?t[n][r]=i.slice():t[n][r]=i}}return t}function Ta(t){const n={};for(let e=0;e<t.length;e++){var r=Sa(t[e]);for(const i in r)n[i]=r[i]}return n}const Ea={clone:Sa,merge:Ta};class Aa extends Ti{constructor(e){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&(void 0!==e.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Sa(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const r in this.uniforms){const i=this.uniforms[r].value;i&&i.isTexture?t.uniforms[r]={type:"t",value:i.toJSON(e).uuid}:i&&i.isColor?t.uniforms[r]={type:"c",value:i.getHex()}:i&&i.isVector2?t.uniforms[r]={type:"v2",value:i.toArray()}:i&&i.isVector3?t.uniforms[r]={type:"v3",value:i.toArray()}:i&&i.isVector4?t.uniforms[r]={type:"v4",value:i.toArray()}:i&&i.isMatrix3?t.uniforms[r]={type:"m3",value:i.toArray()}:i&&i.isMatrix4?t.uniforms[r]={type:"m4",value:i.toArray()}:t.uniforms[r]={value:i}}0<Object.keys(this.defines).length&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const a in this.extensions)!0===this.extensions[a]&&(n[a]=!0);return 0<Object.keys(n).length&&(t.extensions=n),t}}Aa.prototype.isShaderMaterial=!0;class La extends li{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new Or,this.projectionMatrix=new Or,this.projectionMatrixInverse=new Or}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){void 0===e&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),e=new sr),this.updateWorldMatrix(!0,!1);var t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}La.prototype.isCamera=!0;class Ra extends La{constructor(e=50,t=1,n=.1,r=2e3){super(),this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=r,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){e=.5*this.getFilmHeight()/e;this.fov=2*Un*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){var e=Math.tan(.5*Hn*this.fov);return.5*this.getFilmHeight()/e}getEffectiveFOV(){return 2*Un*Math.atan(Math.tan(.5*Hn*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,r,i,a){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){var e=this.near;let t=e*Math.tan(.5*Hn*this.fov)/this.zoom,n=2*t,r=this.aspect*n,i=-.5*r;var a,s=this.view;null!==this.view&&this.view.enabled&&(a=s.fullWidth,o=s.fullHeight,i+=s.offsetX*r/a,t-=s.offsetY*n/o,r*=s.width/a,n*=s.height/o);var o=this.filmOffset;0!==o&&(i+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+r,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}Ra.prototype.isPerspectiveCamera=!0;class Ca extends li{constructor(e,t,n){if(super(),this.type="CubeCamera",!0===n.isWebGLCubeRenderTarget){this.renderTarget=n;const r=new Ra(90,1,e,t);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new sr(1,0,0)),this.add(r);const i=new Ra(90,1,e,t);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new sr(-1,0,0)),this.add(i);const a=new Ra(90,1,e,t);a.layers=this.layers,a.up.set(0,0,1),a.lookAt(new sr(0,1,0)),this.add(a);const s=new Ra(90,1,e,t);s.layers=this.layers,s.up.set(0,0,-1),s.lookAt(new sr(0,-1,0)),this.add(s);const o=new Ra(90,1,e,t);o.layers=this.layers,o.up.set(0,-1,0),o.lookAt(new sr(0,0,1)),this.add(o);const l=new Ra(90,1,e,t);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new sr(0,0,-1)),this.add(l)}else console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.")}update(e,t){null===this.parent&&this.updateMatrixWorld();const n=this.renderTarget;var[r,i,a,s,o,l]=this.children,h=e.xr.enabled,c=e.getRenderTarget();e.xr.enabled=!1;var u=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,r),e.setRenderTarget(n,1),e.render(t,i),e.setRenderTarget(n,2),e.render(t,a),e.setRenderTarget(n,3),e.render(t,s),e.setRenderTarget(n,4),e.render(t,o),n.texture.generateMipmaps=u,e.setRenderTarget(n,5),e.render(t,l),e.setRenderTarget(c),e.xr.enabled=h}}class Pa extends er{constructor(e,t,n,r,i,a,s,o,l,h){super(e=void 0!==e?e:[],t=void 0!==t?t:z,n,r,i,a,s=void 0!==s?s:Oe,o,l,h),this._needsFlipEnvMap=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}Pa.prototype.isCubeTexture=!0;class Da extends rr{constructor(e,t,n){Number.isInteger(t)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),t=n),super(e,e,t),t=t||{},this.texture=new Pa(void 0,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.generateMipmaps=void 0!==t.generateMipmaps&&t.generateMipmaps,this.texture.minFilter=void 0!==t.minFilter?t.minFilter:Ae,this.texture._needsFlipEnvMap=!1}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.format=Fe,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;var n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},r=new Ma(5,5,5);const i=new Aa({name:"CubemapFromEquirect",uniforms:Sa(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:X,blending:Z});i.uniforms.tEquirect.value=t;const a=new ba(r,i);r=t.minFilter;t.minFilter===Re&&(t.minFilter=Ae);const s=new Ca(1,10,this);return s.update(e,a),t.minFilter=r,a.geometry.dispose(),a.material.dispose(),this}clear(t,n,r,i){var e=t.getRenderTarget();for(let e=0;e<6;e++)t.setRenderTarget(this,e),t.clear(n,r,i);t.setRenderTarget(e)}}Da.prototype.isWebGLCubeRenderTarget=!0;class Ia extends er{constructor(e,t,n,r,i,a,s,o,l,h,c,u){super(null,a,s,o,l,h,r,i,c,u),this.image={data:e||null,width:t||1,height:n||1},this.magFilter=void 0!==l?l:V,this.minFilter=void 0!==h?h:V,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}Ia.prototype.isDataTexture=!0;const Na=new Lr,za=new sr;class Ba{constructor(e=new di,t=new di,n=new di,r=new di,i=new di,a=new di){this.planes=[e,t,n,r,i,a]}set(e,t,n,r,i,a){const s=this.planes;return s[0].copy(e),s[1].copy(t),s[2].copy(n),s[3].copy(r),s[4].copy(i),s[5].copy(a),this}copy(t){const n=this.planes;for(let e=0;e<6;e++)n[e].copy(t.planes[e]);return this}setFromProjectionMatrix(e){const t=this.planes;var n=e.elements,r=n[0],i=n[1],a=n[2],s=n[3],o=n[4],l=n[5],h=n[6],c=n[7],u=n[8],d=n[9],p=n[10],m=n[11],f=n[12],g=n[13],e=n[14],n=n[15];return t[0].setComponents(s-r,c-o,m-u,n-f).normalize(),t[1].setComponents(s+r,c+o,m+u,n+f).normalize(),t[2].setComponents(s+i,c+l,m+d,n+g).normalize(),t[3].setComponents(s-i,c-l,m-d,n-g).normalize(),t[4].setComponents(s-a,c-h,m-p,n-e).normalize(),t[5].setComponents(s+a,c+h,m+p,n+e).normalize(),this}intersectsObject(e){const t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),Na.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(Na)}intersectsSprite(e){return Na.center.set(0,0,0),Na.radius=.7071067811865476,Na.applyMatrix4(e.matrixWorld),this.intersectsSphere(Na)}intersectsSphere(e){const t=this.planes;var n=e.center,r=-e.radius;for(let e=0;e<6;e++)if(t[e].distanceToPoint(n)<r)return!1;return!0}intersectsBox(t){var n=this.planes;for(let e=0;e<6;e++){const r=n[e];if(za.x=(0<r.normal.x?t.max:t.min).x,za.y=(0<r.normal.y?t.max:t.min).y,za.z=(0<r.normal.z?t.max:t.min).z,r.distanceToPoint(za)<0)return!1}return!0}containsPoint(t){const n=this.planes;for(let e=0;e<6;e++)if(n[e].distanceToPoint(t)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function Oa(){let n=null,e=!1,r=null,i=null;function a(e,t){r(e,t),i=n.requestAnimationFrame(a)}return{start:function(){!0!==e&&null!==r&&(i=n.requestAnimationFrame(a),e=!0)},stop:function(){n.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(e){r=e},setContext:function(e){n=e}}}function Fa(s,e){const o=e.isWebGL2,i=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),i.get(e)},remove:function(e){e.isInterleavedBufferAttribute&&(e=e.data);var t=i.get(e);t&&(s.deleteBuffer(t.buffer),i.delete(e))},update:function(e,t){if(e.isGLBufferAttribute){var n=i.get(e);(!n||n.version<e.version)&&i.set(e,{buffer:e.buffer,type:e.type,bytesPerElement:e.elementSize,version:e.version})}else{e.isInterleavedBufferAttribute&&(e=e.data);const r=i.get(e);void 0===r?i.set(e,function(e,t){var n=e.array,r=e.usage,i=s.createBuffer();s.bindBuffer(t,i),s.bufferData(t,n,r),e.onUploadCallback();let a=5126;return n instanceof Float32Array?a=5126:n instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):n instanceof Uint16Array?e.isFloat16BufferAttribute?o?a=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):a=5123:n instanceof Int16Array?a=5122:n instanceof Uint32Array?a=5125:n instanceof Int32Array?a=5124:n instanceof Int8Array?a=5120:n instanceof Uint8Array&&(a=5121),{buffer:i,type:a,bytesPerElement:n.BYTES_PER_ELEMENT,version:e.version}}(e,t)):r.version<e.version&&(function(e,t,n){const r=t.array,i=t.updateRange;s.bindBuffer(n,e),-1===i.count?s.bufferSubData(n,0,r):(o?s.bufferSubData(n,i.offset*r.BYTES_PER_ELEMENT,r,i.offset,i.count):s.bufferSubData(n,i.offset*r.BYTES_PER_ELEMENT,r.subarray(i.offset,i.offset+i.count)),i.count=-1)}(r.buffer,e,t),r.version=e.version)}}}}class Ha extends ra{constructor(e=1,t=1,n=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:r};var i=e/2,a=t/2,s=Math.floor(n),o=Math.floor(r),l=s+1,h=o+1,c=e/s,u=t/o;const d=[],p=[],m=[],f=[];for(let t=0;t<h;t++){var g=t*u-a;for(let e=0;e<l;e++){var v=e*c-i;p.push(v,-g,0),m.push(0,0,1),f.push(e/s),f.push(1-t/o)}}for(let t=0;t<o;t++)for(let e=0;e<s;e++){var y=e+l*t,x=e+l*(t+1),_=e+1+l*(t+1),b=e+1+l*t;d.push(y,x,b),d.push(x,_,b)}this.setIndex(d),this.setAttribute("position",new ji(p,3)),this.setAttribute("normal",new ji(m,3)),this.setAttribute("uv",new ji(f,2))}}const Ua={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\t\tvec2 f = fract( uv );\n\t\tuv += 0.5 - f;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x += texelSize;\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.y += texelSize;\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x -= texelSize;\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tvec3 tm = mix( tl, tr, f.x );\n\t\tvec3 bm = mix( bl, br, f.x );\n\t\treturn mix( tm, bm, f.y );\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tfogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat specularRoughness;\n\tvec3 specularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\t\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\t\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmissionmap_fragment:"#ifdef USE_TRANSMISSIONMAP\n\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\n#endif",transmissionmap_pars_fragment:"#ifdef USE_TRANSMISSIONMAP\n\tuniform sampler2D transmissionMap;\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSMISSION\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSMISSION\n\tuniform float transmission;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <transmissionmap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#ifdef TRANSMISSION\n\t\tfloat totalTransmission = transmission;\n\t#endif\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <transmissionmap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSMISSION\n\t\tdiffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",normal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",normal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}"},Ga={common:{diffuse:{value:new Di(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new Jn},uv2Transform:{value:new Jn},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Zn(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Di(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Di(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new Jn}},sprite:{diffuse:{value:new Di(15658734)},opacity:{value:1},center:{value:new Zn(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new Jn}}},Va={basic:{uniforms:Ta([Ga.common,Ga.specularmap,Ga.envmap,Ga.aomap,Ga.lightmap,Ga.fog]),vertexShader:Ua.meshbasic_vert,fragmentShader:Ua.meshbasic_frag},lambert:{uniforms:Ta([Ga.common,Ga.specularmap,Ga.envmap,Ga.aomap,Ga.lightmap,Ga.emissivemap,Ga.fog,Ga.lights,{emissive:{value:new Di(0)}}]),vertexShader:Ua.meshlambert_vert,fragmentShader:Ua.meshlambert_frag},phong:{uniforms:Ta([Ga.common,Ga.specularmap,Ga.envmap,Ga.aomap,Ga.lightmap,Ga.emissivemap,Ga.bumpmap,Ga.normalmap,Ga.displacementmap,Ga.fog,Ga.lights,{emissive:{value:new Di(0)},specular:{value:new Di(1118481)},shininess:{value:30}}]),vertexShader:Ua.meshphong_vert,fragmentShader:Ua.meshphong_frag},standard:{uniforms:Ta([Ga.common,Ga.envmap,Ga.aomap,Ga.lightmap,Ga.emissivemap,Ga.bumpmap,Ga.normalmap,Ga.displacementmap,Ga.roughnessmap,Ga.metalnessmap,Ga.fog,Ga.lights,{emissive:{value:new Di(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Ua.meshphysical_vert,fragmentShader:Ua.meshphysical_frag},toon:{uniforms:Ta([Ga.common,Ga.aomap,Ga.lightmap,Ga.emissivemap,Ga.bumpmap,Ga.normalmap,Ga.displacementmap,Ga.gradientmap,Ga.fog,Ga.lights,{emissive:{value:new Di(0)}}]),vertexShader:Ua.meshtoon_vert,fragmentShader:Ua.meshtoon_frag},matcap:{uniforms:Ta([Ga.common,Ga.bumpmap,Ga.normalmap,Ga.displacementmap,Ga.fog,{matcap:{value:null}}]),vertexShader:Ua.meshmatcap_vert,fragmentShader:Ua.meshmatcap_frag},points:{uniforms:Ta([Ga.points,Ga.fog]),vertexShader:Ua.points_vert,fragmentShader:Ua.points_frag},dashed:{uniforms:Ta([Ga.common,Ga.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Ua.linedashed_vert,fragmentShader:Ua.linedashed_frag},depth:{uniforms:Ta([Ga.common,Ga.displacementmap]),vertexShader:Ua.depth_vert,fragmentShader:Ua.depth_frag},normal:{uniforms:Ta([Ga.common,Ga.bumpmap,Ga.normalmap,Ga.displacementmap,{opacity:{value:1}}]),vertexShader:Ua.normal_vert,fragmentShader:Ua.normal_frag},sprite:{uniforms:Ta([Ga.sprite,Ga.fog]),vertexShader:Ua.sprite_vert,fragmentShader:Ua.sprite_frag},background:{uniforms:{uvTransform:{value:new Jn},t2D:{value:null}},vertexShader:Ua.background_vert,fragmentShader:Ua.background_frag},cube:{uniforms:Ta([Ga.envmap,{opacity:{value:1}}]),vertexShader:Ua.cube_vert,fragmentShader:Ua.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Ua.equirect_vert,fragmentShader:Ua.equirect_frag},distanceRGBA:{uniforms:Ta([Ga.common,Ga.displacementmap,{referencePosition:{value:new sr},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Ua.distanceRGBA_vert,fragmentShader:Ua.distanceRGBA_frag},shadow:{uniforms:Ta([Ga.lights,Ga.fog,{color:{value:new Di(0)},opacity:{value:1}}]),vertexShader:Ua.shadow_vert,fragmentShader:Ua.shadow_frag}};function ka(s,o,n,l,r){const h=new Di(0);let c=0,u,d,p=null,m=0,f=null;function g(e,t){n.buffers.color.setClear(e.r,e.g,e.b,t,r)}return{getClearColor:function(){return h},setClearColor:function(e,t=1){h.set(e),c=t,g(h,c)},getClearAlpha:function(){return c},setClearAlpha:function(e){c=e,g(h,c)},render:function(e,t,n,r){let i=!0===t.isScene?t.background:null;i&&i.isTexture&&(i=o.get(i));const a=s.xr;(t=a.getSession&&a.getSession())&&"additive"===t.environmentBlendMode&&(i=null),null===i?g(h,c):i&&i.isColor&&(g(i,1),r=!0),(s.autoClear||r)&&s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil),i&&(i.isCubeTexture||i.mapping===O)?(void 0===d&&(d=new ba(new Ma(1,1,1),new Aa({name:"BackgroundCubeMaterial",uniforms:Sa(Va.cube.uniforms),vertexShader:Va.cube.vertexShader,fragmentShader:Va.cube.fragmentShader,side:X,depthTest:!1,depthWrite:!1,fog:!1})),d.geometry.deleteAttribute("normal"),d.geometry.deleteAttribute("uv"),d.onBeforeRender=function(e,t,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(d.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),l.update(d)),d.material.uniforms.envMap.value=i,d.material.uniforms.flipEnvMap.value=i.isCubeTexture&&i._needsFlipEnvMap?-1:1,p===i&&m===i.version&&f===s.toneMapping||(d.material.needsUpdate=!0,p=i,m=i.version,f=s.toneMapping),e.unshift(d,d.geometry,d.material,0,0,null)):i&&i.isTexture&&(void 0===u&&(u=new ba(new Ha(2,2),new Aa({name:"BackgroundMaterial",uniforms:Sa(Va.background.uniforms),vertexShader:Va.background.vertexShader,fragmentShader:Va.background.fragmentShader,side:R,depthTest:!1,depthWrite:!1,fog:!1})),u.geometry.deleteAttribute("normal"),Object.defineProperty(u.material,"map",{get:function(){return this.uniforms.t2D.value}}),l.update(u)),u.material.uniforms.t2D.value=i,!0===i.matrixAutoUpdate&&i.updateMatrix(),u.material.uniforms.uvTransform.value.copy(i.matrix),p===i&&m===i.version&&f===s.toneMapping||(u.material.needsUpdate=!0,p=i,m=i.version,f=s.toneMapping),e.unshift(u,u.geometry,u.material,0,0,null))}}}function Wa(b,w,M,S){const i=b.getParameter(34921),o=S.isWebGL2?null:w.get("OES_vertex_array_object"),l=S.isWebGL2||null!==o,h={},e=d(null);let c=e;function u(e){return S.isWebGL2?b.bindVertexArray(e):o.bindVertexArrayOES(e)}function a(e){return S.isWebGL2?b.deleteVertexArray(e):o.deleteVertexArrayOES(e)}function d(e){const t=[],n=[],r=[];for(let e=0;e<i;e++)t[e]=0,n[e]=0,r[e]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:n,attributeDivisors:r,object:e,attributes:{},index:null}}function T(){const n=c.newAttributes;for(let e=0,t=n.length;e<t;e++)n[e]=0}function E(e){A(e,0)}function A(e,t){const n=c.newAttributes,r=c.enabledAttributes,i=c.attributeDivisors;if(n[e]=1,0===r[e]&&(b.enableVertexAttribArray(e),r[e]=1),i[e]!==t){const a=S.isWebGL2?b:w.get("ANGLE_instanced_arrays");a[S.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](e,t),i[e]=t}}function L(){var n=c.newAttributes;const r=c.enabledAttributes;for(let e=0,t=r.length;e<t;e++)r[e]!==n[e]&&(b.disableVertexAttribArray(e),r[e]=0)}function R(e,t,n,r,i,a){!0!==S.isWebGL2||5124!==n&&5125!==n?b.vertexAttribPointer(e,t,n,r,i,a):b.vertexAttribIPointer(e,t,n,i,a)}function s(){t(),c!==e&&(c=e,u(c.object))}function t(){e.geometry=null,e.program=null,e.wireframe=!1}return{setup:function(e,t,n,r,i){let a=!1;var s;l?(s=function(e,t,n){n=!0===n.wireframe;let r=h[e.id];void 0===r&&(r={},h[e.id]=r);let i=r[t.id];void 0===i&&(i={},r[t.id]=i);let a=i[n];void 0===a&&(a=d(S.isWebGL2?b.createVertexArray():o.createVertexArrayOES()),i[n]=a);return a}(r,n,t),c!==s&&(c=s,u(c.object)),a=function(e,t){var n=c.attributes,r=e.attributes;let i=0;for(const o in r){var a=n[o],s=r[o];if(void 0===a)return!0;if(a.attribute!==s)return!0;if(a.data!==s.data)return!0;i++}return c.attributesNum!==i||c.index!==t}(r,i),a&&function(e,t){const n={},r=e.attributes;let i=0;for(const s in r){var a=r[s];const o={};(o.attribute=a).data&&(o.data=a.data),n[s]=o,i++}c.attributes=n,c.attributesNum=i,c.index=t}(r,i)):(s=!0===t.wireframe,c.geometry===r.id&&c.program===n.id&&c.wireframe===s||(c.geometry=r.id,c.program=n.id,c.wireframe=s,a=!0)),!0===e.isInstancedMesh&&(a=!0),null!==i&&M.update(i,34963),a&&(function(e,t,n,r){if(!1===S.isWebGL2&&(e.isInstancedMesh||r.isInstancedBufferGeometry)&&null===w.get("ANGLE_instanced_arrays"))return;T();var i=r.attributes,a=n.getAttributes(),s=t.defaultAttributeValues;for(const _ in a){var o=a[_];if(0<=o){var l=i[_];if(void 0!==l){var h,c,u,d,p,m=l.normalized,f=l.itemSize,g=M.get(l);void 0!==g&&(h=g.buffer,c=g.type,u=g.bytesPerElement,l.isInterleavedBufferAttribute?(d=l.data,p=d.stride,g=l.offset,d&&d.isInstancedInterleavedBuffer?(A(o,d.meshPerAttribute),void 0===r._maxInstanceCount&&(r._maxInstanceCount=d.meshPerAttribute*d.count)):E(o),b.bindBuffer(34962,h),R(o,f,c,m,p*u,g*u)):(l.isInstancedBufferAttribute?(A(o,l.meshPerAttribute),void 0===r._maxInstanceCount&&(r._maxInstanceCount=l.meshPerAttribute*l.count)):E(o),b.bindBuffer(34962,h),R(o,f,c,m,0,0)))}else if("instanceMatrix"===_){m=M.get(e.instanceMatrix);void 0!==m&&(y=m.buffer,v=m.type,A(o+0,1),A(o+1,1),A(o+2,1),A(o+3,1),b.bindBuffer(34962,y),b.vertexAttribPointer(o+0,4,v,!1,64,0),b.vertexAttribPointer(o+1,4,v,!1,64,16),b.vertexAttribPointer(o+2,4,v,!1,64,32),b.vertexAttribPointer(o+3,4,v,!1,64,48))}else if("instanceColor"===_){var v,y=M.get(e.instanceColor);void 0!==y&&(v=y.buffer,y=y.type,A(o,1),b.bindBuffer(34962,v),b.vertexAttribPointer(o,3,y,!1,12,0))}else if(void 0!==s){var x=s[_];if(void 0!==x)switch(x.length){case 2:b.vertexAttrib2fv(o,x);break;case 3:b.vertexAttrib3fv(o,x);break;case 4:b.vertexAttrib4fv(o,x);break;default:b.vertexAttrib1fv(o,x)}}}}L()}(e,t,n,r),null!==i&&b.bindBuffer(34963,M.get(i).buffer))},reset:s,resetDefaultState:t,dispose:function(){s();for(const e in h){const t=h[e];for(const n in t){const r=t[n];for(const i in r)a(r[i].object),delete r[i];delete t[n]}delete h[e]}},releaseStatesOfGeometry:function(e){if(void 0!==h[e.id]){const t=h[e.id];for(const n in t){const r=t[n];for(const i in r)a(r[i].object),delete r[i];delete t[n]}delete h[e.id]}},releaseStatesOfProgram:function(e){for(const t in h){const n=h[t];if(void 0!==n[e.id]){const r=n[e.id];for(const i in r)a(r[i].object),delete r[i];delete n[e.id]}}},initAttributes:T,enableAttribute:E,disableUnusedAttributes:L}}function ja(a,s,o,e){const l=e.isWebGL2;let h;this.setMode=function(e){h=e},this.render=function(e,t){a.drawArrays(h,e,t),o.update(t,h,1)},this.renderInstances=function(n,r,i){if(0!==i){let e,t;if(l)e=a,t="drawArraysInstanced";else if(e=s.get("ANGLE_instanced_arrays"),t="drawArraysInstancedANGLE",null===e)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");e[t](h,n,r,i),o.update(r,h,i)}}}function qa(t,n,e){let r;function i(e){if("highp"===e){if(0<t.getShaderPrecisionFormat(35633,36338).precision&&0<t.getShaderPrecisionFormat(35632,36338).precision)return"highp";e="mediump"}return"mediump"===e&&0<t.getShaderPrecisionFormat(35633,36337).precision&&0<t.getShaderPrecisionFormat(35632,36337).precision?"mediump":"lowp"}var a="undefined"!=typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&t instanceof WebGL2ComputeRenderingContext;let s=void 0!==e.precision?e.precision:"highp";var o=i(s);o!==s&&(console.warn("THREE.WebGLRenderer:",s,"not supported, using",o,"instead."),s=o);var l=!0===e.logarithmicDepthBuffer,h=t.getParameter(34930),c=t.getParameter(35660),u=t.getParameter(3379),d=t.getParameter(34076),p=t.getParameter(34921),m=t.getParameter(36347),f=t.getParameter(36348),g=t.getParameter(36349),v=0<c,y=a||n.has("OES_texture_float"),o=v&&y,e=a?t.getParameter(36183):0;return{isWebGL2:a,getMaxAnisotropy:function(){return void 0!==r||(r=!0===n.has("EXT_texture_filter_anisotropic")?(e=n.get("EXT_texture_filter_anisotropic"),t.getParameter(e.MAX_TEXTURE_MAX_ANISOTROPY_EXT)):0),r;var e},getMaxPrecision:i,precision:s,logarithmicDepthBuffer:l,maxTextures:h,maxVertexTextures:c,maxTextureSize:u,maxCubemapSize:d,maxAttributes:p,maxVertexUniforms:m,maxVaryings:f,maxFragmentUniforms:g,vertexTextures:v,floatFragmentTextures:y,floatVertexTextures:o,maxSamples:e}}function Xa(t){const o=this;let h=null,c=0,u=!1,d=!1;const l=new di,p=new Jn,m={value:null,needsUpdate:!1};function f(){m.value!==h&&(m.value=h,m.needsUpdate=0<c),o.numPlanes=c,o.numIntersection=0}function g(n,e,r,t){var i=null!==n?n.length:0;let a=null;if(0!==i){if(a=m.value,!0!==t||null===a){var t=r+4*i,s=e.matrixWorldInverse;p.getNormalMatrix(s),(null===a||a.length<t)&&(a=new Float32Array(t));for(let e=0,t=r;e!==i;++e,t+=4)l.copy(n[e]).applyMatrix4(s,p),l.normal.toArray(a,t),a[t+3]=l.constant}m.value=a,m.needsUpdate=!0}return o.numPlanes=i,o.numIntersection=0,a}this.uniform=m,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t,n){var r=0!==e.length||t||0!==c||u;return u=t,h=g(e,n,0),c=e.length,r},this.beginShadows=function(){d=!0,g(null)},this.endShadows=function(){d=!1,f()},this.setState=function(e,n,r){var i=e.clippingPlanes,a=e.clipIntersection,s=e.clipShadows;const o=t.get(e);if(!u||null===i||0===i.length||d&&!s)d?g(null):f();else{var s=d?0:c,l=4*s;let t=o.clippingState||null;m.value=t,t=g(i,n,l,r);for(let e=0;e!==l;++e)t[e]=h[e];o.clippingState=t,this.numIntersection=a?this.numPlanes:0,this.numPlanes+=s}}}function Ya(i){let a=new WeakMap;function s(e,t){return t===u?e.mapping=z:t===d&&(e.mapping=B),e}function o(e){const t=e.target;t.removeEventListener("dispose",o);const n=a.get(t);void 0!==n&&(a.delete(t),n.dispose())}return{get:function(e){if(e&&e.isTexture){var t=e.mapping;if(t===u||t===d){if(a.has(e))return s(a.get(e).texture,e.mapping);var n=e.image;if(n&&0<n.height){t=i.getRenderTarget();const r=new Da(n.height/2);return r.fromEquirectangularTexture(i,e),a.set(e,r),i.setRenderTarget(t),e.addEventListener("dispose",o),s(r.texture,e.mapping)}return null}}return e},dispose:function(){a=new WeakMap}}}function Za(n){const r={};function i(e){if(void 0!==r[e])return r[e];let t;switch(e){case"WEBGL_depth_texture":t=n.getExtension("WEBGL_depth_texture")||n.getExtension("MOZ_WEBGL_depth_texture")||n.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":t=n.getExtension("EXT_texture_filter_anisotropic")||n.getExtension("MOZ_EXT_texture_filter_anisotropic")||n.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":t=n.getExtension("WEBGL_compressed_texture_s3tc")||n.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":t=n.getExtension("WEBGL_compressed_texture_pvrtc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:t=n.getExtension(e)}return r[e]=t,t}return{has:function(e){return null!==i(e)},init:function(e){e.isWebGL2?i("EXT_color_buffer_float"):(i("WEBGL_depth_texture"),i("OES_texture_float"),i("OES_texture_half_float"),i("OES_texture_half_float_linear"),i("OES_standard_derivatives"),i("OES_element_index_uint"),i("OES_vertex_array_object"),i("ANGLE_instanced_arrays")),i("OES_texture_float_linear"),i("EXT_color_buffer_half_float")},get:function(e){var t=i(e);return null===t&&console.warn("THREE.WebGLRenderer: "+e+" extension not supported."),t}}}function Ja(e,m,r,i){const a={},f=new WeakMap;function s(e){const t=e.target;null!==t.index&&m.remove(t.index);for(const n in t.attributes)m.remove(t.attributes[n]);t.removeEventListener("dispose",s),delete a[t.id];e=f.get(t);e&&(m.remove(e),f.delete(t)),i.releaseStatesOfGeometry(t),!0===t.isInstancedBufferGeometry&&delete t._maxInstanceCount,r.memory.geometries--}function o(e){const n=[];var t=e.index,r=e.attributes.position;let i=0;if(null!==t){var a=t.array;i=t.version;for(let e=0,t=a.length;e<t;e+=3){var s=a[e+0],o=a[e+1],l=a[e+2];n.push(s,o,o,l,l,s)}}else{var h=r.array;i=r.version;for(let e=0,t=h.length/3-1;e<t;e+=3){var c=e+0,u=e+1,d=e+2;n.push(c,u,u,d,d,c)}}const p=new(65535<Xi(n)?ki:Gi)(n,1);p.version=i;h=f.get(e);h&&m.remove(h),f.set(e,p)}return{get:function(e,t){return!0===a[t.id]||(t.addEventListener("dispose",s),a[t.id]=!0,r.memory.geometries++),t},update:function(e){var t=e.attributes;for(const i in t)m.update(t[i],34962);var n=e.morphAttributes;for(const a in n){var r=n[a];for(let e=0,t=r.length;e<t;e++)m.update(r[e],34962)}},getWireframeAttribute:function(e){var t,n=f.get(e);return(!n||null!==(t=e.index)&&n.version<t.version)&&o(e),f.get(e)}}}function Qa(a,s,o,e){const l=e.isWebGL2;let h;let c,u;this.setMode=function(e){h=e},this.setIndex=function(e){c=e.type,u=e.bytesPerElement},this.render=function(e,t){a.drawElements(h,t,c,e*u),o.update(t,h,1)},this.renderInstances=function(n,r,i){if(0!==i){let e,t;if(l)e=a,t="drawElementsInstanced";else if(e=s.get("ANGLE_instanced_arrays"),t="drawElementsInstancedANGLE",null===e)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");e[t](h,r,c,n*u,i),o.update(r,h,i)}}}function Ka(e){const r={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:r,programs:null,autoReset:!0,reset:function(){r.frame++,r.calls=0,r.triangles=0,r.points=0,r.lines=0},update:function(e,t,n){switch(r.calls++,t){case 4:r.triangles+=n*(e/3);break;case 1:r.lines+=n*(e/2);break;case 3:r.lines+=n*(e-1);break;case 2:r.lines+=n*e;break;case 0:r.points+=n*e;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",t)}}}}function $a(e,t){return e[0]-t[0]}function es(e,t){return Math.abs(t[1])-Math.abs(e[1])}function ts(p){const m={},f=new Float32Array(8),g=[];for(let e=0;e<8;e++)g[e]=[e,0];return{update:function(e,t,n,r){var i=e.morphTargetInfluences,a=void 0===i?0:i.length;let s=m[t.id];if(void 0===s){s=[];for(let e=0;e<a;e++)s[e]=[e,0];m[t.id]=s}for(let e=0;e<a;e++){const d=s[e];d[0]=e,d[1]=i[e]}s.sort(es);for(let e=0;e<8;e++)e<a&&s[e][1]?(g[e][0]=s[e][0],g[e][1]=s[e][1]):(g[e][0]=Number.MAX_SAFE_INTEGER,g[e][1]=0);g.sort($a);var o=n.morphTargets&&t.morphAttributes.position,l=n.morphNormals&&t.morphAttributes.normal;let h=0;for(let e=0;e<8;e++){var c=g[e],u=c[0],c=c[1];u!==Number.MAX_SAFE_INTEGER&&c?(o&&t.getAttribute("morphTarget"+e)!==o[u]&&t.setAttribute("morphTarget"+e,o[u]),l&&t.getAttribute("morphNormal"+e)!==l[u]&&t.setAttribute("morphNormal"+e,l[u]),f[e]=c,h+=c):(o&&!0===t.hasAttribute("morphTarget"+e)&&t.deleteAttribute("morphTarget"+e),l&&!0===t.hasAttribute("morphNormal"+e)&&t.deleteAttribute("morphNormal"+e),f[e]=0)}n=t.morphTargetsRelative?1:1-h,r.getUniforms().setValue(p,"morphTargetBaseInfluence",n),r.getUniforms().setValue(p,"morphTargetInfluences",f)}}}function ns(e,r,i,a){let s=new WeakMap;function o(e){const t=e.target;t.removeEventListener("dispose",o),i.remove(t.instanceMatrix),null!==t.instanceColor&&i.remove(t.instanceColor)}return{update:function(e){var t=a.render.frame,n=e.geometry,n=r.get(e,n);return s.get(n)!==t&&(r.update(n),s.set(n,t)),e.isInstancedMesh&&(!1===e.hasEventListener("dispose",o)&&e.addEventListener("dispose",o),i.update(e.instanceMatrix,34962),null!==e.instanceColor&&i.update(e.instanceColor,34962)),n},dispose:function(){s=new WeakMap}}}Va.physical={uniforms:Ta([Va.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Zn(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new Di(0)},transmission:{value:0},transmissionMap:{value:null}}]),vertexShader:Ua.meshphysical_vert,fragmentShader:Ua.meshphysical_frag};class rs extends er{constructor(e=null,t=1,n=1,r=1){super(null),this.image={data:e,width:t,height:n,depth:r},this.magFilter=V,this.minFilter=V,this.wrapR=U,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}rs.prototype.isDataTexture2DArray=!0;class is extends er{constructor(e=null,t=1,n=1,r=1){super(null),this.image={data:e,width:t,height:n,depth:r},this.magFilter=V,this.minFilter=V,this.wrapR=U,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}}is.prototype.isDataTexture3D=!0;const as=new er,ss=new rs,os=new is,ls=new Pa,hs=[],cs=[],us=new Float32Array(16),ds=new Float32Array(9),ps=new Float32Array(4);function ms(n,r,i){const e=n[0];if(e<=0||0<e)return n;var t=r*i;let a=hs[t];if(void 0===a&&(a=new Float32Array(t),hs[t]=a),0!==r){e.toArray(a,0);for(let e=1,t=0;e!==r;++e)t+=i,n[e].toArray(a,t)}return a}function fs(n,r){if(n.length===r.length){for(let e=0,t=n.length;e<t;e++)if(n[e]!==r[e])return;return 1}}function gs(n,r){for(let e=0,t=r.length;e<t;e++)n[e]=r[e]}function vs(t,n){let r=cs[n];void 0===r&&(r=new Int32Array(n),cs[n]=r);for(let e=0;e!==n;++e)r[e]=t.allocateTextureUnit();return r}function ys(e,t){const n=this.cache;n[0]!==t&&(e.uniform1f(this.addr,t),n[0]=t)}function xs(e,t){const n=this.cache;void 0!==t.x?n[0]===t.x&&n[1]===t.y||(e.uniform2f(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y):fs(n,t)||(e.uniform2fv(this.addr,t),gs(n,t))}function _s(e,t){const n=this.cache;void 0!==t.x?n[0]===t.x&&n[1]===t.y&&n[2]===t.z||(e.uniform3f(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z):void 0!==t.r?n[0]===t.r&&n[1]===t.g&&n[2]===t.b||(e.uniform3f(this.addr,t.r,t.g,t.b),n[0]=t.r,n[1]=t.g,n[2]=t.b):fs(n,t)||(e.uniform3fv(this.addr,t),gs(n,t))}function bs(e,t){const n=this.cache;void 0!==t.x?n[0]===t.x&&n[1]===t.y&&n[2]===t.z&&n[3]===t.w||(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w):fs(n,t)||(e.uniform4fv(this.addr,t),gs(n,t))}function ws(e,t){var n=this.cache,r=t.elements;void 0===r?fs(n,t)||(e.uniformMatrix2fv(this.addr,!1,t),gs(n,t)):fs(n,r)||(ps.set(r),e.uniformMatrix2fv(this.addr,!1,ps),gs(n,r))}function Ms(e,t){var n=this.cache,r=t.elements;void 0===r?fs(n,t)||(e.uniformMatrix3fv(this.addr,!1,t),gs(n,t)):fs(n,r)||(ds.set(r),e.uniformMatrix3fv(this.addr,!1,ds),gs(n,r))}function Ss(e,t){var n=this.cache,r=t.elements;void 0===r?fs(n,t)||(e.uniformMatrix4fv(this.addr,!1,t),gs(n,t)):fs(n,r)||(us.set(r),e.uniformMatrix4fv(this.addr,!1,us),gs(n,r))}function Ts(e,t){const n=this.cache;n[0]!==t&&(e.uniform1i(this.addr,t),n[0]=t)}function Es(e,t){var n=this.cache;fs(n,t)||(e.uniform2iv(this.addr,t),gs(n,t))}function As(e,t){var n=this.cache;fs(n,t)||(e.uniform3iv(this.addr,t),gs(n,t))}function Ls(e,t){var n=this.cache;fs(n,t)||(e.uniform4iv(this.addr,t),gs(n,t))}function Rs(e,t){const n=this.cache;n[0]!==t&&(e.uniform1ui(this.addr,t),n[0]=t)}function Cs(e,t){var n=this.cache;fs(n,t)||(e.uniform2uiv(this.addr,t),gs(n,t))}function Ps(e,t){var n=this.cache;fs(n,t)||(e.uniform3uiv(this.addr,t),gs(n,t))}function Ds(e,t){var n=this.cache;fs(n,t)||(e.uniform4uiv(this.addr,t),gs(n,t))}function Is(e,t,n){const r=this.cache;var i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.safeSetTexture2D(t||as,i)}function Ns(e,t,n){const r=this.cache;var i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.setTexture3D(t||os,i)}function zs(e,t,n){const r=this.cache;var i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.safeSetTextureCube(t||ls,i)}function Bs(e,t,n){const r=this.cache;var i=n.allocateTextureUnit();r[0]!==i&&(e.uniform1i(this.addr,i),r[0]=i),n.setTexture2DArray(t||ss,i)}function Os(e,t){e.uniform1fv(this.addr,t)}function Fs(e,t){t=ms(t,this.size,2);e.uniform2fv(this.addr,t)}function Hs(e,t){t=ms(t,this.size,3);e.uniform3fv(this.addr,t)}function Us(e,t){t=ms(t,this.size,4);e.uniform4fv(this.addr,t)}function Gs(e,t){t=ms(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,t)}function Vs(e,t){t=ms(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,t)}function ks(e,t){t=ms(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,t)}function Ws(e,t){e.uniform1iv(this.addr,t)}function js(e,t){e.uniform2iv(this.addr,t)}function qs(e,t){e.uniform3iv(this.addr,t)}function Xs(e,t){e.uniform4iv(this.addr,t)}function Ys(e,t){e.uniform1uiv(this.addr,t)}function Zs(e,t){e.uniform2uiv(this.addr,t)}function Js(e,t){e.uniform3uiv(this.addr,t)}function Qs(e,t){e.uniform4uiv(this.addr,t)}function Ks(e,t,n){var r=t.length,i=vs(n,r);e.uniform1iv(this.addr,i);for(let e=0;e!==r;++e)n.safeSetTexture2D(t[e]||as,i[e])}function $s(e,t,n){var r=t.length,i=vs(n,r);e.uniform1iv(this.addr,i);for(let e=0;e!==r;++e)n.safeSetTextureCube(t[e]||ls,i[e])}function eo(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=function(e){switch(e){case 5126:return ys;case 35664:return xs;case 35665:return _s;case 35666:return bs;case 35674:return ws;case 35675:return Ms;case 35676:return Ss;case 5124:case 35670:return Ts;case 35667:case 35671:return Es;case 35668:case 35672:return As;case 35669:case 35673:return Ls;case 5125:return Rs;case 36294:return Cs;case 36295:return Ps;case 36296:return Ds;case 35678:case 36198:case 36298:case 36306:case 35682:return Is;case 35679:case 36299:case 36307:return Ns;case 35680:case 36300:case 36308:case 36293:return zs;case 36289:case 36303:case 36311:case 36292:return Bs}}(t.type)}function to(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=function(e){switch(e){case 5126:return Os;case 35664:return Fs;case 35665:return Hs;case 35666:return Us;case 35674:return Gs;case 35675:return Vs;case 35676:return ks;case 5124:case 35670:return Ws;case 35667:case 35671:return js;case 35668:case 35672:return qs;case 35669:case 35673:return Xs;case 5125:return Ys;case 36294:return Zs;case 36295:return Js;case 36296:return Qs;case 35678:case 36198:case 36298:case 36306:case 35682:return Ks;case 35680:case 36300:case 36308:case 36293:return $s}}(t.type)}function no(e){this.id=e,this.seq=[],this.map={}}to.prototype.updateCache=function(e){var t=this.cache;e instanceof Float32Array&&t.length!==e.length&&(this.cache=new Float32Array(e.length)),gs(t,e)},no.prototype.setValue=function(n,r,i){var a=this.seq;for(let e=0,t=a.length;e!==t;++e){const s=a[e];s.setValue(n,r[s.id],i)}};const ro=/(\w+)(\])?(\[|\.)?/g;function io(e,t){e.seq.push(t),e.map[t.id]=t}function ao(t,n){this.seq=[],this.map={};var r=t.getProgramParameter(n,35718);for(let e=0;e<r;++e){var i=t.getActiveUniform(n,e);!function(e,n,r){var i=e.name,a=i.length;for(ro.lastIndex=0;;){var s=ro.exec(i),o=ro.lastIndex;let t=s[1];var l="]"===s[2],s=s[3];if(l&&(t|=0),void 0===s||"["===s&&o+2===a){io(r,new(void 0===s?eo:to)(t,e,n));break}{let e=r.map[t];void 0===e&&(e=new no(t),io(r,e)),r=e}}}(i,t.getUniformLocation(n,i.name),this)}}function so(e,t,n){t=e.createShader(t);return e.shaderSource(t,n),e.compileShader(t),t}ao.prototype.setValue=function(e,t,n,r){const i=this.map[t];void 0!==i&&i.setValue(e,n,r)},ao.prototype.setOptional=function(e,t,n){t=t[n];void 0!==t&&this.setValue(e,n,t)},ao.upload=function(n,r,i,a){for(let e=0,t=r.length;e!==t;++e){const s=r[e],o=i[s.id];!1!==o.needsUpdate&&s.setValue(n,o.value,a)}},ao.seqWithValue=function(n,r){const i=[];for(let e=0,t=n.length;e!==t;++e){var a=n[e];a.id in r&&i.push(a)}return i};let oo=0;function lo(e){switch(e){case Jt:return["Linear","( value )"];case Qt:return["sRGB","( value )"];case $t:return["RGBE","( value )"];case tn:return["RGBM","( value, 7.0 )"];case nn:return["RGBM","( value, 16.0 )"];case rn:return["RGBD","( value, 256.0 )"];case Kt:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case en:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",e),["Linear","( value )"]}}function ho(e,t,n){var r=e.getShaderParameter(t,35713),i=e.getShaderInfoLog(t).trim();return r&&""===i?"":"THREE.WebGLShader: gl.getShaderInfoLog() "+n+"\n"+i+function(e){const t=e.split("\n");for(let e=0;e<t.length;e++)t[e]=e+1+": "+t[e];return t.join("\n")}(e.getShaderSource(t))}function co(e,t){t=lo(t);return"vec4 "+e+"( vec4 value ) { return "+t[0]+"ToLinear"+t[1]+"; }"}function uo(e){return""!==e}function po(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function mo(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const fo=/^[ \t]*#include +<([\w\d./]+)>/gm;function go(e){return e.replace(fo,vo)}function vo(e,t){var n=Ua[t];if(void 0===n)throw new Error("Can not resolve #include <"+t+">");return go(n)}const yo=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,xo=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function _o(e){return e.replace(xo,wo).replace(yo,bo)}function bo(e,t,n,r){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),wo(0,t,n,r)}function wo(e,t,n,r){let i="";for(let e=parseInt(t);e<parseInt(n);e++)i+=r.replace(/\[\s*i\s*\]/g,"[ "+e+" ]").replace(/UNROLLED_LOOP_INDEX/g,e);return i}function Mo(e){let t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function So(n,e,t,r){const i=n.getContext();var a=t.defines,s=t.vertexShader,o=t.fragmentShader,l=function(e){let t="SHADOWMAP_TYPE_BASIC";return e.shadowMapType===A?t="SHADOWMAP_TYPE_PCF":e.shadowMapType===M?t="SHADOWMAP_TYPE_PCF_SOFT":e.shadowMapType===L&&(t="SHADOWMAP_TYPE_VSM"),t}(t),h=function(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case z:case B:t="ENVMAP_TYPE_CUBE";break;case O:case F:t="ENVMAP_TYPE_CUBE_UV"}return t}(t),c=function(e){let t="ENVMAP_MODE_REFLECTION";if(e.envMap)switch(e.envMapMode){case B:case F:t="ENVMAP_MODE_REFRACTION"}return t}(t),u=function(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case S:t="ENVMAP_BLENDING_MULTIPLY";break;case T:t="ENVMAP_BLENDING_MIX";break;case E:t="ENVMAP_BLENDING_ADD"}return t}(t),d=0<n.gammaFactor?n.gammaFactor:1;const p=t.isWebGL2?"":function(e){const t=[e.extensionDerivatives||e.envMapCubeUV||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||"physical"===e.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""];return t.filter(uo).join("\n")}(t),m=function(e){const t=[];for(const r in e){var n=e[r];!1!==n&&t.push("#define "+r+" "+n)}return t.join("\n")}(a),f=i.createProgram();let g,v,y=t.glslVersion?"#version "+t.glslVersion+"\n":"";t.isRawShaderMaterial?(g=[m].filter(uo).join("\n"),0<g.length&&(g+="\n"),v=[p,m].filter(uo).join("\n"),0<v.length&&(v+="\n")):(g=[Mo(t),"#define SHADER_NAME "+t.shaderName,m,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+d,"#define MAX_BONES "+t.maxBones,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.useVertexTexture?"#define BONE_TEXTURE":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&!1===t.flatShading?"#define USE_MORPHNORMALS":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(uo).join("\n"),v=[p,Mo(t),"#define SHADER_NAME "+t.shaderName,m,t.alphaTest?"#define ALPHATEST "+t.alphaTest+(t.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+d,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.envMap?"#define "+c:"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.sheen?"#define USE_SHEEN":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(t.extensionShaderTextureLOD||t.envMap)&&t.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Ee?"#define TONE_MAPPING":"",t.toneMapping!==Ee?Ua.tonemapping_pars_fragment:"",t.toneMapping!==Ee?function(e,t){let n;switch(t){case C:n="Linear";break;case P:n="Reinhard";break;case D:n="OptimizedCineon";break;case I:n="ACESFilmic";break;case N:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),n="Linear"}return"vec3 "+e+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",Ua.encodings_pars_fragment,t.map?co("mapTexelToLinear",t.mapEncoding):"",t.matcap?co("matcapTexelToLinear",t.matcapEncoding):"",t.envMap?co("envMapTexelToLinear",t.envMapEncoding):"",t.emissiveMap?co("emissiveMapTexelToLinear",t.emissiveMapEncoding):"",t.lightMap?co("lightMapTexelToLinear",t.lightMapEncoding):"",(x="linearToOutputTexel",_=lo(_=t.outputEncoding),"vec4 "+x+"( vec4 value ) { return LinearTo"+_[0]+_[1]+"; }"),t.depthPacking?"#define DEPTH_PACKING "+t.depthPacking:"","\n"].filter(uo).join("\n")),s=mo(po(go(s),t),t),o=mo(po(go(o),t),t),s=_o(s),o=_o(o),t.isWebGL2&&!0!==t.isRawShaderMaterial&&(y="#version 300 es\n",g=["#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+g,v=["#define varying in",t.glslVersion===zn?"":"out highp vec4 pc_fragColor;",t.glslVersion===zn?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+v);var u=y+g+s,l=y+v+o,x=so(i,35633,u),_=so(i,35632,l);if(i.attachShader(f,x),i.attachShader(f,_),void 0!==t.index0AttributeName?i.bindAttribLocation(f,0,t.index0AttributeName):!0===t.morphTargets&&i.bindAttribLocation(f,0,"position"),i.linkProgram(f),n.debug.checkShaderErrors){s=i.getProgramInfoLog(f).trim(),o=i.getShaderInfoLog(x).trim(),u=i.getShaderInfoLog(_).trim();let e=!0,t=!0;!1===i.getProgramParameter(f,35714)?(e=!1,l=ho(i,x,"vertex"),n=ho(i,_,"fragment"),console.error("THREE.WebGLProgram: shader error: ",i.getError(),"35715",i.getProgramParameter(f,35715),"gl.getProgramInfoLog",s,l,n)):""!==s?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",s):""!==o&&""!==u||(t=!1),t&&(this.diagnostics={runnable:e,programLog:s,vertexShader:{log:o,prefix:g},fragmentShader:{log:u,prefix:v}})}i.deleteShader(x),i.deleteShader(_);let b;this.getUniforms=function(){return void 0===b&&(b=new ao(i,f)),b};let w;return this.getAttributes=function(){return void 0===w&&(w=function(t,n){const r={};var i=t.getProgramParameter(n,35721);for(let e=0;e<i;e++){var a=t.getActiveAttrib(n,e).name;r[a]=t.getAttribLocation(n,a)}return r}(i,f)),w},this.destroy=function(){r.releaseStatesOfProgram(this),i.deleteProgram(f),this.program=void 0},this.name=t.shaderName,this.id=oo++,this.cacheKey=e,this.usedTimes=1,this.program=f,this.vertexShader=x,this.fragmentShader=_,this}function To(d,p,m,f,t,g){const a=[],v=f.isWebGL2,y=f.logarithmicDepthBuffer,x=f.floatVertexTextures,_=f.maxVertexUniforms,b=f.vertexTextures;let w=f.precision;const M={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},r=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexAlphas","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen","transmissionMap"];function S(e){let t;return t=e&&e.isTexture?e.encoding:e&&e.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),e.texture.encoding):Jt,t}return{getParameters:function(e,t,n,r,i){var a=r.fog,s=e.isMeshStandardMaterial?r.environment:null,o=p.get(e.envMap||s),r=M[e.type],l=i.isSkinnedMesh?(s=(l=i).skeleton.bones,x?1024:(l=_,l=Math.floor((l-20)/4),(l=Math.min(l,s.length))<s.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+s.length+" bones. This GPU supports "+l+"."),0):l)):0;null!==e.precision&&(w=f.getMaxPrecision(e.precision),w!==e.precision&&console.warn("THREE.WebGLProgram.getParameters:",e.precision,"not supported, using",w,"instead."));let h,c;c=r?(u=Va[r],h=u.vertexShader,u.fragmentShader):(h=e.vertexShader,e.fragmentShader);var u=d.getRenderTarget();return{isWebGL2:v,shaderID:r,shaderName:e.type,vertexShader:h,fragmentShader:c,defines:e.defines,isRawShaderMaterial:!0===e.isRawShaderMaterial,glslVersion:e.glslVersion,precision:w,instancing:!0===i.isInstancedMesh,instancingColor:!0===i.isInstancedMesh&&null!==i.instanceColor,supportsVertexTextures:b,outputEncoding:null!==u?S(u.texture):d.outputEncoding,map:!!e.map,mapEncoding:S(e.map),matcap:!!e.matcap,matcapEncoding:S(e.matcap),envMap:!!o,envMapMode:o&&o.mapping,envMapEncoding:S(o),envMapCubeUV:!!o&&(o.mapping===O||o.mapping===F),lightMap:!!e.lightMap,lightMapEncoding:S(e.lightMap),aoMap:!!e.aoMap,emissiveMap:!!e.emissiveMap,emissiveMapEncoding:S(e.emissiveMap),bumpMap:!!e.bumpMap,normalMap:!!e.normalMap,objectSpaceNormalMap:e.normalMapType===ln,tangentSpaceNormalMap:e.normalMapType===on,clearcoatMap:!!e.clearcoatMap,clearcoatRoughnessMap:!!e.clearcoatRoughnessMap,clearcoatNormalMap:!!e.clearcoatNormalMap,displacementMap:!!e.displacementMap,roughnessMap:!!e.roughnessMap,metalnessMap:!!e.metalnessMap,specularMap:!!e.specularMap,alphaMap:!!e.alphaMap,gradientMap:!!e.gradientMap,sheen:!!e.sheen,transmissionMap:!!e.transmissionMap,combine:e.combine,vertexTangents:e.normalMap&&e.vertexTangents,vertexColors:e.vertexColors,vertexAlphas:!0===e.vertexColors&&i.geometry&&i.geometry.attributes.color&&4===i.geometry.attributes.color.itemSize,vertexUvs:!!(e.map||e.bumpMap||e.normalMap||e.specularMap||e.alphaMap||e.emissiveMap||e.roughnessMap||e.metalnessMap||e.clearcoatMap||e.clearcoatRoughnessMap||e.clearcoatNormalMap||e.displacementMap||e.transmissionMap),uvsVertexOnly:!(e.map||e.bumpMap||e.normalMap||e.specularMap||e.alphaMap||e.emissiveMap||e.roughnessMap||e.metalnessMap||e.clearcoatNormalMap||e.transmissionMap||!e.displacementMap),fog:!!a,useFog:e.fog,fogExp2:a&&a.isFogExp2,flatShading:!!e.flatShading,sizeAttenuation:e.sizeAttenuation,logarithmicDepthBuffer:y,skinning:e.skinning&&0<l,maxBones:l,useVertexTexture:x,morphTargets:e.morphTargets,morphNormals:e.morphNormals,numDirLights:t.directional.length,numPointLights:t.point.length,numSpotLights:t.spot.length,numRectAreaLights:t.rectArea.length,numHemiLights:t.hemi.length,numDirLightShadows:t.directionalShadowMap.length,numPointLightShadows:t.pointShadowMap.length,numSpotLightShadows:t.spotShadowMap.length,numClippingPlanes:g.numPlanes,numClipIntersection:g.numIntersection,dithering:e.dithering,shadowMapEnabled:d.shadowMap.enabled&&0<n.length,shadowMapType:d.shadowMap.type,toneMapping:e.toneMapped?d.toneMapping:Ee,physicallyCorrectLights:d.physicallyCorrectLights,premultipliedAlpha:e.premultipliedAlpha,alphaTest:e.alphaTest,doubleSided:e.side===Y,flipSided:e.side===X,depthPacking:void 0!==e.depthPacking&&e.depthPacking,index0AttributeName:e.index0AttributeName,extensionDerivatives:e.extensions&&e.extensions.derivatives,extensionFragDepth:e.extensions&&e.extensions.fragDepth,extensionDrawBuffers:e.extensions&&e.extensions.drawBuffers,extensionShaderTextureLOD:e.extensions&&e.extensions.shaderTextureLOD,rendererExtensionFragDepth:v||m.has("EXT_frag_depth"),rendererExtensionDrawBuffers:v||m.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:v||m.has("EXT_shader_texture_lod"),customProgramCacheKey:e.customProgramCacheKey()}},getProgramCacheKey:function(t){const n=[];if(t.shaderID?n.push(t.shaderID):(n.push(t.fragmentShader),n.push(t.vertexShader)),void 0!==t.defines)for(const e in t.defines)n.push(e),n.push(t.defines[e]);if(!1===t.isRawShaderMaterial){for(let e=0;e<r.length;e++)n.push(t[r[e]]);n.push(d.outputEncoding),n.push(d.gammaFactor)}return n.push(t.customProgramCacheKey),n.join()},getUniforms:function(e){var t=M[e.type];let n;return n=t?(t=Va[t],Ea.clone(t.uniforms)):e.uniforms,n},acquireProgram:function(e,n){let r;for(let e=0,t=a.length;e<t;e++){var i=a[e];if(i.cacheKey===n){r=i,++r.usedTimes;break}}return void 0===r&&(r=new So(d,n,e,t),a.push(r)),r},releaseProgram:function(e){var t;0==--e.usedTimes&&(t=a.indexOf(e),a[t]=a[a.length-1],a.pop(),e.destroy())},programs:a}}function Eo(){let r=new WeakMap;return{get:function(e){let t=r.get(e);return void 0===t&&(t={},r.set(e,t)),t},remove:function(e){r.delete(e)},update:function(e,t,n){r.get(e)[t]=n},dispose:function(){r=new WeakMap}}}function Ao(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.program!==t.program?e.program.id-t.program.id:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function Lo(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function Ro(l){const h=[];let c=0;const s=[],o=[],u={id:-1};function d(e,t,n,r,i,a){let s=h[c];var o=l.get(n);return void 0===s?(s={id:e.id,object:e,geometry:t,material:n,program:o.program||u,groupOrder:r,renderOrder:e.renderOrder,z:i,group:a},h[c]=s):(s.id=e.id,s.object=e,s.geometry=t,s.material=n,s.program=o.program||u,s.groupOrder=r,s.renderOrder=e.renderOrder,s.z=i,s.group=a),c++,s}return{opaque:s,transparent:o,init:function(){c=0,s.length=0,o.length=0},push:function(e,t,n,r,i,a){a=d(e,t,n,r,i,a),(!0===n.transparent?o:s).push(a)},unshift:function(e,t,n,r,i,a){a=d(e,t,n,r,i,a),(!0===n.transparent?o:s).unshift(a)},finish:function(){for(let e=c,t=h.length;e<t;e++){const n=h[e];if(null===n.id)break;n.id=null,n.object=null,n.geometry=null,n.material=null,n.program=null,n.group=null}},sort:function(e,t){1<s.length&&s.sort(e||Ao),1<o.length&&o.sort(t||Lo)}}}function Co(r){let i=new WeakMap;return{get:function(e,t){let n;return!1===i.has(e)?(n=new Ro(r),i.set(e,[n])):t>=i.get(e).length?(n=new Ro(r),i.get(e).push(n)):n=i.get(e)[t],n},dispose:function(){i=new WeakMap}}}function Po(){const n={};return{get:function(e){if(void 0!==n[e.id])return n[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new sr,color:new Di};break;case"SpotLight":t={position:new sr,direction:new sr,color:new Di,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new sr,color:new Di,distance:0,decay:0};break;case"HemisphereLight":t={direction:new sr,skyColor:new Di,groundColor:new Di};break;case"RectAreaLight":t={color:new Di,position:new sr,halfWidth:new sr,halfHeight:new sr}}return n[e.id]=t,t}}}let Do=0;function Io(e,t){return(t.castShadow?1:0)-(e.castShadow?1:0)}function No(t,L){const R=new Po,C=function(){const n={};return{get:function(e){if(void 0!==n[e.id])return n[e.id];let t;switch(e.type){case"DirectionalLight":case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Zn};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Zn,shadowCameraNear:1,shadowCameraFar:1e3}}return n[e.id]=t,t}}}(),P={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let e=0;e<9;e++)P.probe.push(new sr);const f=new sr,g=new Or,v=new Or;return{setup:function(n){let r=0,i=0,a=0;for(let e=0;e<9;e++)P.probe[e].set(0,0,0);let s=0,o=0,l=0,h=0,c=0,u=0,d=0,p=0;n.sort(Io);for(let e=0,t=n.length;e<t;e++){var m=n[e],f=m.color,g=m.intensity,v=m.distance,y=m.shadow&&m.shadow.map?m.shadow.map.texture:null;if(m.isAmbientLight)r+=f.r*g,i+=f.g*g,a+=f.b*g;else if(m.isLightProbe)for(let e=0;e<9;e++)P.probe[e].addScaledVector(m.sh.coefficients[e],g);else if(m.isDirectionalLight){const _=R.get(m);if(_.color.copy(m.color).multiplyScalar(m.intensity),m.castShadow){var x=m.shadow;const b=C.get(m);b.shadowBias=x.bias,b.shadowNormalBias=x.normalBias,b.shadowRadius=x.radius,b.shadowMapSize=x.mapSize,P.directionalShadow[s]=b,P.directionalShadowMap[s]=y,P.directionalShadowMatrix[s]=m.shadow.matrix,u++}P.directional[s]=_,s++}else if(m.isSpotLight){const w=R.get(m);if(w.position.setFromMatrixPosition(m.matrixWorld),w.color.copy(f).multiplyScalar(g),w.distance=v,w.coneCos=Math.cos(m.angle),w.penumbraCos=Math.cos(m.angle*(1-m.penumbra)),w.decay=m.decay,m.castShadow){v=m.shadow;const M=C.get(m);M.shadowBias=v.bias,M.shadowNormalBias=v.normalBias,M.shadowRadius=v.radius,M.shadowMapSize=v.mapSize,P.spotShadow[l]=M,P.spotShadowMap[l]=y,P.spotShadowMatrix[l]=m.shadow.matrix,p++}P.spot[l]=w,l++}else if(m.isRectAreaLight){const S=R.get(m);S.color.copy(f).multiplyScalar(g),S.halfWidth.set(.5*m.width,0,0),S.halfHeight.set(0,.5*m.height,0),P.rectArea[h]=S,h++}else if(m.isPointLight){const T=R.get(m);if(T.color.copy(m.color).multiplyScalar(m.intensity),T.distance=m.distance,T.decay=m.decay,m.castShadow){f=m.shadow;const E=C.get(m);E.shadowBias=f.bias,E.shadowNormalBias=f.normalBias,E.shadowRadius=f.radius,E.shadowMapSize=f.mapSize,E.shadowCameraNear=f.camera.near,E.shadowCameraFar=f.camera.far,P.pointShadow[o]=E,P.pointShadowMap[o]=y,P.pointShadowMatrix[o]=m.shadow.matrix,d++}P.point[o]=T,o++}else if(m.isHemisphereLight){const A=R.get(m);A.skyColor.copy(m.color).multiplyScalar(g),A.groundColor.copy(m.groundColor).multiplyScalar(g),P.hemi[c]=A,c++}}0<h&&(L.isWebGL2||!0===t.has("OES_texture_float_linear")?(P.rectAreaLTC1=Ga.LTC_FLOAT_1,P.rectAreaLTC2=Ga.LTC_FLOAT_2):!0===t.has("OES_texture_half_float_linear")?(P.rectAreaLTC1=Ga.LTC_HALF_1,P.rectAreaLTC2=Ga.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),P.ambient[0]=r,P.ambient[1]=i,P.ambient[2]=a;const e=P.hash;e.directionalLength===s&&e.pointLength===o&&e.spotLength===l&&e.rectAreaLength===h&&e.hemiLength===c&&e.numDirectionalShadows===u&&e.numPointShadows===d&&e.numSpotShadows===p||(P.directional.length=s,P.spot.length=l,P.rectArea.length=h,P.point.length=o,P.hemi.length=c,P.directionalShadow.length=u,P.directionalShadowMap.length=u,P.pointShadow.length=d,P.pointShadowMap.length=d,P.spotShadow.length=p,P.spotShadowMap.length=p,P.directionalShadowMatrix.length=u,P.pointShadowMatrix.length=d,P.spotShadowMatrix.length=p,e.directionalLength=s,e.pointLength=o,e.spotLength=l,e.rectAreaLength=h,e.hemiLength=c,e.numDirectionalShadows=u,e.numPointShadows=d,e.numSpotShadows=p,P.version=Do++)},setupView:function(n,e){let r=0,i=0,a=0,s=0,o=0;var l=e.matrixWorldInverse;for(let e=0,t=n.length;e<t;e++){var h=n[e];if(h.isDirectionalLight){const c=P.directional[r];c.direction.setFromMatrixPosition(h.matrixWorld),f.setFromMatrixPosition(h.target.matrixWorld),c.direction.sub(f),c.direction.transformDirection(l),r++}else if(h.isSpotLight){const u=P.spot[a];u.position.setFromMatrixPosition(h.matrixWorld),u.position.applyMatrix4(l),u.direction.setFromMatrixPosition(h.matrixWorld),f.setFromMatrixPosition(h.target.matrixWorld),u.direction.sub(f),u.direction.transformDirection(l),a++}else if(h.isRectAreaLight){const d=P.rectArea[s];d.position.setFromMatrixPosition(h.matrixWorld),d.position.applyMatrix4(l),v.identity(),g.copy(h.matrixWorld),g.premultiply(l),v.extractRotation(g),d.halfWidth.set(.5*h.width,0,0),d.halfHeight.set(0,.5*h.height,0),d.halfWidth.applyMatrix4(v),d.halfHeight.applyMatrix4(v),s++}else if(h.isPointLight){const p=P.point[i];p.position.setFromMatrixPosition(h.matrixWorld),p.position.applyMatrix4(l),i++}else if(h.isHemisphereLight){const m=P.hemi[o];m.direction.setFromMatrixPosition(h.matrixWorld),m.direction.transformDirection(l),m.direction.normalize(),o++}}},state:P}}function zo(e,t){const n=new No(e,t),r=[],i=[];return{init:function(){r.length=0,i.length=0},state:{lightsArray:r,shadowsArray:i,lights:n},setupLights:function(){n.setup(r)},setupLightsView:function(e){n.setupView(r,e)},pushLight:function(e){r.push(e)},pushShadow:function(e){i.push(e)}}}function Bo(r,i){let a=new WeakMap;return{get:function(e,t=0){let n;return!1===a.has(e)?(n=new zo(r,i),a.set(e,[n])):t>=a.get(e).length?(n=new zo(r,i),a.get(e).push(n)):n=a.get(e)[t],n},dispose:function(){a=new WeakMap}}}class Oo extends Ti{constructor(e){super(),this.type="MeshDepthMaterial",this.depthPacking=an,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}Oo.prototype.isMeshDepthMaterial=!0;class Fo extends Ti{constructor(e){super(),this.type="MeshDistanceMaterial",this.referencePosition=new sr,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}Fo.prototype.isMeshDistanceMaterial=!0;var Ho="uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\n\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean * HALF_SAMPLE_RATE;\n\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}",Uo="void main() {\n\tgl_Position = vec4( position, 1.0 );\n}";function Go(f,g,e){let v=new Ba;const m=new Zn,y=new Zn,x=new nr,i=[],a=[],u={},_=e.maxTextureSize,d={0:X,1:R,2:Y},b=new Aa({defines:{SAMPLE_RATE:.25,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new Zn},radius:{value:4}},vertexShader:Uo,fragmentShader:Ho}),w=b.clone();w.defines.HORIZONTAL_PASS=1;const t=new ra;t.setAttribute("position",new Bi(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const M=new ba(t,b),S=this;function p(e,t,n){n=e<<0|t<<1|n<<2;let r=i[n];return void 0===r&&(r=new Oo({depthPacking:sn,morphTargets:e,skinning:t}),i[n]=r),r}function T(e,t,n){n=e<<0|t<<1|n<<2;let r=a[n];return void 0===r&&(r=new Fo({morphTargets:e,skinning:t}),a[n]=r),r}function E(n,r,i,e,t,a,s){let o=null,l=p,h=n.customDepthMaterial;if(!0===e.isPointLight&&(l=T,h=n.customDistanceMaterial),void 0===h){let e=!1;!0===i.morphTargets&&(e=r.morphAttributes&&r.morphAttributes.position&&0<r.morphAttributes.position.length);let t=!1;!0===n.isSkinnedMesh&&(!0===i.skinning?t=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",n));var c=!0===n.isInstancedMesh;o=l(e,t,c)}else o=h;if(f.localClippingEnabled&&!0===i.clipShadows&&0!==i.clippingPlanes.length){n=o.uuid,c=i.uuid;let e=u[n];void 0===e&&(e={},u[n]=e);let t=e[c];void 0===t&&(t=o.clone(),e[c]=t),o=t}return o.visible=i.visible,o.wireframe=i.wireframe,s===L?o.side=null!==i.shadowSide?i.shadowSide:i.side:o.side=null!==i.shadowSide?i.shadowSide:d[i.side],o.clipShadows=i.clipShadows,o.clippingPlanes=i.clippingPlanes,o.clipIntersection=i.clipIntersection,o.wireframeLinewidth=i.wireframeLinewidth,o.linewidth=i.linewidth,!0===e.isPointLight&&!0===o.isMeshDistanceMaterial&&(o.referencePosition.setFromMatrixPosition(e.matrixWorld),o.nearDistance=t,o.farDistance=a),o}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=A,this.render=function(n,r,i){if(!1!==S.enabled&&(!1!==S.autoUpdate||!1!==S.needsUpdate)&&0!==n.length){var e=f.getRenderTarget(),t=f.getActiveCubeFace(),a=f.getActiveMipmapLevel();const d=f.state;d.setBlending(Z),d.buffers.color.setClear(1,1,1,1),d.buffers.depth.setTest(!0),d.setScissorTest(!1);for(let e=0,t=n.length;e<t;e++){var s=n[e];const p=s.shadow;if(void 0!==p){if(!1!==p.autoUpdate||!1!==p.needsUpdate){m.copy(p.mapSize);var o,l,h=p.getFrameExtents();m.multiply(h),y.copy(p.mapSize),(m.x>_||m.y>_)&&(m.x>_&&(y.x=Math.floor(_/h.x),m.x=y.x*h.x,p.mapSize.x=y.x),m.y>_&&(y.y=Math.floor(_/h.y),m.y=y.y*h.y,p.mapSize.y=y.y)),null!==p.map||p.isPointLightShadow||this.type!==L||(o={minFilter:Ae,magFilter:Ae,format:Fe},p.map=new rr(m.x,m.y,o),p.map.texture.name=s.name+".shadowMap",p.mapPass=new rr(m.x,m.y,o),p.camera.updateProjectionMatrix()),null===p.map&&(l={minFilter:V,magFilter:V,format:Fe},p.map=new rr(m.x,m.y,l),p.map.texture.name=s.name+".shadowMap",p.camera.updateProjectionMatrix()),f.setRenderTarget(p.map),f.clear();var c=p.getViewportCount();for(let e=0;e<c;e++){var u=p.getViewport(e);x.set(y.x*u.x,y.y*u.y,y.x*u.z,y.y*u.w),d.viewport(x),p.updateMatrices(s,e),v=p.getFrustum(),function n(r,i,a,s,o){if(!1===r.visible)return;var e=r.layers.test(i.layers);if(e&&(r.isMesh||r.isLine||r.isPoints)&&(r.castShadow||r.receiveShadow&&o===L)&&(!r.frustumCulled||v.intersectsObject(r))){r.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse,r.matrixWorld);var t,l=g.update(r),h=r.material;if(Array.isArray(h)){var c=l.groups;for(let e=0,t=c.length;e<t;e++){var u,d=c[e],p=h[d.materialIndex];p&&p.visible&&(u=E(r,l,p,s,a.near,a.far,o),f.renderBufferDirect(a,null,l,u,r,d))}}else h.visible&&(t=E(r,l,h,s,a.near,a.far,o),f.renderBufferDirect(a,null,l,t,r,null))}var m=r.children;for(let e=0,t=m.length;e<t;e++)n(m[e],i,a,s,o)}(r,i,p.camera,s,this.type)}p.isPointLightShadow||this.type!==L||(h=p,o=i,l=void 0,l=g.update(M),b.uniforms.shadow_pass.value=h.map.texture,b.uniforms.resolution.value=h.mapSize,b.uniforms.radius.value=h.radius,f.setRenderTarget(h.mapPass),f.clear(),f.renderBufferDirect(o,null,l,b,M,null),w.uniforms.shadow_pass.value=h.mapPass.texture,w.uniforms.resolution.value=h.mapSize,w.uniforms.radius.value=h.radius,f.setRenderTarget(h.map),f.clear(),f.renderBufferDirect(o,null,l,w,M,null)),p.needsUpdate=!1}}else console.warn("THREE.WebGLShadowMap:",s,"has no shadow.")}S.needsUpdate=!1,f.setRenderTarget(e,t,a)}}}function Vo(c,e,t){const n=t.isWebGL2;const r=new function(){let t=!1;const a=new nr;let n=null;const s=new nr(0,0,0,0);return{setMask:function(e){n===e||t||(c.colorMask(e,e,e,e),n=e)},setLocked:function(e){t=e},setClear:function(e,t,n,r,i){!0===i&&(e*=r,t*=r,n*=r),a.set(e,t,n,r),!1===s.equals(a)&&(c.clearColor(e,t,n,r),s.copy(a))},reset:function(){t=!1,n=null,s.set(-1,0,0,0)}}},i=new function(){let t=!1,n=null,r=null,i=null;return{setTest:function(e){(e?z:B)(2929)},setMask:function(e){n===e||t||(c.depthMask(e),n=e)},setFunc:function(e){if(r!==e){if(e)switch(e){case ve:c.depthFunc(512);break;case ye:c.depthFunc(519);break;case xe:c.depthFunc(513);break;case _e:c.depthFunc(515);break;case be:c.depthFunc(514);break;case we:c.depthFunc(518);break;case Me:c.depthFunc(516);break;case Se:c.depthFunc(517);break;default:c.depthFunc(515)}else c.depthFunc(515);r=e}},setLocked:function(e){t=e},setClear:function(e){i!==e&&(c.clearDepth(e),i=e)},reset:function(){t=!1,n=null,r=null,i=null}}},a=new function(){let t=!1,n=null,r=null,i=null,a=null,s=null,o=null,l=null,h=null;return{setTest:function(e){t||(e?z:B)(2960)},setMask:function(e){n===e||t||(c.stencilMask(e),n=e)},setFunc:function(e,t,n){r===e&&i===t&&a===n||(c.stencilFunc(e,t,n),r=e,i=t,a=n)},setOp:function(e,t,n){s===e&&o===t&&l===n||(c.stencilOp(e,t,n),s=e,o=t,l=n)},setLocked:function(e){t=e},setClear:function(e){h!==e&&(c.clearStencil(e),h=e)},reset:function(){t=!1,n=null,r=null,i=null,a=null,s=null,o=null,l=null,h=null}}};let s={},o=null,l={},h=null,u=!1,d=null,p=null,m=null,f=null,g=null,v=null,y=null,x=!1,_=null,b=null,w=null,M=null,S=null;const T=c.getParameter(35661);let E=!1,A=0;const L=c.getParameter(7938);-1!==L.indexOf("WebGL")?(A=parseFloat(/^WebGL (\d)/.exec(L)[1]),E=1<=A):-1!==L.indexOf("OpenGL ES")&&(A=parseFloat(/^OpenGL ES (\d)/.exec(L)[1]),E=2<=A);let R=null,C={};const P=new nr(0,0,c.canvas.width,c.canvas.height),D=new nr(0,0,c.canvas.width,c.canvas.height);function I(e,t,n){var r=new Uint8Array(4),i=c.createTexture();c.bindTexture(e,i),c.texParameteri(e,10241,9728),c.texParameteri(e,10240,9728);for(let e=0;e<n;e++)c.texImage2D(t+e,0,6408,1,1,0,6408,5121,r);return i}const N={};function z(e){!0!==s[e]&&(c.enable(e),s[e]=!0)}function B(e){!1!==s[e]&&(c.disable(e),s[e]=!1)}N[3553]=I(3553,3553,1),N[34067]=I(34067,34069,6),r.setClear(0,0,0,1),i.setClear(1),a.setClear(0),z(2929),i.setFunc(_e),U(!1),G(j),z(2884),H(Z);const O={[te]:32774,[ne]:32778,[re]:32779};n?(O[ie]=32775,O[ae]=32776):null!==(e=e.get("EXT_blend_minmax"))&&(O[ie]=e.MIN_EXT,O[ae]=e.MAX_EXT);const F={[se]:0,[oe]:1,[le]:768,[ce]:770,[ge]:776,[me]:774,[de]:772,[he]:769,[ue]:771,[fe]:775,[pe]:773};function H(e,t,n,r,i,a,s,o){if(e!==Z){if(!1===u&&(z(3042),u=!0),e===ee)i=i||t,a=a||n,s=s||r,t===p&&i===g||(c.blendEquationSeparate(O[t],O[i]),p=t,g=i),n===m&&r===f&&a===v&&s===y||(c.blendFuncSeparate(F[n],F[r],F[a],F[s]),m=n,f=r,v=a,y=s),d=e,x=null;else if(e!==d||o!==x){if(p===te&&g===te||(c.blendEquation(32774),p=te,g=te),o)switch(e){case J:c.blendFuncSeparate(1,771,1,771);break;case Q:c.blendFunc(1,1);break;case K:c.blendFuncSeparate(0,0,769,771);break;case $:c.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}else switch(e){case J:c.blendFuncSeparate(770,771,1,771);break;case Q:c.blendFunc(770,1);break;case K:c.blendFunc(0,769);break;case $:c.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}m=null,f=null,v=null,y=null,d=e,x=o}}else!0===u&&(B(3042),u=!1)}function U(e){_!==e&&(e?c.frontFace(2304):c.frontFace(2305),_=e)}function G(e){e!==W?(z(2884),e!==b&&(e===j?c.cullFace(1029):e===q?c.cullFace(1028):c.cullFace(1032))):B(2884),b=e}function V(e,t,n){e?(z(32823),M===t&&S===n||(c.polygonOffset(t,n),M=t,S=n)):B(32823)}function k(e){void 0===e&&(e=33984+T-1),R!==e&&(c.activeTexture(e),R=e)}return{buffers:{color:r,depth:i,stencil:a},enable:z,disable:B,bindFramebuffer:function(e,t){null===t&&null!==o&&(t=o),l[e]!==t&&(c.bindFramebuffer(e,t),l[e]=t,n&&(36009===e&&(l[36160]=t),36160===e&&(l[36009]=t)))},bindXRFramebuffer:function(e){e!==o&&(c.bindFramebuffer(36160,e),o=e)},useProgram:function(e){return h!==e&&(c.useProgram(e),h=e,!0)},setBlending:H,setMaterial:function(e,t){(e.side===Y?B:z)(2884);let n=e.side===X;t&&(n=!n),U(n),e.blending===J&&!1===e.transparent?H(Z):H(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),i.setFunc(e.depthFunc),i.setTest(e.depthTest),i.setMask(e.depthWrite),r.setMask(e.colorWrite),t=e.stencilWrite,a.setTest(t),t&&(a.setMask(e.stencilWriteMask),a.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),a.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),V(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),(!0===e.alphaToCoverage?z:B)(32926)},setFlipSided:U,setCullFace:G,setLineWidth:function(e){e!==w&&(E&&c.lineWidth(e),w=e)},setPolygonOffset:V,setScissorTest:function(e){(e?z:B)(3089)},activeTexture:k,bindTexture:function(e,t){null===R&&k();let n=C[R];void 0===n&&(n={type:void 0,texture:void 0},C[R]=n),n.type===e&&n.texture===t||(c.bindTexture(e,t||N[e]),n.type=e,n.texture=t)},unbindTexture:function(){const e=C[R];void 0!==e&&void 0!==e.type&&(c.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)},compressedTexImage2D:function(){try{c.compressedTexImage2D.apply(c,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage2D:function(){try{c.texImage2D.apply(c,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage3D:function(){try{c.texImage3D.apply(c,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},scissor:function(e){!1===P.equals(e)&&(c.scissor(e.x,e.y,e.z,e.w),P.copy(e))},viewport:function(e){!1===D.equals(e)&&(c.viewport(e.x,e.y,e.z,e.w),D.copy(e))},reset:function(){c.disable(3042),c.disable(2884),c.disable(2929),c.disable(32823),c.disable(3089),c.disable(2960),c.disable(32926),c.blendEquation(32774),c.blendFunc(1,0),c.blendFuncSeparate(1,0,1,0),c.colorMask(!0,!0,!0,!0),c.clearColor(0,0,0,0),c.depthMask(!0),c.depthFunc(513),c.clearDepth(1),c.stencilMask(4294967295),c.stencilFunc(519,0,4294967295),c.stencilOp(7680,7680,7680),c.clearStencil(0),c.cullFace(1029),c.frontFace(2305),c.polygonOffset(0,0),c.activeTexture(33984),c.bindFramebuffer(36160,null),!0===n&&(c.bindFramebuffer(36009,null),c.bindFramebuffer(36008,null)),c.useProgram(null),c.lineWidth(1),c.scissor(0,0,c.canvas.width,c.canvas.height),c.viewport(0,0,c.canvas.width,c.canvas.height),s={},R=null,C={},o=null,l={},h=null,u=!1,d=null,p=null,m=null,f=null,g=null,v=null,y=null,x=!1,_=null,b=null,w=null,M=null,S=null,P.set(0,0,c.canvas.width,c.canvas.height),D.set(0,0,c.canvas.width,c.canvas.height),r.reset(),i.reset(),a.reset()}}}function ko(m,i,f,h,r,g,c){const v=r.isWebGL2,t=r.maxTextures,y=r.maxCubemapSize,u=r.maxTextureSize,n=r.maxSamples,a=new WeakMap;let l,s=!1;try{s="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(e){}function d(e,t){return s?new OffscreenCanvas(e,t):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function x(e,t,n,r){let i=1;if((e.width>r||e.height>r)&&(i=r/Math.max(e.width,e.height)),i<1||!0===t){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){const a=t?Xn:Math.floor;r=a(i*e.width),t=a(i*e.height);void 0===l&&(l=d(r,t));const s=n?d(r,t):l;s.width=r,s.height=t;const o=s.getContext("2d");return o.drawImage(e,0,0,r,t),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+r+"x"+t+")."),s}return"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+")."),e}return e}function _(e){return jn(e.width)&&jn(e.height)}function b(e,t){return e.generateMipmaps&&t&&e.minFilter!==V&&e.minFilter!==Ae}function w(e,t,n,r){m.generateMipmap(e);const i=h.get(t);i.__maxMipLevel=Math.log2(Math.max(n,r))}function M(e,t,n){if(!1===v)return t;if(null!==e){if(void 0!==m[e])return m[e];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+e+"'")}let r=t;return 6403===t&&(5126===n&&(r=33326),5131===n&&(r=33325),5121===n&&(r=33321)),6407===t&&(5126===n&&(r=34837),5131===n&&(r=34843),5121===n&&(r=32849)),6408===t&&(5126===n&&(r=34836),5131===n&&(r=34842),5121===n&&(r=32856)),33325!==r&&33326!==r&&34842!==r&&34836!==r||i.get("EXT_color_buffer_float"),r}function o(e){return e===V||e===k||e===Te?9728:9729}function p(e){const t=e.target;var n;t.removeEventListener("dispose",p),n=t,void 0!==(e=h.get(n)).__webglInit&&(m.deleteTexture(e.__webglTexture),h.remove(n)),t.isVideoTexture&&a.delete(t),c.memory.textures--}function S(e){const t=e.target;t.removeEventListener("dispose",S),function(e){var t=e.texture,n=h.get(e),r=h.get(t);if(e){if(void 0!==r.__webglTexture&&m.deleteTexture(r.__webglTexture),e.depthTexture&&e.depthTexture.dispose(),e.isWebGLCubeRenderTarget)for(let e=0;e<6;e++)m.deleteFramebuffer(n.__webglFramebuffer[e]),n.__webglDepthbuffer&&m.deleteRenderbuffer(n.__webglDepthbuffer[e]);else m.deleteFramebuffer(n.__webglFramebuffer),n.__webglDepthbuffer&&m.deleteRenderbuffer(n.__webglDepthbuffer),n.__webglMultisampledFramebuffer&&m.deleteFramebuffer(n.__webglMultisampledFramebuffer),n.__webglColorRenderbuffer&&m.deleteRenderbuffer(n.__webglColorRenderbuffer),n.__webglDepthRenderbuffer&&m.deleteRenderbuffer(n.__webglDepthRenderbuffer);h.remove(t),h.remove(e)}}(t),c.memory.textures--}let T=0;function E(e,t){var n,r=h.get(e);if(e.isVideoTexture&&(i=e,n=c.render.frame,a.get(i)!==n&&(a.set(i,n),i.update())),0<e.version&&r.__version!==e.version){var i=e.image;if(void 0===i)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==i.complete)return void D(r,e,t);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}f.activeTexture(33984+t),f.bindTexture(3553,r.__webglTexture)}function A(e,t){var n=h.get(e);0<e.version&&n.__version!==e.version?function(e,r,t){if(6===r.image.length){P(e,r),f.activeTexture(33984+t),f.bindTexture(34067,e.__webglTexture),m.pixelStorei(37440,r.flipY),m.pixelStorei(37441,r.premultiplyAlpha),m.pixelStorei(3317,r.unpackAlignment),m.pixelStorei(37443,0);var i=r&&(r.isCompressedTexture||r.image[0].isCompressedTexture),a=r.image[0]&&r.image[0].isDataTexture;const p=[];for(let e=0;e<6;e++)p[e]=i||a?a?r.image[e].image:r.image[e]:x(r.image[e],!1,!0,y);var s=p[0],t=_(s)||v,o=g.convert(r.format),l=g.convert(r.type),h=M(r.internalFormat,o,l);C(34067,r,t);let n;if(i){for(let t=0;t<6;t++){n=p[t].mipmaps;for(let e=0;e<n.length;e++){var c=n[e];r.format!==Fe&&r.format!==Oe?null!==o?f.compressedTexImage2D(34069+t,e,h,c.width,c.height,0,c.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):f.texImage2D(34069+t,e,h,c.width,c.height,0,o,l,c.data)}}e.__maxMipLevel=n.length-1}else{n=r.mipmaps;for(let t=0;t<6;t++)if(a){f.texImage2D(34069+t,0,h,p[t].width,p[t].height,0,o,l,p[t].data);for(let e=0;e<n.length;e++){var u=n[e].image[t].image;f.texImage2D(34069+t,e+1,h,u.width,u.height,0,o,l,u.data)}}else{f.texImage2D(34069+t,0,h,o,l,p[t]);for(let e=0;e<n.length;e++){var d=n[e];f.texImage2D(34069+t,e+1,h,o,l,d.image[t])}}e.__maxMipLevel=n.length}b(r,t)&&w(34067,r,s.width,s.height),e.__version=r.version,r.onUpdate&&r.onUpdate(r)}}(n,e,t):(f.activeTexture(33984+t),f.bindTexture(34067,n.__webglTexture))}const L={[H]:10497,[U]:33071,[G]:33648},R={[V]:9728,[k]:9984,[Te]:9986,[Ae]:9729,[Le]:9985,[Re]:9987};function C(e,t,n){n?(m.texParameteri(e,10242,L[t.wrapS]),m.texParameteri(e,10243,L[t.wrapT]),32879!==e&&35866!==e||m.texParameteri(e,32882,L[t.wrapR]),m.texParameteri(e,10240,R[t.magFilter]),m.texParameteri(e,10241,R[t.minFilter])):(m.texParameteri(e,10242,33071),m.texParameteri(e,10243,33071),32879!==e&&35866!==e||m.texParameteri(e,32882,33071),t.wrapS===U&&t.wrapT===U||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),m.texParameteri(e,10240,o(t.magFilter)),m.texParameteri(e,10241,o(t.minFilter)),t.minFilter!==V&&t.minFilter!==Ae&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===i.has("EXT_texture_filter_anisotropic")&&(n=i.get("EXT_texture_filter_anisotropic"),t.type===Ie&&!1===i.has("OES_texture_float_linear")||!1===v&&t.type===Ne&&!1===i.has("OES_texture_half_float_linear")||(1<t.anisotropy||h.get(t).__currentAnisotropy)&&(m.texParameterf(e,n.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,r.getMaxAnisotropy())),h.get(t).__currentAnisotropy=t.anisotropy))}function P(e,t){void 0===e.__webglInit&&(e.__webglInit=!0,t.addEventListener("dispose",p),e.__webglTexture=m.createTexture(),c.memory.textures++)}function D(e,n,t){let r=3553;n.isDataTexture2DArray&&(r=35866),n.isDataTexture3D&&(r=32879),P(e,n),f.activeTexture(33984+t),f.bindTexture(r,e.__webglTexture),m.pixelStorei(37440,n.flipY),m.pixelStorei(37441,n.premultiplyAlpha),m.pixelStorei(3317,n.unpackAlignment),m.pixelStorei(37443,0);var t=(i=n,!v&&(i.wrapS!==U||i.wrapT!==U||i.minFilter!==V&&i.minFilter!==Ae)&&!1===_(n.image)),i=x(n.image,t,!1,u),t=_(i)||v,a=g.convert(n.format);let s=g.convert(n.type),o=M(n.internalFormat,a,s);C(r,n,t);let l;var h=n.mipmaps;if(n.isDepthTexture)o=6402,v?o=n.type===Ie?36012:n.type===De?33190:n.type===ze?35056:33189:n.type===Ie&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),n.format===Ve&&6402===o&&n.type!==Pe&&n.type!==De&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),n.type=Pe,s=g.convert(n.type)),n.format===ke&&6402===o&&(o=34041,n.type!==ze&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),n.type=ze,s=g.convert(n.type))),f.texImage2D(3553,0,o,i.width,i.height,0,a,s,null);else if(n.isDataTexture)if(0<h.length&&t){for(let e=0,t=h.length;e<t;e++)l=h[e],f.texImage2D(3553,e,o,l.width,l.height,0,a,s,l.data);n.generateMipmaps=!1,e.__maxMipLevel=h.length-1}else f.texImage2D(3553,0,o,i.width,i.height,0,a,s,i.data),e.__maxMipLevel=0;else if(n.isCompressedTexture){for(let e=0,t=h.length;e<t;e++)l=h[e],n.format!==Fe&&n.format!==Oe?null!==a?f.compressedTexImage2D(3553,e,o,l.width,l.height,0,l.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):f.texImage2D(3553,e,o,l.width,l.height,0,a,s,l.data);e.__maxMipLevel=h.length-1}else if(n.isDataTexture2DArray)f.texImage3D(35866,0,o,i.width,i.height,i.depth,0,a,s,i.data),e.__maxMipLevel=0;else if(n.isDataTexture3D)f.texImage3D(32879,0,o,i.width,i.height,i.depth,0,a,s,i.data),e.__maxMipLevel=0;else if(0<h.length&&t){for(let e=0,t=h.length;e<t;e++)l=h[e],f.texImage2D(3553,e,o,a,s,l);n.generateMipmaps=!1,e.__maxMipLevel=h.length-1}else f.texImage2D(3553,0,o,a,s,i),e.__maxMipLevel=0;b(n,t)&&w(r,n,i.width,i.height),e.__version=n.version,n.onUpdate&&n.onUpdate(n)}function I(e,t,n,r){var i=t.texture,a=g.convert(i.format),s=g.convert(i.type),o=M(i.internalFormat,a,s);32879===r||35866===r?f.texImage3D(r,0,o,t.width,t.height,t.depth,0,a,s,null):f.texImage2D(r,0,o,t.width,t.height,0,a,s,null),f.bindFramebuffer(36160,e),m.framebufferTexture2D(36160,n,r,h.get(i).__webglTexture,0),f.bindFramebuffer(36160,null)}function N(t,n,r){if(m.bindRenderbuffer(36161,t),n.depthBuffer&&!n.stencilBuffer){let e=33189;r?((i=n.depthTexture)&&i.isDepthTexture&&(i.type===Ie?e=36012:i.type===De&&(e=33190)),i=B(n),m.renderbufferStorageMultisample(36161,i,e,n.width,n.height)):m.renderbufferStorage(36161,e,n.width,n.height),m.framebufferRenderbuffer(36160,36096,36161,t)}else{var i,e;n.depthBuffer&&n.stencilBuffer?(r?(e=B(n),m.renderbufferStorageMultisample(36161,e,35056,n.width,n.height)):m.renderbufferStorage(36161,34041,n.width,n.height),m.framebufferRenderbuffer(36160,33306,36161,t)):(i=n.texture,e=g.convert(i.format),t=g.convert(i.type),t=M(i.internalFormat,e,t),r?(r=B(n),m.renderbufferStorageMultisample(36161,r,t,n.width,n.height)):m.renderbufferStorage(36161,t,n.width,n.height))}m.bindRenderbuffer(36161,null)}function z(t){const n=h.get(t);var e=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture){if(e)throw new Error("target.depthTexture not supported in Cube render targets");!function(e,t){if(t&&t.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(f.bindFramebuffer(36160,e),!t.depthTexture||!t.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");if(h.get(t.depthTexture).__webglTexture&&t.depthTexture.image.width===t.width&&t.depthTexture.image.height===t.height||(t.depthTexture.image.width=t.width,t.depthTexture.image.height=t.height,t.depthTexture.needsUpdate=!0),E(t.depthTexture,0),e=h.get(t.depthTexture).__webglTexture,t.depthTexture.format===Ve)m.framebufferTexture2D(36160,36096,3553,e,0);else{if(t.depthTexture.format!==ke)throw new Error("Unknown depthTexture format");m.framebufferTexture2D(36160,33306,3553,e,0)}}(n.__webglFramebuffer,t)}else if(e){n.__webglDepthbuffer=[];for(let e=0;e<6;e++)f.bindFramebuffer(36160,n.__webglFramebuffer[e]),n.__webglDepthbuffer[e]=m.createRenderbuffer(),N(n.__webglDepthbuffer[e],t,!1)}else f.bindFramebuffer(36160,n.__webglFramebuffer),n.__webglDepthbuffer=m.createRenderbuffer(),N(n.__webglDepthbuffer,t,!1);f.bindFramebuffer(36160,null)}function B(e){return v&&e.isWebGLMultisampleRenderTarget?Math.min(n,e.samples):0}let O=!1,F=!1;this.allocateTextureUnit=function(){var e=T;return e>=t&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+t),T+=1,e},this.resetTextureUnits=function(){T=0},this.setTexture2D=E,this.setTexture2DArray=function(e,t){var n=h.get(e);0<e.version&&n.__version!==e.version?D(n,e,t):(f.activeTexture(33984+t),f.bindTexture(35866,n.__webglTexture))},this.setTexture3D=function(e,t){var n=h.get(e);0<e.version&&n.__version!==e.version?D(n,e,t):(f.activeTexture(33984+t),f.bindTexture(32879,n.__webglTexture))},this.setTextureCube=A,this.setupRenderTarget=function(t){const n=t.texture,r=h.get(t),i=h.get(n);t.addEventListener("dispose",S),i.__webglTexture=m.createTexture(),i.__version=n.version,c.memory.textures++;var e,a=!0===t.isWebGLCubeRenderTarget,s=!0===t.isWebGLMultisampleRenderTarget,o=n.isDataTexture3D||n.isDataTexture2DArray,l=_(t)||v;if(!v||n.format!==Oe||n.type!==Ie&&n.type!==Ne||(n.format=Fe,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),a){r.__webglFramebuffer=[];for(let e=0;e<6;e++)r.__webglFramebuffer[e]=m.createFramebuffer()}else r.__webglFramebuffer=m.createFramebuffer(),s&&(v?(r.__webglMultisampledFramebuffer=m.createFramebuffer(),r.__webglColorRenderbuffer=m.createRenderbuffer(),m.bindRenderbuffer(36161,r.__webglColorRenderbuffer),e=g.convert(n.format),s=g.convert(n.type),e=M(n.internalFormat,e,s),s=B(t),m.renderbufferStorageMultisample(36161,s,e,t.width,t.height),f.bindFramebuffer(36160,r.__webglMultisampledFramebuffer),m.framebufferRenderbuffer(36160,36064,36161,r.__webglColorRenderbuffer),m.bindRenderbuffer(36161,null),t.depthBuffer&&(r.__webglDepthRenderbuffer=m.createRenderbuffer(),N(r.__webglDepthRenderbuffer,t,!0)),f.bindFramebuffer(36160,null)):console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2."));if(a){f.bindTexture(34067,i.__webglTexture),C(34067,n,l);for(let e=0;e<6;e++)I(r.__webglFramebuffer[e],t,36064,34069+e);b(n,l)&&w(34067,n,t.width,t.height),f.bindTexture(34067,null)}else{let e=3553;o&&(v?(o=n.isDataTexture3D,e=o?32879:35866):console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.")),f.bindTexture(e,i.__webglTexture),C(e,n,l),I(r.__webglFramebuffer,t,36064,e),b(n,l)&&w(3553,n,t.width,t.height),f.bindTexture(3553,null)}t.depthBuffer&&z(t)},this.updateRenderTargetMipmap=function(e){var t,n,r=e.texture;b(r,_(e)||v)&&(t=e.isWebGLCubeRenderTarget?34067:3553,n=h.get(r).__webglTexture,f.bindTexture(t,n),w(t,r,e.width,e.height),f.bindTexture(t,null))},this.updateMultisampleRenderTarget=function(t){if(t.isWebGLMultisampleRenderTarget)if(v){var n=t.width,r=t.height;let e=16384;t.depthBuffer&&(e|=256),t.stencilBuffer&&(e|=1024);t=h.get(t);f.bindFramebuffer(36008,t.__webglMultisampledFramebuffer),f.bindFramebuffer(36009,t.__webglFramebuffer),m.blitFramebuffer(0,0,n,r,0,0,n,r,e,9728),f.bindFramebuffer(36008,null),f.bindFramebuffer(36009,t.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.safeSetTexture2D=function(e,t){e&&e.isWebGLRenderTarget&&(!1===O&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),O=!0),e=e.texture),E(e,t)},this.safeSetTextureCube=function(e,t){e&&e.isWebGLCubeRenderTarget&&(!1===F&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),F=!0),e=e.texture),A(e,t)}}function Wo(e,n,t){const r=t.isWebGL2;return{convert:function(e){let t;if(e===Ce)return 5121;if(e===_)return 32819;if(e===b)return 32820;if(e===w)return 33635;if(e===v)return 5120;if(e===y)return 5122;if(e===Pe)return 5123;if(e===x)return 5124;if(e===De)return 5125;if(e===Ie)return 5126;if(e===Ne)return r?5131:(t=n.get("OES_texture_half_float"),null!==t?t.HALF_FLOAT_OES:null);if(e===Be)return 6406;if(e===Oe)return 6407;if(e===Fe)return 6408;if(e===He)return 6409;if(e===Ue)return 6410;if(e===Ve)return 6402;if(e===ke)return 34041;if(e===We)return 6403;if(e===je)return 36244;if(e===qe)return 33319;if(e===Xe)return 33320;if(e===Ye)return 36248;if(e===Ze)return 36249;if(e===Je||e===Qe||e===Ke||e===$e){if(t=n.get("WEBGL_compressed_texture_s3tc"),null===t)return null;if(e===Je)return t.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===Qe)return t.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===Ke)return t.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===$e)return t.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(e===et||e===tt||e===nt||e===rt){if(t=n.get("WEBGL_compressed_texture_pvrtc"),null===t)return null;if(e===et)return t.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===tt)return t.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===nt)return t.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===rt)return t.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(e===it)return t=n.get("WEBGL_compressed_texture_etc1"),null!==t?t.COMPRESSED_RGB_ETC1_WEBGL:null;if((e===at||e===st)&&(t=n.get("WEBGL_compressed_texture_etc"),null!==t)){if(e===at)return t.COMPRESSED_RGB8_ETC2;if(e===st)return t.COMPRESSED_RGBA8_ETC2_EAC}return e===ot||e===lt||e===ht||e===ct||e===ut||e===dt||e===pt||e===mt||e===ft||e===gt||e===vt||e===yt||e===xt||e===_t||e===wt||e===Mt||e===St||e===Tt||e===Et||e===At||e===Lt||e===Rt||e===Ct||e===Pt||e===Dt||e===It||e===Nt||e===zt?(t=n.get("WEBGL_compressed_texture_astc"),null!==t?e:null):e===bt?(t=n.get("EXT_texture_compression_bptc"),null!==t?e:null):e===ze?r?34042:(t=n.get("WEBGL_depth_texture"),null!==t?t.UNSIGNED_INT_24_8_WEBGL:null):void 0}}}class jo extends Ra{constructor(e=[]){super(),this.cameras=e}}jo.prototype.isArrayCamera=!0;class qo extends li{constructor(){super(),this.type="Group"}}qo.prototype.isGroup=!0;const Xo={type:"move"};class Yo{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new qo,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new qo,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new sr,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new sr),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new qo,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new sr,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new sr),this._grip}dispatchEvent(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(e,t,n){let r=null,i=null,a=null;const s=this._targetRay,o=this._grip,l=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState)if(null!==s&&(r=t.getPose(e.targetRaySpace,n),null!==r&&(s.matrix.fromArray(r.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),r.linearVelocity?(s.hasLinearVelocity=!0,s.linearVelocity.copy(r.linearVelocity)):s.hasLinearVelocity=!1,r.angularVelocity?(s.hasAngularVelocity=!0,s.angularVelocity.copy(r.angularVelocity)):s.hasAngularVelocity=!1,this.dispatchEvent(Xo))),l&&e.hand){a=!0;for(const d of e.hand.values()){var h=t.getJointPose(d,n);if(void 0===l.joints[d.jointName]){const m=new qo;m.matrixAutoUpdate=!1,m.visible=!1,l.joints[d.jointName]=m,l.add(m)}const p=l.joints[d.jointName];null!==h&&(p.matrix.fromArray(h.transform.matrix),p.matrix.decompose(p.position,p.rotation,p.scale),p.jointRadius=h.radius),p.visible=null!==h}const u=l.joints["index-finger-tip"];var c=l.joints["thumb-tip"],c=u.position.distanceTo(c.position);l.inputState.pinching&&.025<c?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!l.inputState.pinching&&c<=.015&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==o&&e.gripSpace&&(i=t.getPose(e.gripSpace,n),null!==i&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),i.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(i.linearVelocity)):o.hasLinearVelocity=!1,i.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(i.angularVelocity)):o.hasAngularVelocity=!1));return null!==s&&(s.visible=null!==r),null!==o&&(o.visible=null!==i),null!==l&&(l.visible=null!==a),this}}class Zo extends Bn{constructor(e,t){super();const n=this,c=e.state;let u=null,r=1,d=null,i="local-floor",p=null;const m=[],o=new Map,a=new Ra;a.layers.enable(1),a.viewport=new nr;const s=new Ra;s.layers.enable(2),s.viewport=new nr;const f=[a,s],g=new jo;g.layers.enable(1),g.layers.enable(2);let l=null,h=null;function v(e){const t=o.get(e.inputSource);t&&t.dispatchEvent({type:e.type,data:e.inputSource})}function y(){o.forEach(function(e,t){e.disconnect(t)}),o.clear(),l=null,h=null,c.bindXRFramebuffer(null),e.setRenderTarget(e.getRenderTarget()),S.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function x(t){var n=u.inputSources;for(let e=0;e<m.length;e++)o.set(n[e],m[e]);for(let e=0;e<t.removed.length;e++){var r=t.removed[e];const a=o.get(r);a&&(a.dispatchEvent({type:"disconnected",data:r}),o.delete(r))}for(let e=0;e<t.added.length;e++){var i=t.added[e];const s=o.get(i);s&&s.dispatchEvent({type:"connected",data:i})}}this.enabled=!1,this.isPresenting=!1,this.getController=function(e){let t=m[e];return void 0===t&&(t=new Yo,m[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=m[e];return void 0===t&&(t=new Yo,m[e]=t),t.getGripSpace()},this.getHand=function(e){let t=m[e];return void 0===t&&(t=new Yo,m[e]=t),t.getHandSpace()},this.setFramebufferScaleFactor=function(e){r=e,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(e){i=e,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return d},this.getSession=function(){return u},this.setSession=async function(e){u=e,null!==u&&(u.addEventListener("select",v),u.addEventListener("selectstart",v),u.addEventListener("selectend",v),u.addEventListener("squeeze",v),u.addEventListener("squeezestart",v),u.addEventListener("squeezeend",v),u.addEventListener("end",y),u.addEventListener("inputsourceschange",x),!0!==(e=t.getContextAttributes()).xrCompatible&&await t.makeXRCompatible(),e={antialias:e.antialias,alpha:e.alpha,depth:e.depth,stencil:e.stencil,framebufferScaleFactor:r},e=new XRWebGLLayer(u,t,e),u.updateRenderState({baseLayer:e}),d=await u.requestReferenceSpace(i),S.setContext(u),S.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"}))};const _=new sr,b=new sr;function w(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}this.getCamera=function(e){g.near=s.near=a.near=e.near,g.far=s.far=a.far=e.far,l===g.near&&h===g.far||(u.updateRenderState({depthNear:g.near,depthFar:g.far}),l=g.near,h=g.far);var t=e.parent,n=g.cameras;w(g,t);for(let e=0;e<n.length;e++)w(n[e],t);e.matrixWorld.copy(g.matrixWorld),e.matrix.copy(g.matrix),e.matrix.decompose(e.position,e.quaternion,e.scale);const r=e.children;for(let e=0,t=r.length;e<t;e++)r[e].updateMatrixWorld(!0);return 2===n.length?function(e,t,n){_.setFromMatrixPosition(t.matrixWorld),b.setFromMatrixPosition(n.matrixWorld);var r=_.distanceTo(b),i=t.projectionMatrix.elements,a=n.projectionMatrix.elements,s=i[14]/(i[10]-1),o=i[14]/(i[10]+1),l=(i[9]+1)/i[5],h=(i[9]-1)/i[5],c=(i[8]-1)/i[0],n=(a[8]+1)/a[0],i=s*c,a=s*n,c=(n=r/(n-c))*-c;t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(c),e.translateZ(n),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert(),s+=n,n=o+n,e.projectionMatrix.makePerspective(i-c,r-c+a,l*o/n*s,h*o/n*s,s,n)}(g,a,s):g.projectionMatrix.copy(a.projectionMatrix),g};let M=null;const S=new Oa;S.setAnimationLoop(function(e,t){if(p=t.getViewerPose(d),null!==p){var n=p.views;const o=u.renderState.baseLayer;c.bindXRFramebuffer(o.framebuffer);let t=!1;n.length!==g.cameras.length&&(g.cameras.length=0,t=!0);for(let e=0;e<n.length;e++){var r=n[e],i=o.getViewport(r);const l=f[e];l.matrix.fromArray(r.transform.matrix),l.projectionMatrix.fromArray(r.projectionMatrix),l.viewport.set(i.x,i.y,i.width,i.height),0===e&&g.matrix.copy(l.matrix),!0===t&&g.cameras.push(l)}}var a=u.inputSources;for(let e=0;e<m.length;e++){const h=m[e];var s=a[e];h.update(s,t,d)}M&&M(e,t)}),this.setAnimationLoop=function(e){M=e},this.dispose=function(){}}}function Jo(a){function l(e,t){e.opacity.value=t.opacity,t.color&&e.diffuse.value.copy(t.color),t.emissive&&e.emissive.value.copy(t.emissive).multiplyScalar(t.emissiveIntensity),t.map&&(e.map.value=t.map),t.alphaMap&&(e.alphaMap.value=t.alphaMap),t.specularMap&&(e.specularMap.value=t.specularMap);var n=a.get(t).envMap;n&&(e.envMap.value=n,e.flipEnvMap.value=n.isCubeTexture&&n._needsFlipEnvMap?-1:1,e.reflectivity.value=t.reflectivity,e.refractionRatio.value=t.refractionRatio,void 0!==(n=a.get(n).__maxMipLevel)&&(e.maxMipLevel.value=n)),t.lightMap&&(e.lightMap.value=t.lightMap,e.lightMapIntensity.value=t.lightMapIntensity),t.aoMap&&(e.aoMap.value=t.aoMap,e.aoMapIntensity.value=t.aoMapIntensity);let r;t.map?r=t.map:t.specularMap?r=t.specularMap:t.displacementMap?r=t.displacementMap:t.normalMap?r=t.normalMap:t.bumpMap?r=t.bumpMap:t.roughnessMap?r=t.roughnessMap:t.metalnessMap?r=t.metalnessMap:t.alphaMap?r=t.alphaMap:t.emissiveMap?r=t.emissiveMap:t.clearcoatMap?r=t.clearcoatMap:t.clearcoatNormalMap?r=t.clearcoatNormalMap:t.clearcoatRoughnessMap&&(r=t.clearcoatRoughnessMap),void 0!==r&&(r.isWebGLRenderTarget&&(r=r.texture),!0===r.matrixAutoUpdate&&r.updateMatrix(),e.uvTransform.value.copy(r.matrix));let i;t.aoMap?i=t.aoMap:t.lightMap&&(i=t.lightMap),void 0!==i&&(i.isWebGLRenderTarget&&(i=i.texture),!0===i.matrixAutoUpdate&&i.updateMatrix(),e.uv2Transform.value.copy(i.matrix))}function h(e,t){e.roughness.value=t.roughness,e.metalness.value=t.metalness,t.roughnessMap&&(e.roughnessMap.value=t.roughnessMap),t.metalnessMap&&(e.metalnessMap.value=t.metalnessMap),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===X&&(e.bumpScale.value*=-1)),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===X&&e.normalScale.value.negate()),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias),a.get(t).envMap&&(e.envMapIntensity.value=t.envMapIntensity)}return{refreshFogUniforms:function(e,t){e.fogColor.value.copy(t.color),t.isFog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t.isFogExp2&&(e.fogDensity.value=t.density)},refreshMaterialUniforms:function(e,t,n,r){var i,a,s,o;t.isMeshBasicMaterial?l(e,t):t.isMeshLambertMaterial?(l(e,t),s=e,(o=t).emissiveMap&&(s.emissiveMap.value=o.emissiveMap)):t.isMeshToonMaterial?(l(e,t),function(e,t){t.gradientMap&&(e.gradientMap.value=t.gradientMap);t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap);t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===X&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===X&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,t)):t.isMeshPhongMaterial?(l(e,t),function(e,t){e.specular.value.copy(t.specular),e.shininess.value=Math.max(t.shininess,1e-4),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap);t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===X&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===X&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,t)):t.isMeshStandardMaterial?(l(e,t),(t.isMeshPhysicalMaterial?function(e,t){h(e,t),e.reflectivity.value=t.reflectivity,e.clearcoat.value=t.clearcoat,e.clearcoatRoughness.value=t.clearcoatRoughness,t.sheen&&e.sheen.value.copy(t.sheen);t.clearcoatMap&&(e.clearcoatMap.value=t.clearcoatMap);t.clearcoatRoughnessMap&&(e.clearcoatRoughnessMap.value=t.clearcoatRoughnessMap);t.clearcoatNormalMap&&(e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale),e.clearcoatNormalMap.value=t.clearcoatNormalMap,t.side===X&&e.clearcoatNormalScale.value.negate());e.transmission.value=t.transmission,t.transmissionMap&&(e.transmissionMap.value=t.transmissionMap)}:h)(e,t)):t.isMeshMatcapMaterial?(l(e,t),function(e,t){t.matcap&&(e.matcap.value=t.matcap);t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===X&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===X&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,t)):t.isMeshDepthMaterial?(l(e,t),i=e,(a=t).displacementMap&&(i.displacementMap.value=a.displacementMap,i.displacementScale.value=a.displacementScale,i.displacementBias.value=a.displacementBias)):t.isMeshDistanceMaterial?(l(e,t),function(e,t){t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias);e.referencePosition.value.copy(t.referencePosition),e.nearDistance.value=t.nearDistance,e.farDistance.value=t.farDistance}(e,t)):t.isMeshNormalMaterial?(l(e,t),function(e,t){t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,t.side===X&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),t.side===X&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,t)):t.isLineBasicMaterial?(i=t,(a=e).diffuse.value.copy(i.color),a.opacity.value=i.opacity,t.isLineDashedMaterial&&(a=t,(i=e).dashSize.value=a.dashSize,i.totalSize.value=a.dashSize+a.gapSize,i.scale.value=a.scale)):t.isPointsMaterial?function(e,t,n,r){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.size.value=t.size*n,e.scale.value=.5*r,t.map&&(e.map.value=t.map);t.alphaMap&&(e.alphaMap.value=t.alphaMap);let i;t.map?i=t.map:t.alphaMap&&(i=t.alphaMap);void 0!==i&&(!0===i.matrixAutoUpdate&&i.updateMatrix(),e.uvTransform.value.copy(i.matrix))}(e,t,n,r):t.isSpriteMaterial?function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.rotation.value=t.rotation,t.map&&(e.map.value=t.map);t.alphaMap&&(e.alphaMap.value=t.alphaMap);let n;t.map?n=t.map:t.alphaMap&&(n=t.alphaMap);void 0!==n&&(!0===n.matrixAutoUpdate&&n.updateMatrix(),e.uvTransform.value.copy(n.matrix))}(e,t):t.isShadowMaterial?(e.color.value.copy(t.color),e.opacity.value=t.opacity):t.isShaderMaterial&&(t.uniformsNeedUpdate=!1)}}}function Qo(e){const i=void 0!==(e=e||{}).canvas?e.canvas:function(){const e=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return e.style.display="block",e}(),t=void 0!==e.context?e.context:null,n=void 0!==e.alpha&&e.alpha,r=void 0===e.depth||e.depth,a=void 0===e.stencil||e.stencil,s=void 0!==e.antialias&&e.antialias,o=void 0===e.premultipliedAlpha||e.premultipliedAlpha,l=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,h=void 0!==e.powerPreference?e.powerPreference:"default",c=void 0!==e.failIfMajorPerformanceCaveat&&e.failIfMajorPerformanceCaveat;let m=null,M=null;const u=[],d=[];this.domElement=i,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=Jt,this.physicallyCorrectLights=!1,this.toneMapping=Ee,this.toneMappingExposure=1;const S=this;let p=!1,f=0,g=0,T=null,E=-1,A=null;const v=new nr,y=new nr;let x=null,_=i.width,L=i.height,R=1,b=null,w=null;const C=new nr(0,0,_,L),P=new nr(0,0,_,L);let D=!1;const I=new Ba;let N=!1,z=!1;const B=new Or,O=new sr,F={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function H(){return null===T?R:1}let U=t;function G(t,n){for(let e=0;e<t.length;e++){var r=t[e],r=i.getContext(r,n);if(null!==r)return r}return null}try{var V={alpha:n,depth:r,stencil:a,antialias:s,premultipliedAlpha:o,preserveDrawingBuffer:l,powerPreference:h,failIfMajorPerformanceCaveat:c};if(i.addEventListener("webglcontextlost",pe,!1),i.addEventListener("webglcontextrestored",me,!1),null===U){const Te=["webgl2","webgl","experimental-webgl"];if(!0===S.isWebGL1Renderer&&Te.shift(),U=G(Te,V),null===U)throw G(Te)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===U.getShaderPrecisionFormat&&(U.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(e){throw console.error("THREE.WebGLRenderer: "+e.message),e}let k,W,j,q,X,Y,Z,J,Q,K,$,ee,te,ne,re,ie,ae,se,oe,le,he,ce;function ue(){k=new Za(U),W=new qa(U,k,e),k.init(W),he=new Wo(U,k,W),j=new Vo(U,k,W),q=new Ka(U),X=new Eo,Y=new ko(U,k,j,X,W,he,q),Z=new Ya(S),J=new Fa(U,W),ce=new Wa(U,k,J,W),Q=new Ja(U,J,q,ce),K=new ns(U,Q,J,q),se=new ts(U),re=new Xa(X),$=new To(S,Z,k,W,ce,re),ee=new Jo(X),te=new Co(X),ne=new Bo(k,W),ae=new ka(S,Z,j,K,o),ie=new Go(S,K,W),oe=new ja(U,k,q,W),le=new Qa(U,k,q,W),q.programs=$.programs,S.capabilities=W,S.extensions=k,S.properties=X,S.renderLists=te,S.shadowMap=ie,S.state=j,S.info=q}ue();const de=new Zo(S,U);function pe(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),p=!0}function me(){console.log("THREE.WebGLRenderer: Context Restored."),p=!1;var e=q.autoReset,t=ie.enabled,n=ie.autoUpdate,r=ie.needsUpdate,i=ie.type;ue(),q.autoReset=e,ie.enabled=t,ie.autoUpdate=n,ie.needsUpdate=r,ie.type=i}function fe(e){const t=e.target;t.removeEventListener("dispose",fe),function(e){const t=X.get(e).programs;void 0!==t&&t.forEach(function(e){$.releaseProgram(e)})}(e=t),X.remove(e)}this.xr=de,this.getContext=function(){return U},this.getContextAttributes=function(){return U.getContextAttributes()},this.forceContextLoss=function(){const e=k.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){const e=k.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return R},this.setPixelRatio=function(e){void 0!==e&&(R=e,this.setSize(_,L,!1))},this.getSize=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),e=new Zn),e.set(_,L)},this.setSize=function(e,t,n){de.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(_=e,L=t,i.width=Math.floor(e*R),i.height=Math.floor(t*R),!1!==n&&(i.style.width=e+"px",i.style.height=t+"px"),this.setViewport(0,0,e,t))},this.getDrawingBufferSize=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),e=new Zn),e.set(_*R,L*R).floor()},this.setDrawingBufferSize=function(e,t,n){_=e,L=t,R=n,i.width=Math.floor(e*n),i.height=Math.floor(t*n),this.setViewport(0,0,e,t)},this.getCurrentViewport=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),e=new nr),e.copy(v)},this.getViewport=function(e){return e.copy(C)},this.setViewport=function(e,t,n,r){e.isVector4?C.set(e.x,e.y,e.z,e.w):C.set(e,t,n,r),j.viewport(v.copy(C).multiplyScalar(R).floor())},this.getScissor=function(e){return e.copy(P)},this.setScissor=function(e,t,n,r){e.isVector4?P.set(e.x,e.y,e.z,e.w):P.set(e,t,n,r),j.scissor(y.copy(P).multiplyScalar(R).floor())},this.getScissorTest=function(){return D},this.setScissorTest=function(e){j.setScissorTest(D=e)},this.setOpaqueSort=function(e){b=e},this.setTransparentSort=function(e){w=e},this.getClearColor=function(e){return void 0===e&&(console.warn("WebGLRenderer: .getClearColor() now requires a Color as an argument"),e=new Di),e.copy(ae.getClearColor())},this.setClearColor=function(){ae.setClearColor.apply(ae,arguments)},this.getClearAlpha=function(){return ae.getClearAlpha()},this.setClearAlpha=function(){ae.setClearAlpha.apply(ae,arguments)},this.clear=function(e,t,n){let r=0;void 0!==e&&!e||(r|=16384),void 0!==t&&!t||(r|=256),void 0!==n&&!n||(r|=1024),U.clear(r)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){i.removeEventListener("webglcontextlost",pe,!1),i.removeEventListener("webglcontextrestored",me,!1),te.dispose(),ne.dispose(),X.dispose(),Z.dispose(),K.dispose(),ce.dispose(),de.dispose(),de.removeEventListener("sessionstart",ve),de.removeEventListener("sessionend",ye),xe.stop()},this.renderBufferImmediate=function(e,t){ce.initAttributes();const n=X.get(e);e.hasPositions&&!n.position&&(n.position=U.createBuffer()),e.hasNormals&&!n.normal&&(n.normal=U.createBuffer()),e.hasUvs&&!n.uv&&(n.uv=U.createBuffer()),e.hasColors&&!n.color&&(n.color=U.createBuffer());t=t.getAttributes();e.hasPositions&&(U.bindBuffer(34962,n.position),U.bufferData(34962,e.positionArray,35048),ce.enableAttribute(t.position),U.vertexAttribPointer(t.position,3,5126,!1,0,0)),e.hasNormals&&(U.bindBuffer(34962,n.normal),U.bufferData(34962,e.normalArray,35048),ce.enableAttribute(t.normal),U.vertexAttribPointer(t.normal,3,5126,!1,0,0)),e.hasUvs&&(U.bindBuffer(34962,n.uv),U.bufferData(34962,e.uvArray,35048),ce.enableAttribute(t.uv),U.vertexAttribPointer(t.uv,2,5126,!1,0,0)),e.hasColors&&(U.bindBuffer(34962,n.color),U.bufferData(34962,e.colorArray,35048),ce.enableAttribute(t.color),U.vertexAttribPointer(t.color,3,5126,!1,0,0)),ce.disableUnusedAttributes(),U.drawArrays(4,0,e.count),e.count=0},this.renderBufferDirect=function(e,t,n,r,i,a){null===t&&(t=F);var s=i.isMesh&&i.matrixWorld.determinant()<0,o=Se(e,t,r,i);j.setMaterial(r,s);let l=n.index;e=n.attributes.position;if(null===l){if(void 0===e||0===e.count)return}else if(0===l.count)return;let h=1;!0===r.wireframe&&(l=Q.getWireframeAttribute(n),h=2),(r.morphTargets||r.morphNormals)&&se.update(i,n,r,o),ce.setup(i,r,o,n,l);let c=oe;null!==l&&(u=J.get(l),c=le,c.setIndex(u));var t=(null!==l?l:e).count,s=n.drawRange.start*h,o=n.drawRange.count*h,u=null!==a?a.start*h:0,e=null!==a?a.count*h:1/0,a=Math.max(s,u),e=Math.min(t,s+o,u+e)-1,e=Math.max(0,e-a+1);if(0!==e){if(i.isMesh)!0===r.wireframe?(j.setLineWidth(r.wireframeLinewidth*H()),c.setMode(1)):c.setMode(4);else if(i.isLine){let e=r.linewidth;void 0===e&&(e=1),j.setLineWidth(e*H()),i.isLineSegments?c.setMode(1):i.isLineLoop?c.setMode(2):c.setMode(3)}else i.isPoints?c.setMode(0):i.isSprite&&c.setMode(4);i.isInstancedMesh?c.renderInstances(a,e,i.count):n.isInstancedBufferGeometry?(n=Math.min(n.instanceCount,n._maxInstanceCount),c.renderInstances(a,e,n)):c.render(a,e)}},this.compile=function(r,t){M=ne.get(r),M.init(),r.traverseVisible(function(e){e.isLight&&e.layers.test(t.layers)&&(M.pushLight(e),e.castShadow&&M.pushShadow(e))}),M.setupLights(),r.traverse(function(t){var n=t.material;if(n)if(Array.isArray(n))for(let e=0;e<n.length;e++)we(n[e],r,t);else we(n,r,t)})};let ge=null;function ve(){xe.stop()}function ye(){xe.start()}const xe=new Oa;function _e(n,r,i){var a=!0===r.isScene?r.overrideMaterial:null;for(let e=0,t=n.length;e<t;e++){var s=n[e];const d=s.object;var o=s.geometry,l=null===a?s.material:a,h=s.group;if(i.isArrayCamera){var c=i.cameras;for(let e=0,t=c.length;e<t;e++){var u=c[e];d.layers.test(u.layers)&&(j.viewport(v.copy(u.viewport)),M.setupLightsView(u),be(d,r,u,o,l,h))}}else be(d,r,i,o,l,h)}}function be(e,t,n,r,i,a){var s,o;e.onBeforeRender(S,t,n,r,i,a),e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),e.isImmediateRenderObject?(s=Se(n,t,i,e),j.setMaterial(i),ce.reset(),o=s,e.render(function(e){S.renderBufferImmediate(e,o)})):S.renderBufferDirect(n,t,r,i,e,a),e.onAfterRender(S,t,n,r,i,a)}function we(e,t,n){!0!==t.isScene&&(t=F);const r=X.get(e);var i=M.state.lights,a=M.state.shadowsArray,s=i.state.version;const o=$.getParameters(e,i.state,a,t,n);n=$.getProgramCacheKey(o);let l=r.programs;r.environment=e.isMeshStandardMaterial?t.environment:null,r.fog=t.fog,r.envMap=Z.get(e.envMap||r.environment),void 0===l&&(e.addEventListener("dispose",fe),l=new Map,r.programs=l);let h=l.get(n);if(void 0!==h){if(r.currentProgram===h&&r.lightsStateVersion===s)return Me(e,o),h}else o.uniforms=$.getUniforms(e),e.onBuild(o,S),e.onBeforeCompile(o,S),h=$.acquireProgram(o,n),l.set(n,h),r.uniforms=o.uniforms;const c=r.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(c.clippingPlanes=re.uniform),Me(e,o),r.needsLights=(e=e).isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&!0===e.lights,r.lightsStateVersion=s,r.needsLights&&(c.ambientLightColor.value=i.state.ambient,c.lightProbe.value=i.state.probe,c.directionalLights.value=i.state.directional,c.directionalLightShadows.value=i.state.directionalShadow,c.spotLights.value=i.state.spot,c.spotLightShadows.value=i.state.spotShadow,c.rectAreaLights.value=i.state.rectArea,c.ltc_1.value=i.state.rectAreaLTC1,c.ltc_2.value=i.state.rectAreaLTC2,c.pointLights.value=i.state.point,c.pointLightShadows.value=i.state.pointShadow,c.hemisphereLights.value=i.state.hemi,c.directionalShadowMap.value=i.state.directionalShadowMap,c.directionalShadowMatrix.value=i.state.directionalShadowMatrix,c.spotShadowMap.value=i.state.spotShadowMap,c.spotShadowMatrix.value=i.state.spotShadowMatrix,c.pointShadowMap.value=i.state.pointShadowMap,c.pointShadowMatrix.value=i.state.pointShadowMatrix);i=h.getUniforms(),i=ao.seqWithValue(i.seq,c);return r.currentProgram=h,r.uniformsList=i,h}function Me(e,t){const n=X.get(e);n.outputEncoding=t.outputEncoding,n.instancing=t.instancing,n.numClippingPlanes=t.numClippingPlanes,n.numIntersection=t.numClipIntersection,n.vertexAlphas=t.vertexAlphas}function Se(e,t,n,r){!0!==t.isScene&&(t=F),Y.resetTextureUnits();var i=t.fog,a=n.isMeshStandardMaterial?t.environment:null,s=null===T?S.outputEncoding:T.texture.encoding,o=Z.get(n.envMap||a),l=!0===n.vertexColors&&r.geometry&&r.geometry.attributes.color&&4===r.geometry.attributes.color.itemSize;const h=X.get(n);var c=M.state.lights;!0===N&&(!0!==z&&e===A||(a=e===A&&n.id===E,re.setState(n,e,a)));let u=!1;n.version===h.__version?(h.needsLights&&h.lightsStateVersion!==c.state.version||h.outputEncoding!==s||r.isInstancedMesh&&!1===h.instancing||!r.isInstancedMesh&&!0===h.instancing||h.envMap!==o||n.fog&&h.fog!==i||void 0!==h.numClippingPlanes&&(h.numClippingPlanes!==re.numPlanes||h.numIntersection!==re.numIntersection)||h.vertexAlphas!==l)&&(u=!0):(u=!0,h.__version=n.version);let d=h.currentProgram;!0===u&&(d=we(n,t,r));let p=!1,m=!1,f=!1;const g=d.getUniforms(),v=h.uniforms;if(j.useProgram(d.program)&&(p=!0,m=!0,f=!0),n.id!==E&&(E=n.id,m=!0),p||A!==e){if(g.setValue(U,"projectionMatrix",e.projectionMatrix),W.logarithmicDepthBuffer&&g.setValue(U,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),A!==e&&(A=e,m=!0,f=!0),n.isShaderMaterial||n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshStandardMaterial||n.envMap){const _=g.map.cameraPosition;void 0!==_&&_.setValue(U,O.setFromMatrixPosition(e.matrixWorld))}(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial)&&g.setValue(U,"isOrthographic",!0===e.isOrthographicCamera),(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial||n.isShadowMaterial||n.skinning)&&g.setValue(U,"viewMatrix",e.matrixWorldInverse)}if(n.skinning){g.setOptional(U,r,"bindMatrix"),g.setOptional(U,r,"bindMatrixInverse");const b=r.skeleton;if(b){e=b.bones;if(W.floatVertexTextures){if(null===b.boneTexture){var y=qn(y=Math.sqrt(4*e.length));y=Math.max(y,4);const w=new Float32Array(y*y*4);w.set(b.boneMatrices);var x=new Ia(w,y,y,Fe,Ie);b.boneMatrices=w,b.boneTexture=x,b.boneTextureSize=y}g.setValue(U,"boneTexture",b.boneTexture,Y),g.setValue(U,"boneTextureSize",b.boneTextureSize)}else g.setOptional(U,b,"boneMatrices")}}return!m&&h.receiveShadow===r.receiveShadow||(h.receiveShadow=r.receiveShadow,g.setValue(U,"receiveShadow",r.receiveShadow)),m&&(g.setValue(U,"toneMappingExposure",S.toneMappingExposure),h.needsLights&&(x=v,y=f,x.ambientLightColor.needsUpdate=y,x.lightProbe.needsUpdate=y,x.directionalLights.needsUpdate=y,x.directionalLightShadows.needsUpdate=y,x.pointLights.needsUpdate=y,x.pointLightShadows.needsUpdate=y,x.spotLights.needsUpdate=y,x.spotLightShadows.needsUpdate=y,x.rectAreaLights.needsUpdate=y,x.hemisphereLights.needsUpdate=y),i&&n.fog&&ee.refreshFogUniforms(v,i),ee.refreshMaterialUniforms(v,n,R,L),ao.upload(U,h.uniformsList,v,Y)),n.isShaderMaterial&&!0===n.uniformsNeedUpdate&&(ao.upload(U,h.uniformsList,v,Y),n.uniformsNeedUpdate=!1),n.isSpriteMaterial&&g.setValue(U,"center",r.center),g.setValue(U,"modelViewMatrix",r.modelViewMatrix),g.setValue(U,"normalMatrix",r.normalMatrix),g.setValue(U,"modelMatrix",r.matrixWorld),d}xe.setAnimationLoop(function(e){ge&&ge(e)}),"undefined"!=typeof window&&xe.setContext(window),this.setAnimationLoop=function(e){ge=e,de.setAnimationLoop(e),null===e?xe.stop():xe.start()},de.addEventListener("sessionstart",ve),de.addEventListener("sessionend",ye),this.render=function(e,t){let n,r;var i,a;void 0!==arguments[2]&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),n=arguments[2]),void 0!==arguments[3]&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),r=arguments[3]),void 0===t||!0===t.isCamera?!0!==p&&(!0===e.autoUpdate&&e.updateMatrixWorld(),null===t.parent&&t.updateMatrixWorld(),!0===de.enabled&&!0===de.isPresenting&&(t=de.getCamera(t)),!0===e.isScene&&e.onBeforeRender(S,e,t,n||T),M=ne.get(e,d.length),M.init(),d.push(M),B.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),I.setFromProjectionMatrix(B),z=this.localClippingEnabled,N=re.init(this.clippingPlanes,z,t),m=te.get(e,u.length),m.init(),u.push(m),function n(r,i,a,s){if(!1===r.visible)return;var e=r.layers.test(i.layers);if(e)if(r.isGroup)a=r.renderOrder;else if(r.isLOD)!0===r.autoUpdate&&r.update(i);else if(r.isLight)M.pushLight(r),r.castShadow&&M.pushShadow(r);else if(r.isSprite){var t,o;r.frustumCulled&&!I.intersectsSprite(r)||(s&&O.setFromMatrixPosition(r.matrixWorld).applyMatrix4(B),t=K.update(r),(o=r.material).visible&&m.push(r,t,o,a,O.z,null))}else if(r.isImmediateRenderObject)s&&O.setFromMatrixPosition(r.matrixWorld).applyMatrix4(B),m.push(r,null,r.material,a,O.z,null);else if((r.isMesh||r.isLine||r.isPoints)&&(r.isSkinnedMesh&&r.skeleton.frame!==q.render.frame&&(r.skeleton.update(),r.skeleton.frame=q.render.frame),!r.frustumCulled||I.intersectsObject(r))){s&&O.setFromMatrixPosition(r.matrixWorld).applyMatrix4(B);var l=K.update(r),h=r.material;if(Array.isArray(h)){var c=l.groups;for(let e=0,t=c.length;e<t;e++){var u=c[e],d=h[u.materialIndex];d&&d.visible&&m.push(r,l,d,a,O.z,u)}}else h.visible&&m.push(r,l,h,a,O.z,null)}var p=r.children;for(let e=0,t=p.length;e<t;e++)n(p[e],i,a,s)}(e,t,0,S.sortObjects),m.finish(),!0===S.sortObjects&&m.sort(b,w),!0===N&&re.beginShadows(),a=M.state.shadowsArray,ie.render(a,e,t),M.setupLights(),M.setupLightsView(t),!0===N&&re.endShadows(),!0===this.info.autoReset&&this.info.reset(),void 0!==n&&this.setRenderTarget(n),ae.render(m,e,t,r),i=m.opaque,a=m.transparent,0<i.length&&_e(i,e,t),0<a.length&&_e(a,e,t),null!==T&&(Y.updateRenderTargetMipmap(T),Y.updateMultisampleRenderTarget(T)),!0===e.isScene&&e.onAfterRender(S,e,t),j.buffers.depth.setTest(!0),j.buffers.depth.setMask(!0),j.buffers.color.setMask(!0),j.setPolygonOffset(!1),ce.resetDefaultState(),E=-1,A=null,d.pop(),M=0<d.length?d[d.length-1]:null,u.pop(),m=0<u.length?u[u.length-1]:null):console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")},this.getActiveCubeFace=function(){return f},this.getActiveMipmapLevel=function(){return g},this.getRenderTarget=function(){return T},this.setRenderTarget=function(e,t=0,n=0){T=e,f=t,g=n,e&&void 0===X.get(e).__webglFramebuffer&&Y.setupRenderTarget(e);let r=null,i=!1,a=!1;var s;x=e?(((s=e.texture).isDataTexture3D||s.isDataTexture2DArray)&&(a=!0),s=X.get(e).__webglFramebuffer,e.isWebGLCubeRenderTarget?(r=s[t],i=!0):r=e.isWebGLMultisampleRenderTarget?X.get(e).__webglMultisampledFramebuffer:s,v.copy(e.viewport),y.copy(e.scissor),e.scissorTest):(v.copy(C).multiplyScalar(R).floor(),y.copy(P).multiplyScalar(R).floor(),D),j.bindFramebuffer(36160,r),j.viewport(v),j.scissor(y),j.setScissorTest(x),i?(s=X.get(e.texture),U.framebufferTexture2D(36160,36064,34069+t,s.__webglTexture,n)):a&&(e=X.get(e.texture),t=t||0,U.framebufferTextureLayer(36160,36064,e.__webglTexture,n||0,t))},this.readRenderTargetPixels=function(t,n,r,i,a,s,o){if(t&&t.isWebGLRenderTarget){let e=X.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==o&&(e=e[o]),e){j.bindFramebuffer(36160,e);try{var l=t.texture,h=l.format,c=l.type;if(h!==Fe&&he.convert(h)!==U.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");var u=c===Ne&&(k.has("EXT_color_buffer_half_float")||W.isWebGL2&&k.has("EXT_color_buffer_float"));if(!(c===Ce||he.convert(c)===U.getParameter(35738)||c===Ie&&(W.isWebGL2||k.has("OES_texture_float")||k.has("WEBGL_color_buffer_float"))||u))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===U.checkFramebufferStatus(36160)?0<=n&&n<=t.width-i&&0<=r&&r<=t.height-a&&U.readPixels(n,r,i,a,he.convert(h),he.convert(c),s):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{const e=null!==T?X.get(T).__webglFramebuffer:null;j.bindFramebuffer(36160,e)}}}else console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.")},this.copyFramebufferToTexture=function(e,t,n=0){var r=Math.pow(2,-n),i=Math.floor(t.image.width*r),a=Math.floor(t.image.height*r),r=he.convert(t.format);Y.setTexture2D(t,0),U.copyTexImage2D(3553,n,r,e.x,e.y,i,a,0),j.unbindTexture()},this.copyTextureToTexture=function(e,t,n,r=0){var i=t.image.width,a=t.image.height,s=he.convert(n.format),o=he.convert(n.type);Y.setTexture2D(n,0),U.pixelStorei(37440,n.flipY),U.pixelStorei(37441,n.premultiplyAlpha),U.pixelStorei(3317,n.unpackAlignment),t.isDataTexture?U.texSubImage2D(3553,r,e.x,e.y,i,a,s,o,t.image.data):t.isCompressedTexture?U.compressedTexSubImage2D(3553,r,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,s,t.mipmaps[0].data):U.texSubImage2D(3553,r,e.x,e.y,s,o,t.image),0===r&&n.generateMipmaps&&U.generateMipmap(3553),j.unbindTexture()},this.copyTextureToTexture3D=function(t,n,r,i,a=0){if(S.isWebGL1Renderer)console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");else{var{width:s,height:o,data:l}=r.image,h=he.convert(i.format),c=he.convert(i.type);let e;if(i.isDataTexture3D)Y.setTexture3D(i,0),e=32879;else{if(!i.isDataTexture2DArray)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");Y.setTexture2DArray(i,0),e=35866}U.pixelStorei(37440,i.flipY),U.pixelStorei(37441,i.premultiplyAlpha),U.pixelStorei(3317,i.unpackAlignment);var u=U.getParameter(3314),d=U.getParameter(32878),p=U.getParameter(3316),m=U.getParameter(3315),r=U.getParameter(32877);U.pixelStorei(3314,s),U.pixelStorei(32878,o),U.pixelStorei(3316,t.min.x),U.pixelStorei(3315,t.min.y),U.pixelStorei(32877,t.min.z),U.texSubImage3D(e,a,n.x,n.y,n.z,t.max.x-t.min.x+1,t.max.y-t.min.y+1,t.max.z-t.min.z+1,h,c,l),U.pixelStorei(3314,u),U.pixelStorei(32878,d),U.pixelStorei(3316,p),U.pixelStorei(3315,m),U.pixelStorei(32877,r),0===a&&i.generateMipmaps&&U.generateMipmap(e),j.unbindTexture()}},this.initTexture=function(e){Y.setTexture2D(e,0),j.unbindTexture()},this.resetState=function(){f=0,g=0,T=null,j.reset(),ce.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class Ko extends Qo{}Ko.prototype.isWebGL1Renderer=!0;class $o{constructor(e,t=25e-5){this.name="",this.color=new Di(e),this.density=t}clone(){return new $o(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}$o.prototype.isFogExp2=!0;class el{constructor(e,t=1,n=1e3){this.name="",this.color=new Di(e),this.near=t,this.far=n}clone(){return new el(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}el.prototype.isFog=!0;class tl extends li{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return null!==this.background&&(t.object.background=this.background.toJSON(e)),null!==this.environment&&(t.object.environment=this.environment.toJSON(e)),null!==this.fog&&(t.object.fog=this.fog.toJSON()),t}}tl.prototype.isScene=!0;class nl{constructor(e,t){this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.usage=Tn,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Gn(),this.onUploadCallback=function(){}}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(n,r,i){n*=this.stride,i*=r.stride;for(let e=0,t=this.stride;e<t;e++)this.array[n+e]=r.array[i+e];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Gn()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);e=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]);const t=new nl(e,this.stride);return t.setUsage(this.usage),t}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Gn()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}nl.prototype.isInterleavedBuffer=!0;const rl=new sr;class il{constructor(e,t,n,r){this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=!0===r}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(n){for(let e=0,t=this.data.count;e<t;e++)rl.x=this.getX(e),rl.y=this.getY(e),rl.z=this.getZ(e),rl.applyMatrix4(n),this.setXYZ(e,rl.x,rl.y,rl.z);return this}applyNormalMatrix(n){for(let e=0,t=this.count;e<t;e++)rl.x=this.getX(e),rl.y=this.getY(e),rl.z=this.getZ(e),rl.applyNormalMatrix(n),this.setXYZ(e,rl.x,rl.y,rl.z);return this}transformDirection(n){for(let e=0,t=this.count;e<t;e++)rl.x=this.getX(e),rl.y=this.getY(e),rl.z=this.getZ(e),rl.transformDirection(n),this.setXYZ(e,rl.x,rl.y,rl.z);return this}setX(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){return this.data.array[e*this.data.stride+this.offset]}getY(e){return this.data.array[e*this.data.stride+this.offset+1]}getZ(e){return this.data.array[e*this.data.stride+this.offset+2]}getW(e){return this.data.array[e*this.data.stride+this.offset+3]}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this}setXYZW(e,t,n,r,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this.data.array[e+3]=i,this}clone(e){if(void 0!==e)return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new il(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized);{console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const n=[];for(let e=0;e<this.count;e++){var t=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)n.push(this.data.array[t+e])}return new Bi(new this.array.constructor(n),this.itemSize,this.normalized)}}toJSON(e){if(void 0!==e)return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized};{console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const n=[];for(let e=0;e<this.count;e++){var t=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)n.push(this.data.array[t+e])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:n,normalized:this.normalized}}}}il.prototype.isInterleavedBufferAttribute=!0;class al extends Ti{constructor(e){super(),this.type="SpriteMaterial",this.color=new Di(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this}}al.prototype.isSpriteMaterial=!0;let sl;const ol=new sr,ll=new sr,hl=new sr,cl=new Zn,ul=new Zn,dl=new Or,pl=new sr,ml=new sr,fl=new sr,gl=new Zn,vl=new Zn,yl=new Zn;class xl extends li{constructor(e){var t;super(),this.type="Sprite",void 0===sl&&(sl=new ra,t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),t=new nl(t,5),sl.setIndex([0,1,2,0,2,3]),sl.setAttribute("position",new il(t,3,0,!1)),sl.setAttribute("uv",new il(t,2,3,!1))),this.geometry=sl,this.material=void 0!==e?e:new al,this.center=new Zn(.5,.5)}raycast(e,t){null===e.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),ll.setFromMatrixScale(this.matrixWorld),dl.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),hl.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&ll.multiplyScalar(-hl.z);var n=this.material.rotation;let r,i;0!==n&&(i=Math.cos(n),r=Math.sin(n));var a=this.center;_l(pl.set(-.5,-.5,0),hl,a,ll,r,i),_l(ml.set(.5,-.5,0),hl,a,ll,r,i),_l(fl.set(.5,.5,0),hl,a,ll,r,i),gl.set(0,0),vl.set(1,0),yl.set(1,1);n=e.ray.intersectTriangle(pl,ml,fl,!1,ol);null===n&&(_l(ml.set(-.5,.5,0),hl,a,ll,r,i),vl.set(0,1),null===(n=e.ray.intersectTriangle(pl,fl,ml,!1,ol)))||((n=e.ray.origin.distanceTo(ol))<e.near||n>e.far||t.push({distance:n,point:ol.clone(),uv:Mi.getUV(ol,pl,ml,fl,gl,vl,yl,new Zn),face:null,object:this}))}copy(e){return super.copy(e),void 0!==e.center&&this.center.copy(e.center),this.material=e.material,this}}function _l(e,t,n,r,i,a){cl.subVectors(e,n).addScalar(.5).multiply(r),void 0!==i?(ul.x=a*cl.x-i*cl.y,ul.y=i*cl.x+a*cl.y):ul.copy(cl),e.copy(t),e.x+=ul.x,e.y+=ul.y,e.applyMatrix4(dl)}xl.prototype.isSprite=!0;const bl=new sr,wl=new sr;class Ml extends li{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);var n=e.levels;for(let e=0,t=n.length;e<t;e++){const r=n[e];this.addLevel(r.object.clone(),r.distance)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0){t=Math.abs(t);const n=this.levels;let r;for(r=0;r<n.length&&!(t<n[r].distance);r++);return n.splice(r,0,{distance:t,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(n){var r=this.levels;if(0<r.length){let e,t;for(e=1,t=r.length;e<t&&!(n<r[e].distance);e++);return r[e-1].object}return null}raycast(e,t){var n;0<this.levels.length&&(bl.setFromMatrixPosition(this.matrixWorld),n=e.ray.origin.distanceTo(bl),this.getObjectForDistance(n).raycast(e,t))}update(n){const r=this.levels;if(1<r.length){bl.setFromMatrixPosition(n.matrixWorld),wl.setFromMatrixPosition(this.matrixWorld);var i=bl.distanceTo(wl)/n.zoom;r[0].object.visible=!0;let e,t;for(e=1,t=r.length;e<t&&i>=r[e].distance;e++)r[e-1].object.visible=!1,r[e].object.visible=!0;for(this._currentLevel=e-1;e<t;e++)r[e].object.visible=!1}}toJSON(e){const n=super.toJSON(e);!1===this.autoUpdate&&(n.object.autoUpdate=!1),n.object.levels=[];var r=this.levels;for(let e=0,t=r.length;e<t;e++){var i=r[e];n.object.levels.push({object:i.object.uuid,distance:i.distance})}return n}}const Sl=new sr,Tl=new nr,El=new nr,Al=new sr,Ll=new Or;class Rl extends ba{constructor(e,t){super(e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Or,this.bindMatrixInverse=new Or}copy(e){return super.copy(e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const n=new nr,r=this.geometry.attributes.skinWeight;for(let e=0,t=r.count;e<t;e++){n.x=r.getX(e),n.y=r.getY(e),n.z=r.getZ(e),n.w=r.getW(e);var i=1/n.manhattanLength();i!=1/0?n.multiplyScalar(i):n.set(1,0,0,0),r.setXYZW(e,n.x,n.y,n.z,n.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,t){var n=this.skeleton,r=this.geometry;Tl.fromBufferAttribute(r.attributes.skinIndex,e),El.fromBufferAttribute(r.attributes.skinWeight,e),Sl.fromBufferAttribute(r.attributes.position,e).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let e=0;e<4;e++){var i,a=El.getComponent(e);0!==a&&(i=Tl.getComponent(e),Ll.multiplyMatrices(n.bones[i].matrixWorld,n.boneInverses[i]),t.addScaledVector(Al.copy(Sl).applyMatrix4(Ll),a))}return t.applyMatrix4(this.bindMatrixInverse)}}Rl.prototype.isSkinnedMesh=!0;class Cl extends li{constructor(){super(),this.type="Bone"}}Cl.prototype.isBone=!0;const Pl=new Or,Dl=new Or;class Il{constructor(e=[],t=[]){this.uuid=Gn(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){var e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(16*e.length),0===t.length)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let e=0,t=this.bones.length;e<t;e++)this.boneInverses.push(new Or)}}calculateInverses(){for(let e=this.boneInverses.length=0,t=this.bones.length;e<t;e++){const n=new Or;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const r=this.bones[e];r&&(r.parent&&r.parent.isBone?(r.matrix.copy(r.parent.matrixWorld).invert(),r.matrix.multiply(r.matrixWorld)):r.matrix.copy(r.matrixWorld),r.matrix.decompose(r.position,r.quaternion,r.scale))}}update(){var n=this.bones,r=this.boneInverses,i=this.boneMatrices;const e=this.boneTexture;for(let e=0,t=n.length;e<t;e++){var a=n[e]?n[e].matrixWorld:Dl;Pl.multiplyMatrices(a,r[e]),Pl.toArray(i,16*e)}null!==e&&(e.needsUpdate=!0)}clone(){return new Il(this.bones,this.boneInverses)}getBoneByName(n){for(let e=0,t=this.bones.length;e<t;e++){var r=this.bones[e];if(r.name===n)return r}}dispose(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(n,r){this.uuid=n.uuid;for(let t=0,e=n.bones.length;t<e;t++){var i=n.bones[t];let e=r[i];void 0===e&&(console.warn("THREE.Skeleton: No bone found with UUID:",i),e=new Cl),this.bones.push(e),this.boneInverses.push((new Or).fromArray(n.boneInverses[t]))}return this.init(),this}toJSON(){const n={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};n.uuid=this.uuid;var r=this.bones,i=this.boneInverses;for(let e=0,t=r.length;e<t;e++){var a=r[e];n.bones.push(a.uuid);const s=i[e];n.boneInverses.push(s.toArray())}return n}}const Nl=new Or,zl=new Or,Bl=[],Ol=new ba;class Fl extends ba{constructor(e,t,n){super(e,t),this.instanceMatrix=new Bi(new Float32Array(16*n),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}copy(e){return super.copy(e),this.instanceMatrix.copy(e.instanceMatrix),null!==e.instanceColor&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,3*e)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,16*e)}raycast(e,r){var t=this.matrixWorld,i=this.count;if(Ol.geometry=this.geometry,Ol.material=this.material,void 0!==Ol.material)for(let n=0;n<i;n++){this.getMatrixAt(n,Nl),zl.multiplyMatrices(t,Nl),Ol.matrixWorld=zl,Ol.raycast(e,Bl);for(let e=0,t=Bl.length;e<t;e++){const a=Bl[e];a.instanceId=n,a.object=this,r.push(a)}Bl.length=0}}setColorAt(e,t){null===this.instanceColor&&(this.instanceColor=new Bi(new Float32Array(3*this.count),3)),t.toArray(this.instanceColor.array,3*e)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,16*e)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}Fl.prototype.isInstancedMesh=!0;class Hl extends Ti{constructor(e){super(),this.type="LineBasicMaterial",this.color=new Di(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.morphTargets=e.morphTargets,this}}Hl.prototype.isLineBasicMaterial=!0;const Ul=new sr,Gl=new sr,Vl=new Or,kl=new Br,Wl=new Lr;class jl extends li{constructor(e=new ra,t=new Hl){super(),this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(null===e.index){var n=e.attributes.position;const r=[0];for(let e=1,t=n.count;e<t;e++)Ul.fromBufferAttribute(n,e-1),Gl.fromBufferAttribute(n,e),r[e]=r[e-1],r[e]+=Ul.distanceTo(Gl);e.setAttribute("lineDistance",new ji(r,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(n,r){const e=this.geometry;var t=this.matrixWorld,i=n.params.Line.threshold,a=e.drawRange;if(null===e.boundingSphere&&e.computeBoundingSphere(),Wl.copy(e.boundingSphere),Wl.applyMatrix4(t),Wl.radius+=i,!1!==n.ray.intersectsSphere(Wl)){Vl.copy(t).invert(),kl.copy(n.ray).applyMatrix4(Vl);var i=i/((this.scale.x+this.scale.y+this.scale.z)/3),s=i*i;const p=new sr,m=new sr,f=new sr,g=new sr;var o=this.isLineSegments?2:1;if(e.isBufferGeometry){const v=e.index;var l=e.attributes.position;if(null!==v){var i=Math.max(0,a.start),h=Math.min(v.count,a.start+a.count);for(let e=i,t=h-1;e<t;e+=o){var c=v.getX(e),u=v.getX(e+1);p.fromBufferAttribute(l,c),m.fromBufferAttribute(l,u),s<kl.distanceSqToSegment(p,m,g,f)||(g.applyMatrix4(this.matrixWorld),(u=n.ray.origin.distanceTo(g))<n.near||u>n.far||r.push({distance:u,point:f.clone().applyMatrix4(this.matrixWorld),index:e,face:null,faceIndex:null,object:this}))}}else{var d,h=Math.max(0,a.start),a=Math.min(l.count,a.start+a.count);for(let e=h,t=a-1;e<t;e+=o)p.fromBufferAttribute(l,e),m.fromBufferAttribute(l,e+1),s<kl.distanceSqToSegment(p,m,g,f)||(g.applyMatrix4(this.matrixWorld),(d=n.ray.origin.distanceTo(g))<n.near||d>n.far||r.push({distance:d,point:f.clone().applyMatrix4(this.matrixWorld),index:e,face:null,faceIndex:null,object:this}))}}else e.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}updateMorphTargets(){var e=this.geometry;if(e.isBufferGeometry){var t=e.morphAttributes,n=Object.keys(t);if(0<n.length){var r=t[n[0]];if(void 0!==r){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=r.length;e<t;e++){var i=r[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=e}}}}else{e=e.morphTargets;void 0!==e&&0<e.length&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}jl.prototype.isLine=!0;const ql=new sr,Xl=new sr;class Yl extends jl{constructor(e,t){super(e,t),this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(null===e.index){var n=e.attributes.position;const r=[];for(let e=0,t=n.count;e<t;e+=2)ql.fromBufferAttribute(n,e),Xl.fromBufferAttribute(n,e+1),r[e]=0===e?0:r[e-1],r[e+1]=r[e]+ql.distanceTo(Xl);e.setAttribute("lineDistance",new ji(r,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}Yl.prototype.isLineSegments=!0;class Zl extends jl{constructor(e,t){super(e,t),this.type="LineLoop"}}Zl.prototype.isLineLoop=!0;class Jl extends Ti{constructor(e){super(),this.type="PointsMaterial",this.color=new Di(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.morphTargets=e.morphTargets,this}}Jl.prototype.isPointsMaterial=!0;const Ql=new Or,Kl=new Br,$l=new Lr,eh=new sr;class th extends li{constructor(e=new ra,t=new Jl){super(),this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}raycast(n,r){const e=this.geometry;var i=this.matrixWorld,a=n.params.Points.threshold,s=e.drawRange;if(null===e.boundingSphere&&e.computeBoundingSphere(),$l.copy(e.boundingSphere),$l.applyMatrix4(i),$l.radius+=a,!1!==n.ray.intersectsSphere($l)){Ql.copy(i).invert(),Kl.copy(n.ray).applyMatrix4(Ql);var a=a/((this.scale.x+this.scale.y+this.scale.z)/3),o=a*a;if(e.isBufferGeometry){const u=e.index;var l=e.attributes.position;if(null!==u){var a=Math.max(0,s.start),h=Math.min(u.count,s.start+s.count);for(let e=a,t=h;e<t;e++){var c=u.getX(e);eh.fromBufferAttribute(l,c),nh(eh,c,o,i,n,r,this)}}else{h=Math.max(0,s.start),s=Math.min(l.count,s.start+s.count);for(let e=h,t=s;e<t;e++)eh.fromBufferAttribute(l,e),nh(eh,e,o,i,n,r,this)}}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}updateMorphTargets(){var e=this.geometry;if(e.isBufferGeometry){var t=e.morphAttributes,n=Object.keys(t);if(0<n.length){var r=t[n[0]];if(void 0!==r){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=r.length;e<t;e++){var i=r[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[i]=e}}}}else{e=e.morphTargets;void 0!==e&&0<e.length&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}function nh(e,t,n,r,i,a,s){var o=Kl.distanceSqToPoint(e);if(o<n){const l=new sr;Kl.closestPointToPoint(e,l),l.applyMatrix4(r);r=i.ray.origin.distanceTo(l);r<i.near||r>i.far||a.push({distance:r,distanceToRay:Math.sqrt(o),point:l,index:t,face:null,object:s})}}th.prototype.isPoints=!0;class rh extends er{constructor(t,e,n,r,i,a,s,o,l){super(t,e,n,r,i,a,s,o,l),this.format=void 0!==s?s:Oe,this.minFilter=void 0!==a?a:Ae,this.magFilter=void 0!==i?i:Ae,this.generateMipmaps=!1;const h=this;"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback(function e(){h.needsUpdate=!0,t.requestVideoFrameCallback(e)})}clone(){return new this.constructor(this.image).copy(this)}update(){var e=this.image;!1=="requestVideoFrameCallback"in e&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}rh.prototype.isVideoTexture=!0;class ih extends er{constructor(e,t,n,r,i,a,s,o,l,h,c,u){super(null,a,s,o,l,h,r,i,c,u),this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}ih.prototype.isCompressedTexture=!0;class ah extends er{constructor(e,t,n,r,i,a,s,o,l){super(e,t,n,r,i,a,s,o,l),this.needsUpdate=!0}}ah.prototype.isCanvasTexture=!0;class sh extends er{constructor(e,t,n,r,i,a,s,o,l,h){if((h=void 0!==h?h:Ve)!==Ve&&h!==ke)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");super(null,r,i,a,s,o,h,n=void 0===(n=void 0===n&&h===Ve?Pe:n)&&h===ke?ze:n,l),this.image={width:e,height:t},this.magFilter=void 0!==s?s:V,this.minFilter=void 0!==o?o:V,this.flipY=!1,this.generateMipmaps=!1}}sh.prototype.isDepthTexture=!0;class oh extends ra{constructor(n=1,r=8,i=0,a=2*Math.PI){super(),this.type="CircleGeometry",this.parameters={radius:n,segments:r,thetaStart:i,thetaLength:a},r=Math.max(3,r);const t=[],s=[],o=[],l=[],h=new sr,c=new Zn;s.push(0,0,0),o.push(0,0,1),l.push(.5,.5);for(let e=0,t=3;e<=r;e++,t+=3){var u=i+e/r*a;h.x=n*Math.cos(u),h.y=n*Math.sin(u),s.push(h.x,h.y,h.z),o.push(0,0,1),c.x=(s[t]/n+1)/2,c.y=(s[t+1]/n+1)/2,l.push(c.x,c.y)}for(let e=1;e<=r;e++)t.push(e,e+1,0);this.setIndex(t),this.setAttribute("position",new ji(s,3)),this.setAttribute("normal",new ji(o,3)),this.setAttribute("uv",new ji(l,2))}}class lh extends ra{constructor(f=1,g=1,v=1,y=8,x=1,e=!1,_=0,b=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:f,radiusBottom:g,height:v,radialSegments:y,heightSegments:x,openEnded:e,thetaStart:_,thetaLength:b};const w=this;y=Math.floor(y),x=Math.floor(x);const M=[],S=[],T=[],E=[];let A=0;const L=[],R=v/2;let C=0;function t(t){var n=A;const r=new Zn,i=new sr;let a=0;var s=!0===t?f:g,o=!0===t?1:-1;for(let e=1;e<=y;e++)S.push(0,R*o,0),T.push(0,o,0),E.push(.5,.5),A++;var l=A;for(let e=0;e<=y;e++){var h=e/y*b+_,c=Math.cos(h),h=Math.sin(h);i.x=s*h,i.y=R*o,i.z=s*c,S.push(i.x,i.y,i.z),T.push(0,o,0),r.x=.5*c+.5,r.y=.5*h*o+.5,E.push(r.x,r.y),A++}for(let e=0;e<y;e++){var u=n+e,d=l+e;!0===t?M.push(d,d+1,u):M.push(d+1,d,u),a+=3}w.addGroup(C,a,!0===t?1:2),C+=a}!function(){const t=new sr,n=new sr;let r=0;var i=(g-f)/v;for(let e=0;e<=x;e++){const m=[];var a=e/x,s=a*(g-f)+f;for(let e=0;e<=y;e++){var o=e/y,l=o*b+_,h=Math.sin(l),l=Math.cos(l);n.x=s*h,n.y=-a*v+R,n.z=s*l,S.push(n.x,n.y,n.z),t.set(h,i,l).normalize(),T.push(t.x,t.y,t.z),E.push(o,1-a),m.push(A++)}L.push(m)}for(let t=0;t<y;t++)for(let e=0;e<x;e++){var c=L[e][t],u=L[e+1][t],d=L[e+1][t+1],p=L[e][t+1];M.push(c,u,p),M.push(u,d,p),r+=6}w.addGroup(C,r,0),C+=r}(),!1===e&&(0<f&&t(!0),0<g&&t(!1)),this.setIndex(M),this.setAttribute("position",new ji(S,3)),this.setAttribute("normal",new ji(T,3)),this.setAttribute("uv",new ji(E,2))}}class hh extends lh{constructor(e=1,t=1,n=8,r=1,i=!1,a=0,s=2*Math.PI){super(0,e,t,n,r,i,a,s),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:r,openEnded:i,thetaStart:a,thetaLength:s}}}class ch extends ra{constructor(n,a,e=1,t=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:n,indices:a,radius:e,detail:t};const c=[],u=[];function d(e){c.push(e.x,e.y,e.z)}function s(e,t){e*=3;t.x=n[0+e],t.y=n[1+e],t.z=n[2+e]}function p(e,t,n,r){r<0&&1===e.x&&(u[t]=e.x-1),0===n.x&&0===n.z&&(u[t]=r/2/Math.PI+.5)}function m(e){return Math.atan2(e.z,-e.x)}!function(t){var n=new sr,r=new sr,i=new sr;for(let e=0;e<a.length;e+=3)s(a[e+0],n),s(a[e+1],r),s(a[e+2],i),function(e,n,r,t){const i=t+1,a=[];for(let t=0;t<=i;t++){a[t]=[];const h=e.clone().lerp(r,t/i);var s=n.clone().lerp(r,t/i),o=i-t;for(let e=0;e<=o;e++)0===e&&t===i?a[t][e]=h:a[t][e]=h.clone().lerp(s,e/o)}for(let t=0;t<i;t++)for(let e=0;e<2*(i-t)-1;e++){var l=Math.floor(e/2);e%2==0?(d(a[t][l+1]),d(a[t+1][l]),d(a[t][l])):(d(a[t][l+1]),d(a[t+1][l+1]),d(a[t+1][l]))}}(n,r,i,t)}(t),function(t){const n=new sr;for(let e=0;e<c.length;e+=3)n.x=c[e+0],n.y=c[e+1],n.z=c[e+2],n.normalize().multiplyScalar(t),c[e+0]=n.x,c[e+1]=n.y,c[e+2]=n.z}(e),function(){const t=new sr;for(let e=0;e<c.length;e+=3){t.x=c[e+0],t.y=c[e+1],t.z=c[e+2];var n=m(t)/2/Math.PI+.5,r=function(e){return Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))}(t)/Math.PI+.5;u.push(n,1-r)}(function(){const n=new sr,r=new sr,i=new sr,a=new sr,s=new Zn,o=new Zn,l=new Zn;for(let e=0,t=0;e<c.length;e+=9,t+=6){n.set(c[e+0],c[e+1],c[e+2]),r.set(c[e+3],c[e+4],c[e+5]),i.set(c[e+6],c[e+7],c[e+8]),s.set(u[t+0],u[t+1]),o.set(u[t+2],u[t+3]),l.set(u[t+4],u[t+5]),a.copy(n).add(r).add(i).divideScalar(3);var h=m(a);p(s,t+0,n,h),p(o,t+2,r,h),p(l,t+4,i,h)}})(),function(){for(let e=0;e<u.length;e+=6){var t=u[e+0],n=u[e+2],r=u[e+4],i=Math.max(t,n,r),a=Math.min(t,n,r);.9<i&&a<.1&&(t<.2&&(u[e+0]+=1),n<.2&&(u[e+2]+=1),r<.2&&(u[e+4]+=1))}}()}(),this.setAttribute("position",new ji(c,3)),this.setAttribute("normal",new ji(c.slice(),3)),this.setAttribute("uv",new ji(u,2)),0===t?this.computeVertexNormals():this.normalizeNormals()}}class uh extends ch{constructor(e=1,t=0){var n=(1+Math.sqrt(5))/2,r=1/n;super([-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-n,0,-r,n,0,r,-n,0,r,n,-r,-n,0,-r,n,0,r,-n,0,r,n,0,-n,0,-r,n,0,-r,-n,0,r,n,0,r],[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9],e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}}const dh=new sr,ph=new sr,mh=new sr,fh=new Mi;class gh extends ra{constructor(e,t){if(super(),this.type="EdgesGeometry",this.parameters={thresholdAngle:t},t=void 0!==t?t:1,!0!==e.isGeometry){var n=Math.pow(10,4),r=Math.cos(Hn*t);const f=e.getIndex();var i=e.getAttribute("position"),a=(f||i).count;const g=[0,0,0];var s,o,l=["a","b","c"];const v=new Array(3),y={},x=[];for(let e=0;e<a;e+=3){f?(g[0]=f.getX(e),g[1]=f.getX(e+1),g[2]=f.getX(e+2)):(g[0]=e,g[1]=e+1,g[2]=e+2);const{a:_,b,c:w}=fh;if(_.fromBufferAttribute(i,g[0]),b.fromBufferAttribute(i,g[1]),w.fromBufferAttribute(i,g[2]),fh.getNormal(mh),v[0]=`${Math.round(_.x*n)},${Math.round(_.y*n)},${Math.round(_.z*n)}`,v[1]=`${Math.round(b.x*n)},${Math.round(b.y*n)},${Math.round(b.z*n)}`,v[2]=`${Math.round(w.x*n)},${Math.round(w.y*n)},${Math.round(w.z*n)}`,v[0]!==v[1]&&v[1]!==v[2]&&v[2]!==v[0])for(let e=0;e<3;e++){var h=(e+1)%3,c=v[e],u=v[h],d=fh[l[e]],p=fh[l[h]],m=`${c}_${u}`,c=`${u}_${c}`;c in y&&y[c]?(mh.dot(y[c].normal)<=r&&(x.push(d.x,d.y,d.z),x.push(p.x,p.y,p.z)),y[c]=null):m in y||(y[m]={index0:g[e],index1:g[h],normal:mh.clone()})}}for(const M in y)y[M]&&({index0:s,index1:o}=y[M],dh.fromBufferAttribute(i,s),ph.fromBufferAttribute(i,o),x.push(dh.x,dh.y,dh.z),x.push(ph.x,ph.y,ph.z));this.setAttribute("position",new ji(x,3))}else console.error("THREE.EdgesGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}const vh={triangulate:function(t,e,n){n=n||2;var r=e&&e.length,i=r?e[0]*n:t.length;let a=yh(t,0,i,n,!0);var s=[];if(!a||a.next===a.prev)return s;let o,l,h,c,u,d,p;if(r&&(a=function(e,t,n,r){const i=[];let a,s,o,l,h;for(a=0,s=t.length;a<s;a++)o=t[a]*r,l=a<s-1?t[a+1]*r:e.length,h=yh(e,o,l,r,!1),h===h.next&&(h.steiner=!0),i.push(function(e){let t=e,n=e;for(;(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next,t!==e;);return n}(h));for(i.sort(bh),a=0;a<i.length;a++)!function(e,t){(t=function(e,t){let n=t;var r=e.x,i=e.y;let a=-1/0,s;do{if(i<=n.y&&i>=n.next.y&&n.next.y!==n.y){var o=n.x+(i-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(o<=r&&o>a){if((a=o)===r){if(i===n.y)return n;if(i===n.next.y)return n.next}s=n.x<n.next.x?n:n.next}}}while(n=n.next,n!==t);if(!s)return null;if(r===a)return s;var l=s,h=s.x,c=s.y;let u=1/0,d;n=s;for(;r>=n.x&&n.x>=h&&r!==n.x&&Mh(i<c?r:a,i,h,c,i<c?a:r,i,n.x,n.y)&&(d=Math.abs(i-n.y)/(r-n.x),Rh(n,e)&&(d<u||d===u&&(n.x>s.x||n.x===s.x&&function(e,t){return Sh(e.prev,e,t.prev)<0&&Sh(t.next,e,e.next)<0}(s,n)))&&(s=n,u=d)),n=n.next,n!==l;);return s}(e,t))&&(e=Ch(t,e),xh(t,t.next),xh(e,e.next))}(i[a],n),n=xh(n,n.next);return n}(t,e,a,n)),t.length>80*n){o=h=t[0],l=c=t[1];for(let e=n;e<i;e+=n)u=t[e],d=t[e+1],u<o&&(o=u),d<l&&(l=d),u>h&&(h=u),d>c&&(c=d);p=Math.max(h-o,c-l),p=0!==p?1/p:0}return _h(a,s,n,o,l,p),s}};function yh(e,t,n,r,i){let a,s;if(i===0<function(n,r,i,a){let s=0;for(let e=r,t=i-a;e<i;e+=a)s+=(n[t]-n[e])*(n[e+1]+n[t+1]),t=e;return s}(e,t,n,r))for(a=t;a<n;a+=r)s=Ph(a,e[a],e[a+1],s);else for(a=n-r;a>=t;a-=r)s=Ph(a,e[a],e[a+1],s);return s&&Th(s,s.next)&&(Dh(s),s=s.next),s}function xh(e,t){if(!e)return e;t=t||e;let n=e,r;do{if(r=!1,n.steiner||!Th(n,n.next)&&0!==Sh(n.prev,n,n.next))n=n.next;else{if(Dh(n),n=t=n.prev,n===n.next)break;r=!0}}while(r||n!==t);return t}function _h(r,i,a,s,o,l,h){if(r){!h&&l&&function(e,t,n,r){let i=e;for(;null===i.z&&(i.z=wh(i.x,i.y,t,n,r)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next,i!==e;);i.prevZ.nextZ=null,i.prevZ=null,function(e){let t,n,r,i,a,s,o,l,h=1;do{for(n=e,e=null,a=null,s=0;n;){for(s++,r=n,o=0,t=0;t<h&&(o++,r=r.nextZ,r);t++);for(l=h;0<o||0<l&&r;)0!==o&&(0===l||!r||n.z<=r.z)?(i=n,n=n.nextZ,o--):(i=r,r=r.nextZ,l--),a?a.nextZ=i:e=i,i.prevZ=a,a=i;n=r}}while(a.nextZ=null,h*=2,1<s)}(i)}(r,s,o,l);let e=r,t,n;for(;r.prev!==r.next;)if(t=r.prev,n=r.next,l?function(e,t,n,r){var i=e.prev,a=e,s=e.next;if(0<=Sh(i,a,s))return!1;var o=(i.x<a.x?i.x<s.x?i:s:a.x<s.x?a:s).x,l=(i.y<a.y?i.y<s.y?i:s:a.y<s.y?a:s).y,h=(i.x>a.x?i.x>s.x?i:s:a.x>s.x?a:s).x,c=(i.y>a.y?i.y>s.y?i:s:a.y>s.y?a:s).y,u=wh(o,l,t,n,r),d=wh(h,c,t,n,r);let p=e.prevZ,m=e.nextZ;for(;p&&p.z>=u&&m&&m.z<=d;){if(p!==e.prev&&p!==e.next&&Mh(i.x,i.y,a.x,a.y,s.x,s.y,p.x,p.y)&&0<=Sh(p.prev,p,p.next))return!1;if(p=p.prevZ,m!==e.prev&&m!==e.next&&Mh(i.x,i.y,a.x,a.y,s.x,s.y,m.x,m.y)&&0<=Sh(m.prev,m,m.next))return!1;m=m.nextZ}for(;p&&p.z>=u;){if(p!==e.prev&&p!==e.next&&Mh(i.x,i.y,a.x,a.y,s.x,s.y,p.x,p.y)&&0<=Sh(p.prev,p,p.next))return!1;p=p.prevZ}for(;m&&m.z<=d;){if(m!==e.prev&&m!==e.next&&Mh(i.x,i.y,a.x,a.y,s.x,s.y,m.x,m.y)&&0<=Sh(m.prev,m,m.next))return!1;m=m.nextZ}return!0}(r,s,o,l):function(e){var t=e.prev,n=e,r=e.next;if(0<=Sh(t,n,r))return!1;let i=e.next.next;for(;i!==e.prev;){if(Mh(t.x,t.y,n.x,n.y,r.x,r.y,i.x,i.y)&&0<=Sh(i.prev,i,i.next))return!1;i=i.next}return!0}(r))i.push(t.i/a),i.push(r.i/a),i.push(n.i/a),Dh(r),r=n.next,e=n.next;else if((r=n)===e){h?1===h?_h(r=function(e,t,n){let r=e;do{var i=r.prev,a=r.next.next;!Th(i,a)&&Eh(i,r,r.next,a)&&Rh(i,a)&&Rh(a,i)&&(t.push(i.i/n),t.push(r.i/n),t.push(a.i/n),Dh(r),Dh(r.next),r=e=a),r=r.next}while(r!==e);return xh(r)}(xh(r),i,a),i,a,s,o,l,2):2===h&&function(e,t,n,r,i,a){let s=e;do{let e=s.next.next;for(;e!==s.prev;){if(s.i!==e.i&&function(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){let n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&Eh(n,n.next,e,t))return!0}while(n=n.next,n!==e);return!1}(e,t)&&(Rh(e,t)&&Rh(t,e)&&function(e,t){let n=e,r=!1;var i=(e.x+t.x)/2,a=(e.y+t.y)/2;for(;n.y>a!=n.next.y>a&&n.next.y!==n.y&&i<(n.next.x-n.x)*(a-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next,n!==e;);return r}(e,t)&&(Sh(e.prev,e,t.prev)||Sh(e,t.prev,t))||Th(e,t)&&0<Sh(e.prev,e,e.next)&&0<Sh(t.prev,t,t.next))}(s,e)){var o=Ch(s,e);return s=xh(s,s.next),o=xh(o,o.next),_h(s,t,n,r,i,a),_h(o,t,n,r,i,a)}e=e.next}}while(s=s.next,s!==e)}(r,i,a,s,o,l):_h(xh(r),i,a,s,o,l,1);break}}}function bh(e,t){return e.x-t.x}function wh(e,t,n,r,i){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-n)*i)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-r)*i)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function Mh(e,t,n,r,i,a,s,o){return 0<=(i-s)*(t-o)-(e-s)*(a-o)&&0<=(e-s)*(r-o)-(n-s)*(t-o)&&0<=(n-s)*(a-o)-(i-s)*(r-o)}function Sh(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function Th(e,t){return e.x===t.x&&e.y===t.y}function Eh(e,t,n,r){var i=Lh(Sh(e,t,n)),a=Lh(Sh(e,t,r)),s=Lh(Sh(n,r,e)),o=Lh(Sh(n,r,t));return i!==a&&s!==o||(0===i&&Ah(e,n,t)||(0===a&&Ah(e,r,t)||(0===s&&Ah(n,e,r)||!(0!==o||!Ah(n,t,r)))))}function Ah(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function Lh(e){return 0<e?1:e<0?-1:0}function Rh(e,t){return Sh(e.prev,e,e.next)<0?0<=Sh(e,t,e.next)&&0<=Sh(e,e.prev,t):Sh(e,t,e.prev)<0||Sh(e,e.next,t)<0}function Ch(e,t){const n=new Ih(e.i,e.x,e.y),r=new Ih(t.i,t.x,t.y),i=e.next,a=t.prev;return(e.next=t).prev=e,n.next=i,i.prev=n,r.next=n,n.prev=r,a.next=r,r.prev=a,r}function Ph(e,t,n,r){const i=new Ih(e,t,n);return r?(i.next=r.next,(i.prev=r).next.prev=i,r.next=i):(i.prev=i,i.next=i),i}function Dh(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function Ih(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}class Nh{static area(n){var r=n.length;let i=0;for(let e=r-1,t=0;t<r;e=t++)i+=n[e].x*n[t].y-n[t].x*n[e].y;return.5*i}static isClockWise(e){return Nh.area(e)<0}static triangulateShape(e,t){var n=[];const r=[],i=[];zh(e),Bh(n,e);let a=e.length;t.forEach(zh);for(let e=0;e<t.length;e++)r.push(a),a+=t[e].length,Bh(n,t[e]);const s=vh.triangulate(n,r);for(let e=0;e<s.length;e+=3)i.push(s.slice(e,e+3));return i}}function zh(e){var t=e.length;2<t&&e[t-1].equals(e[0])&&e.pop()}function Bh(t,n){for(let e=0;e<n.length;e++)t.push(n[e].x),t.push(n[e].y)}class Oh extends ra{constructor(n,K){super(),this.type="ExtrudeGeometry",this.parameters={shapes:n,options:K},n=Array.isArray(n)?n:[n];const $=this,ee=[],te=[];for(let e=0,t=n.length;e<t;e++)!function(e){const r=[],t=void 0!==K.curveSegments?K.curveSegments:12,o=void 0!==K.steps?K.steps:1;let n=void 0!==K.depth?K.depth:100,s=void 0===K.bevelEnabled||K.bevelEnabled,i=void 0!==K.bevelThickness?K.bevelThickness:6,a=void 0!==K.bevelSize?K.bevelSize:i-2,l=void 0!==K.bevelOffset?K.bevelOffset:0,h=void 0!==K.bevelSegments?K.bevelSegments:3;const c=K.extrudePath,u=void 0!==K.UVGenerator?K.UVGenerator:Fh;void 0!==K.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),n=K.amount);let d,p=!1,m,f,g,v;c&&(d=c.getSpacedPoints(o),p=!0,s=!1,m=c.computeFrenetFrames(o,!1),f=new sr,g=new sr,v=new sr);s||(h=0,i=0,a=0,l=0);e=e.extractPoints(t);let y=e.shape;const x=e.holes,_=!Nh.isClockWise(y);if(_){y=y.reverse();for(let e=0,t=x.length;e<t;e++){const Q=x[e];Nh.isClockWise(Q)&&(x[e]=Q.reverse())}}const b=Nh.triangulateShape(y,x),w=y;for(let e=0,t=x.length;e<t;e++){var M=x[e];y=y.concat(M)}function S(e,t,n){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().multiplyScalar(n).add(e)}const T=y.length,E=b.length;function A(e,t,n){let r,i,a;var s=e.x-t.x,o=e.y-t.y,l=n.x-e.x,h=n.y-e.y,c=s*s+o*o;if(Math.abs(s*h-o*l)>Number.EPSILON){var u=Math.sqrt(c),d=Math.sqrt(l*l+h*h),p=t.x-o/u,u=t.y+s/u,d=((n.x-h/d-p)*h-(n.y+l/d-u)*l)/(s*h-o*l);r=p+s*d-e.x,i=u+o*d-e.y;e=r*r+i*i;if(e<=2)return new Zn(r,i);a=Math.sqrt(e/2)}else{let e=!1;s>Number.EPSILON?l>Number.EPSILON&&(e=!0):s<-Number.EPSILON?l<-Number.EPSILON&&(e=!0):Math.sign(o)===Math.sign(h)&&(e=!0),a=e?(r=-o,i=s,Math.sqrt(c)):(r=s,i=o,Math.sqrt(c/2))}return new Zn(r/a,i/a)}const L=[];for(let e=0,t=w.length,n=t-1,r=e+1;e<t;e++,n++,r++)n===t&&(n=0),r===t&&(r=0),L[e]=A(w[e],w[n],w[r]);const R=[];let C,P=L.concat();for(let e=0,t=x.length;e<t;e++){var D=x[e];C=[];for(let e=0,t=D.length,n=t-1,r=e+1;e<t;e++,n++,r++)n===t&&(n=0),r===t&&(r=0),C[e]=A(D[e],D[n],D[r]);R.push(C),P=P.concat(C)}for(let e=0;e<h;e++){var I=e/h,N=i*Math.cos(I*Math.PI/2);const F=a*Math.sin(I*Math.PI/2)+l;for(let e=0,t=w.length;e<t;e++){var z=S(w[e],L[e],F);X(z.x,z.y,-N)}for(let e=0,t=x.length;e<t;e++){var B=x[e];C=R[e];for(let e=0,t=B.length;e<t;e++){var O=S(B[e],C[e],F);X(O.x,O.y,-N)}}}const F=a+l;for(let e=0;e<T;e++){var H=s?S(y[e],P[e],F):y[e];p?(g.copy(m.normals[0]).multiplyScalar(H.x),f.copy(m.binormals[0]).multiplyScalar(H.y),v.copy(d[0]).add(g).add(f),X(v.x,v.y,v.z)):X(H.x,H.y,0)}for(let t=1;t<=o;t++)for(let e=0;e<T;e++){var U=s?S(y[e],P[e],F):y[e];p?(g.copy(m.normals[t]).multiplyScalar(U.x),f.copy(m.binormals[t]).multiplyScalar(U.y),v.copy(d[t]).add(g).add(f),X(v.x,v.y,v.z)):X(U.x,U.y,n/o*t)}for(let e=h-1;0<=e;e--){var G=e/h,V=i*Math.cos(G*Math.PI/2);const F=a*Math.sin(G*Math.PI/2)+l;for(let e=0,t=w.length;e<t;e++){var k=S(w[e],L[e],F);X(k.x,k.y,n+V)}for(let e=0,t=x.length;e<t;e++){var W=x[e];C=R[e];for(let e=0,t=W.length;e<t;e++){var j=S(W[e],C[e],F);p?X(j.x,j.y+d[o-1].y,d[o-1].x+V):X(j.x,j.y,n+V)}}}function q(e,r){let t=e.length;for(;0<=--t;){var i=t;let n=t-1;n<0&&(n=e.length-1);for(let e=0,t=o+2*h;e<t;e++){var a=T*e,s=T*(e+1);!function(e,t,n,r){Z(e),Z(t),Z(r),Z(t),Z(n),Z(r);r=ee.length/3,r=u.generateSideWallUV($,ee,r-6,r-3,r-2,r-1);J(r[0]),J(r[1]),J(r[3]),J(r[1]),J(r[2]),J(r[3])}(r+i+a,r+n+a,r+n+s,r+i+s)}}}function X(e,t,n){r.push(e),r.push(t),r.push(n)}function Y(e,t,n){Z(e),Z(t),Z(n);n=ee.length/3,n=u.generateTopUV($,ee,n-3,n-2,n-1);J(n[0]),J(n[1]),J(n[2])}function Z(e){ee.push(r[3*e+0]),ee.push(r[3*e+1]),ee.push(r[3*e+2])}function J(e){te.push(e.x),te.push(e.y)}(function(){var e,t=ee.length/3;if(s){let t=0*T;for(let e=0;e<E;e++){var n=b[e];Y(n[2]+t,n[1]+t,n[0]+t)}e=o+2*h,t=T*e;for(let e=0;e<E;e++){var r=b[e];Y(r[0]+t,r[1]+t,r[2]+t)}}else{for(let e=0;e<E;e++){var i=b[e];Y(i[2],i[1],i[0])}for(let e=0;e<E;e++){var a=b[e];Y(a[0]+T*o,a[1]+T*o,a[2]+T*o)}}$.addGroup(t,ee.length/3-t,0)})(),function(){var e=ee.length/3;let n=0;q(w,n),n+=w.length;for(let e=0,t=x.length;e<t;e++){var r=x[e];q(r,n),n+=r.length}$.addGroup(e,ee.length/3-e,1)}()}(n[e]);this.setAttribute("position",new ji(ee,3)),this.setAttribute("uv",new ji(te,2)),this.computeVertexNormals()}toJSON(){var e=ra.prototype.toJSON.call(this);return function(n,e,r){if(r.shapes=[],Array.isArray(n))for(let e=0,t=n.length;e<t;e++){var i=n[e];r.shapes.push(i.uuid)}else r.shapes.push(n.uuid);void 0!==e.extrudePath&&(r.options.extrudePath=e.extrudePath.toJSON());return r}(this.parameters.shapes,this.parameters.options,e)}}const Fh={generateTopUV:function(e,t,n,r,i){var a=t[3*n],s=t[3*n+1],o=t[3*r],n=t[3*r+1],r=t[3*i],i=t[3*i+1];return[new Zn(a,s),new Zn(o,n),new Zn(r,i)]},generateSideWallUV:function(e,t,n,r,i,a){var s=t[3*n],o=t[3*n+1],l=t[3*n+2],h=t[3*r],c=t[3*r+1],u=t[3*r+2],d=t[3*i],p=t[3*i+1],n=t[3*i+2],r=t[3*a],i=t[3*a+1],a=t[3*a+2];return Math.abs(o-c)<.01?[new Zn(s,1-l),new Zn(h,1-u),new Zn(d,1-n),new Zn(r,1-a)]:[new Zn(o,1-l),new Zn(c,1-u),new Zn(p,1-n),new Zn(i,1-a)]}};class Hh extends ch{constructor(e=1,t=0){var n=(1+Math.sqrt(5))/2;super([-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1],e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}}class Uh extends ra{constructor(n,r=12,e=0,i=2*Math.PI){super(),this.type="LatheGeometry",this.parameters={points:n,segments:r,phiStart:e,phiLength:i},r=Math.floor(r),i=Vn(i,0,2*Math.PI);const a=[],s=[],o=[];var l=1/r;const h=new sr,c=new Zn;for(let t=0;t<=r;t++){var u=e+t*l*i,d=Math.sin(u),p=Math.cos(u);for(let e=0;e<=n.length-1;e++)h.x=n[e].x*d,h.y=n[e].y,h.z=n[e].x*p,s.push(h.x,h.y,h.z),c.x=t/r,c.y=e/(n.length-1),o.push(c.x,c.y)}for(let t=0;t<r;t++)for(let e=0;e<n.length-1;e++){var m=e+t*n.length,f=m+n.length,g=m+n.length+1,v=m+1;a.push(m,f,v),a.push(f,g,v)}if(this.setIndex(a),this.setAttribute("position",new ji(s,3)),this.setAttribute("uv",new ji(o,2)),this.computeVertexNormals(),i===2*Math.PI){const x=this.attributes.normal.array,_=new sr,b=new sr,w=new sr;var y=r*n.length*3;for(let e=0,t=0;e<n.length;e++,t+=3)_.x=x[t+0],_.y=x[t+1],_.z=x[t+2],b.x=x[y+t+0],b.y=x[y+t+1],b.z=x[y+t+2],w.addVectors(_,b).normalize(),x[t+0]=x[y+t+0]=w.x,x[t+1]=x[y+t+1]=w.y,x[t+2]=x[y+t+2]=w.z}}}class Gh extends ch{constructor(e=1,t=0){super([1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2],e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}}class Vh extends ra{constructor(t,n,r){super(),this.type="ParametricGeometry",this.parameters={func:t,slices:n,stacks:r};const i=[],a=[],s=[],o=[];const l=new sr;var h=new sr,c=new sr;const u=new sr,d=new sr;t.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");var p=n+1;for(let e=0;e<=r;e++){var m=e/r;for(let e=0;e<=n;e++){var f=e/n;t(f,m,h),a.push(h.x,h.y,h.z),0<=f-1e-5?(t(f-1e-5,m,c),u.subVectors(h,c)):(t(1e-5+f,m,c),u.subVectors(c,h)),0<=m-1e-5?(t(f,m-1e-5,c),d.subVectors(h,c)):(t(f,1e-5+m,c),d.subVectors(c,h)),l.crossVectors(u,d).normalize(),s.push(l.x,l.y,l.z),o.push(f,m)}}for(let t=0;t<r;t++)for(let e=0;e<n;e++){var g=t*p+e,v=t*p+e+1,y=(t+1)*p+e+1,x=(t+1)*p+e;i.push(g,v,x),i.push(v,y,x)}this.setIndex(i),this.setAttribute("position",new ji(a,3)),this.setAttribute("normal",new ji(s,3)),this.setAttribute("uv",new ji(o,2))}}class kh extends ra{constructor(e=.5,t=1,n=8,r=1,i=0,a=2*Math.PI){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:r,thetaStart:i,thetaLength:a},n=Math.max(3,n);const s=[],o=[],l=[],h=[];let c=e;var u=(t-e)/(r=Math.max(1,r));const d=new sr,p=new Zn;for(let e=0;e<=r;e++){for(let e=0;e<=n;e++){var m=i+e/n*a;d.x=c*Math.cos(m),d.y=c*Math.sin(m),o.push(d.x,d.y,d.z),l.push(0,0,1),p.x=(d.x/t+1)/2,p.y=(d.y/t+1)/2,h.push(p.x,p.y)}c+=u}for(let e=0;e<r;e++){var f=e*(n+1);for(let e=0;e<n;e++){var g=e+f,v=g+n+1,y=g+n+2,x=g+1;s.push(g,v,x),s.push(v,y,x)}}this.setIndex(s),this.setAttribute("position",new ji(o,3)),this.setAttribute("normal",new ji(l,3)),this.setAttribute("uv",new ji(h,2))}}class Wh extends ra{constructor(t,d=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:d};const p=[],m=[],f=[],g=[];let n=0,v=0;if(!1===Array.isArray(t))r(t);else for(let e=0;e<t.length;e++)r(t[e]),this.addGroup(n,v,e),n+=v,v=0;function r(e){var n=m.length/3,e=e.extractPoints(d);let r=e.shape;const i=e.holes;!1===Nh.isClockWise(r)&&(r=r.reverse());for(let e=0,t=i.length;e<t;e++){const u=i[e];!0===Nh.isClockWise(u)&&(i[e]=u.reverse())}var a=Nh.triangulateShape(r,i);for(let e=0,t=i.length;e<t;e++){var s=i[e];r=r.concat(s)}for(let e=0,t=r.length;e<t;e++){var o=r[e];m.push(o.x,o.y,0),f.push(0,0,1),g.push(o.x,o.y)}for(let e=0,t=a.length;e<t;e++){var l=a[e],h=l[0]+n,c=l[1]+n,l=l[2]+n;p.push(h,c,l),v+=3}}this.setIndex(p),this.setAttribute("position",new ji(m,3)),this.setAttribute("normal",new ji(f,3)),this.setAttribute("uv",new ji(g,2))}toJSON(){var e=ra.prototype.toJSON.call(this);return function(n,r){if(r.shapes=[],Array.isArray(n))for(let e=0,t=n.length;e<t;e++){var i=n[e];r.shapes.push(i.uuid)}else r.shapes.push(n.uuid);return r}(this.parameters.shapes,e)}}class jh extends ra{constructor(n=1,r=8,i=6,a=0,s=2*Math.PI,o=0,l=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:n,widthSegments:r,heightSegments:i,phiStart:a,phiLength:s,thetaStart:o,thetaLength:l},r=Math.max(3,Math.floor(r)),i=Math.max(2,Math.floor(i));var h=Math.min(o+l,Math.PI);let c=0;const u=[],d=new sr,p=new sr,m=[],f=[],g=[],v=[];for(let e=0;e<=i;e++){const S=[];var y=e/i;let t=0;0==e&&0==o?t=.5/r:e==i&&h==Math.PI&&(t=-.5/r);for(let e=0;e<=r;e++){var x=e/r;d.x=-n*Math.cos(a+x*s)*Math.sin(o+y*l),d.y=n*Math.cos(o+y*l),d.z=n*Math.sin(a+x*s)*Math.sin(o+y*l),f.push(d.x,d.y,d.z),p.copy(d).normalize(),g.push(p.x,p.y,p.z),v.push(x+t,1-y),S.push(c++)}u.push(S)}for(let t=0;t<i;t++)for(let e=0;e<r;e++){var _=u[t][e+1],b=u[t][e],w=u[t+1][e],M=u[t+1][e+1];(0!==t||0<o)&&m.push(_,b,M),(t!==i-1||h<Math.PI)&&m.push(b,w,M)}this.setIndex(m),this.setAttribute("position",new ji(f,3)),this.setAttribute("normal",new ji(g,3)),this.setAttribute("uv",new ji(v,2))}}class qh extends ch{constructor(e=1,t=0){super([1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],[2,1,0,0,3,2,1,3,0,2,3,1],e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}}class Xh extends Oh{constructor(e,t={}){const n=t.font;if(!n||!n.isFont)return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new ra;e=n.generateShapes(e,t.size);t.depth=void 0!==t.height?t.height:50,void 0===t.bevelThickness&&(t.bevelThickness=10),void 0===t.bevelSize&&(t.bevelSize=8),void 0===t.bevelEnabled&&(t.bevelEnabled=!1),super(e,t),this.type="TextGeometry"}}class Yh extends ra{constructor(n=1,r=.4,i=8,a=6,s=2*Math.PI){super(),this.type="TorusGeometry",this.parameters={radius:n,tube:r,radialSegments:i,tubularSegments:a,arc:s},i=Math.floor(i),a=Math.floor(a);const o=[],l=[],h=[],c=[],u=new sr,d=new sr,p=new sr;for(let t=0;t<=i;t++)for(let e=0;e<=a;e++){var m=e/a*s,f=t/i*Math.PI*2;d.x=(n+r*Math.cos(f))*Math.cos(m),d.y=(n+r*Math.cos(f))*Math.sin(m),d.z=r*Math.sin(f),l.push(d.x,d.y,d.z),u.x=n*Math.cos(m),u.y=n*Math.sin(m),p.subVectors(d,u).normalize(),h.push(p.x,p.y,p.z),c.push(e/a),c.push(t/i)}for(let t=1;t<=i;t++)for(let e=1;e<=a;e++){var g=(a+1)*t+e-1,v=(a+1)*(t-1)+e-1,y=(a+1)*(t-1)+e,x=(a+1)*t+e;o.push(g,v,x),o.push(v,y,x)}this.setIndex(o),this.setAttribute("position",new ji(l,3)),this.setAttribute("normal",new ji(h,3)),this.setAttribute("uv",new ji(c,2))}}class Zh extends ra{constructor(e=1,n=.4,r=64,i=8,a=2,s=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:n,tubularSegments:r,radialSegments:i,p:a,q:s},r=Math.floor(r),i=Math.floor(i);const o=[],l=[],h=[],c=[],u=new sr,d=new sr;var p=new sr,m=new sr;const f=new sr,g=new sr,v=new sr;for(let t=0;t<=r;++t){var y=t/r*a*Math.PI*2;T(y,a,s,e,p),T(.01+y,a,s,e,m),g.subVectors(m,p),v.addVectors(m,p),f.crossVectors(g,v),v.crossVectors(f,g),f.normalize(),v.normalize();for(let e=0;e<=i;++e){var x=e/i*Math.PI*2,_=-n*Math.cos(x),x=n*Math.sin(x);u.x=p.x+(_*v.x+x*f.x),u.y=p.y+(_*v.y+x*f.y),u.z=p.z+(_*v.z+x*f.z),l.push(u.x,u.y,u.z),d.subVectors(u,p).normalize(),h.push(d.x,d.y,d.z),c.push(t/r),c.push(e/i)}}for(let t=1;t<=r;t++)for(let e=1;e<=i;e++){var b=(i+1)*(t-1)+(e-1),w=(i+1)*t+(e-1),M=(i+1)*t+e,S=(i+1)*(t-1)+e;o.push(b,w,S),o.push(w,M,S)}function T(e,t,n,r,i){var a=Math.cos(e),s=Math.sin(e),t=n/t*e,e=Math.cos(t);i.x=r*(2+e)*.5*a,i.y=r*(2+e)*s*.5,i.z=r*Math.sin(t)*.5}this.setIndex(o),this.setAttribute("position",new ji(l,3)),this.setAttribute("normal",new ji(h,3)),this.setAttribute("uv",new ji(c,2))}}class Jh extends ra{constructor(a,s=64,o=1,l=8,e=!1){super(),this.type="TubeGeometry",this.parameters={path:a,tubularSegments:s,radius:o,radialSegments:l,closed:e};const h=a.computeFrenetFrames(s,e);this.tangents=h.tangents,this.normals=h.normals,this.binormals=h.binormals;const c=new sr,u=new sr,n=new Zn;let d=new sr;const p=[],m=[],r=[],f=[];function t(e){d=a.getPointAt(e/s,d);var t=h.normals[e],n=h.binormals[e];for(let e=0;e<=l;e++){var r=e/l*Math.PI*2,i=Math.sin(r),r=-Math.cos(r);u.x=r*t.x+i*n.x,u.y=r*t.y+i*n.y,u.z=r*t.z+i*n.z,u.normalize(),m.push(u.x,u.y,u.z),c.x=d.x+o*u.x,c.y=d.y+o*u.y,c.z=d.z+o*u.z,p.push(c.x,c.y,c.z)}}!function(){for(let e=0;e<s;e++)t(e);t(!1===e?s:0),function(){for(let t=0;t<=s;t++)for(let e=0;e<=l;e++)n.x=t/s,n.y=e/l,r.push(n.x,n.y)}(),function(){for(let t=1;t<=s;t++)for(let e=1;e<=l;e++){var n=(l+1)*(t-1)+(e-1),r=(l+1)*t+(e-1),i=(l+1)*t+e,a=(l+1)*(t-1)+e;f.push(n,r,a),f.push(r,i,a)}}()}(),this.setIndex(f),this.setAttribute("position",new ji(p,3)),this.setAttribute("normal",new ji(m,3)),this.setAttribute("uv",new ji(r,2))}toJSON(){const e=ra.prototype.toJSON.call(this);return e.path=this.parameters.path.toJSON(),e}}class Qh extends ra{constructor(e){if(super(),this.type="WireframeGeometry",!0!==e.isGeometry){const h=[],c=[0,0],u={},d=new sr;if(null!==e.index){var t=e.attributes.position;const p=e.index;let n=e.groups;0===n.length&&(n=[{start:0,count:p.count,materialIndex:0}]);for(let e=0,t=n.length;e<t;++e){var r=n[e],i=r.start,r=r.count;for(let t=i,e=i+r;t<e;t+=3)for(let e=0;e<3;e++){var a=p.getX(t+e),s=p.getX(t+(e+1)%3);c[0]=Math.min(a,s),c[1]=Math.max(a,s);s=c[0]+","+c[1];void 0===u[s]&&(u[s]={index1:c[0],index2:c[1]})}}for(const m in u){var o=u[m];d.fromBufferAttribute(t,o.index1),h.push(d.x,d.y,d.z),d.fromBufferAttribute(t,o.index2),h.push(d.x,d.y,d.z)}}else{var n=e.attributes.position;for(let t=0,e=n.count/3;t<e;t++)for(let e=0;e<3;e++){var l=3*t+e;d.fromBufferAttribute(n,l),h.push(d.x,d.y,d.z);l=3*t+(e+1)%3;d.fromBufferAttribute(n,l),h.push(d.x,d.y,d.z)}}this.setAttribute("position",new ji(h,3))}else console.error("THREE.WireframeGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}var Kh=Object.freeze({__proto__:null,BoxGeometry:Ma,BoxBufferGeometry:Ma,CircleGeometry:oh,CircleBufferGeometry:oh,ConeGeometry:hh,ConeBufferGeometry:hh,CylinderGeometry:lh,CylinderBufferGeometry:lh,DodecahedronGeometry:uh,DodecahedronBufferGeometry:uh,EdgesGeometry:gh,ExtrudeGeometry:Oh,ExtrudeBufferGeometry:Oh,IcosahedronGeometry:Hh,IcosahedronBufferGeometry:Hh,LatheGeometry:Uh,LatheBufferGeometry:Uh,OctahedronGeometry:Gh,OctahedronBufferGeometry:Gh,ParametricGeometry:Vh,ParametricBufferGeometry:Vh,PlaneGeometry:Ha,PlaneBufferGeometry:Ha,PolyhedronGeometry:ch,PolyhedronBufferGeometry:ch,RingGeometry:kh,RingBufferGeometry:kh,ShapeGeometry:Wh,ShapeBufferGeometry:Wh,SphereGeometry:jh,SphereBufferGeometry:jh,TetrahedronGeometry:qh,TetrahedronBufferGeometry:qh,TextGeometry:Xh,TextBufferGeometry:Xh,TorusGeometry:Yh,TorusBufferGeometry:Yh,TorusKnotGeometry:Zh,TorusKnotBufferGeometry:Zh,TubeGeometry:Jh,TubeBufferGeometry:Jh,WireframeGeometry:Qh});class $h extends Ti{constructor(e){super(),this.type="ShadowMaterial",this.color=new Di(0),this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this}}$h.prototype.isShadowMaterial=!0;class ec extends Aa{constructor(e){super(e),this.type="RawShaderMaterial"}}ec.prototype.isRawShaderMaterial=!0;class tc extends Ti{constructor(e){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Di(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Di(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=on,this.normalScale=new Zn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.vertexTangents=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.flatShading=e.flatShading,this.vertexTangents=e.vertexTangents,this}}tc.prototype.isMeshStandardMaterial=!0;class nc extends tc{constructor(e){super(),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Zn(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,Object.defineProperty(this,"ior",{get:function(){return(1+.4*this.reflectivity)/(1-.4*this.reflectivity)},set:function(e){this.reflectivity=Vn(2.5*(e-1)/(e+1),0,1)}}),this.sheen=null,this.transmission=0,this.transmissionMap=null,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.reflectivity=e.reflectivity,e.sheen?this.sheen=(this.sheen||new Di).copy(e.sheen):this.sheen=null,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this}}nc.prototype.isMeshPhysicalMaterial=!0;class rc extends Ti{constructor(e){super(),this.type="MeshPhongMaterial",this.color=new Di(16777215),this.specular=new Di(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Di(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=on,this.normalScale=new Zn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=S,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.flatShading=e.flatShading,this}}rc.prototype.isMeshPhongMaterial=!0;class ic extends Ti{constructor(e){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Di(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Di(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=on,this.normalScale=new Zn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this}}ic.prototype.isMeshToonMaterial=!0;class ac extends Ti{constructor(e){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=on,this.normalScale=new Zn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.flatShading=e.flatShading,this}}ac.prototype.isMeshNormalMaterial=!0;class sc extends Ti{constructor(e){super(),this.type="MeshLambertMaterial",this.color=new Di(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Di(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=S,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this}}sc.prototype.isMeshLambertMaterial=!0;class oc extends Ti{constructor(e){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Di(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=on,this.normalScale=new Zn(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.flatShading=e.flatShading,this}}oc.prototype.isMeshMatcapMaterial=!0;class lc extends Hl{constructor(e){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}lc.prototype.isLineDashedMaterial=!0;var hc=Object.freeze({__proto__:null,ShadowMaterial:$h,SpriteMaterial:al,RawShaderMaterial:ec,ShaderMaterial:Aa,PointsMaterial:Jl,MeshPhysicalMaterial:nc,MeshStandardMaterial:tc,MeshPhongMaterial:rc,MeshToonMaterial:ic,MeshNormalMaterial:ac,MeshLambertMaterial:sc,MeshDepthMaterial:Oo,MeshDistanceMaterial:Fo,MeshBasicMaterial:Ii,MeshMatcapMaterial:oc,LineDashedMaterial:lc,LineBasicMaterial:Hl,Material:Ti});const cc={arraySlice:function(e,t,n){return cc.isTypedArray(e)?new e.constructor(e.subarray(t,void 0!==n?n:e.length)):e.slice(t,n)},convertArray:function(e,t,n){return!e||!n&&e.constructor===t?e:"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e)},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(n){var t=n.length;const r=new Array(t);for(let e=0;e!==t;++e)r[e]=e;return r.sort(function(e,t){return n[e]-n[t]}),r},sortedArray:function(n,r,i){var a=n.length;const s=new n.constructor(a);for(let e=0,t=0;t!==a;++e){var o=i[e]*r;for(let e=0;e!==r;++e)s[t++]=n[o+e]}return s},flattenJSON:function(t,n,r,i){let a=1,s=t[0];for(;void 0!==s&&void 0===s[i];)s=t[a++];if(void 0!==s){let e=s[i];if(void 0!==e)if(Array.isArray(e))for(;e=s[i],void 0!==e&&(n.push(s.time),r.push.apply(r,e)),s=t[a++],void 0!==s;);else if(void 0!==e.toArray)for(;e=s[i],void 0!==e&&(n.push(s.time),e.toArray(r,r.length)),s=t[a++],void 0!==s;);else for(;e=s[i],void 0!==e&&(n.push(s.time),r.push(e)),s=t[a++],void 0!==s;);}},subclip:function(e,t,n,r,i=30){const a=e.clone();a.name=t;const s=[];for(let e=0;e<a.tracks.length;++e){const c=a.tracks[e];var o=c.getValueSize();const u=[],d=[];for(let t=0;t<c.times.length;++t){var l=c.times[t]*i;if(!(l<n||r<=l)){u.push(c.times[t]);for(let e=0;e<o;++e)d.push(c.values[t*o+e])}}0!==u.length&&(c.times=cc.convertArray(u,c.times.constructor),c.values=cc.convertArray(d,c.values.constructor),s.push(c))}a.tracks=s;let h=1/0;for(let e=0;e<a.tracks.length;++e)h>a.tracks[e].times[0]&&(h=a.tracks[e].times[0]);for(let e=0;e<a.tracks.length;++e)a.tracks[e].shift(-1*h);return a.resetDuration(),a},makeClipAdditive:function(t,e=0,n=t,r=30){var i=n.tracks.length,a=e/(r=r<=0?30:r);for(let e=0;e<i;++e){const f=n.tracks[e],g=f.ValueTypeName;if("bool"!==g&&"string"!==g){const v=t.tracks.find(function(e){return e.name===f.name&&e.ValueTypeName===g});if(void 0!==v){let e=0;var s=f.getValueSize();f.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(e=s/3);let t=0;var o=v.getValueSize();v.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(t=o/3);var l=f.times.length-1;let n;if(a<=f.times[0]){var h=e,c=s-e;n=cc.arraySlice(f.values,h,c)}else if(a>=f.times[l]){var l=l*s+e,u=l+s-e;n=cc.arraySlice(f.values,l,u)}else{const y=f.createInterpolant();u=e,s=s-e;y.evaluate(a),n=cc.arraySlice(y.resultBuffer,u,s)}if("quaternion"===g){const x=(new ar).fromArray(n).normalize().conjugate();x.toArray(n)}var d=v.times.length;for(let e=0;e<d;++e){var p=e*o+t;if("quaternion"===g)ar.multiplyQuaternionsFlat(v.values,p,n,0,v.values,p);else{var m=o-2*t;for(let e=0;e<m;++e)v.values[p+e]-=n[e]}}}}}return t.blendMode=qt,t}};class uc{constructor(e,t,n,r){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==r?r:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(t){var n=this.parameterPositions;let r=this._cachedIndex,i=n[r],a=n[r-1];e:{t:{let e;n:{r:if(!(t<i)){for(var s=r+2;;){if(void 0===i){if(t<a)break r;return r=n.length,this._cachedIndex=r,this.afterEnd_(r-1,t,a)}if(r===s)break;if(a=i,i=n[++r],t<i)break t}e=n.length;break n}if(t>=a)break e;var o=n[1];t<o&&(r=2,a=o);for(var l=r-2;;){if(void 0===a)return this._cachedIndex=0,this.beforeStart_(0,t,i);if(r===l)break;if(i=a,a=n[--r-1],t>=a)break t}e=r,r=0}for(;r<e;){var h=r+e>>>1;t<n[h]?e=h:r=1+h}if(i=n[r],a=n[r-1],void 0===a)return this._cachedIndex=0,this.beforeStart_(0,t,i);if(void 0===i)return r=n.length,this._cachedIndex=r,this.afterEnd_(r-1,a,t)}this._cachedIndex=r,this.intervalChanged_(r,a,i)}return this.interpolate_(r,a,t,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,r=this.valueSize,i=e*r;for(let e=0;e!==r;++e)t[e]=n[i+e];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}uc.prototype.beforeStart_=uc.prototype.copySampleValue_,uc.prototype.afterEnd_=uc.prototype.copySampleValue_;class dc extends uc{constructor(e,t,n,r){super(e,t,n,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Vt,endingEnd:Vt}}intervalChanged_(e,t,n){var r=this.parameterPositions;let i=e-2,a=e+1,s=r[i],o=r[a];if(void 0===s)switch(this.getSettings_().endingStart){case kt:i=e,s=2*t-n;break;case Wt:i=r.length-2,s=t+r[i]-r[i+1];break;default:i=e,s=n}if(void 0===o)switch(this.getSettings_().endingEnd){case kt:a=e,o=2*n-t;break;case Wt:a=1,o=n+r[1]-r[0];break;default:a=e-1,o=t}var l=.5*(n-t),h=this.valueSize;this._weightPrev=l/(t-s),this._weightNext=l/(o-n),this._offsetPrev=i*h,this._offsetNext=a*h}interpolate_(e,t,n,r){const i=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=e*s,l=o-s,h=this._offsetPrev,c=this._offsetNext,u=this._weightPrev,d=this._weightNext,p=(n-t)/(r-t),m=p*p,f=m*p;var g=-u*f+2*u*m-u*p,v=(1+u)*f+(-1.5-2*u)*m+(-.5+u)*p+1,y=(-1-d)*f+(1.5+d)*m+.5*p,x=d*f-d*m;for(let e=0;e!==s;++e)i[e]=g*a[h+e]+v*a[l+e]+y*a[o+e]+x*a[c+e];return i}}class pc extends uc{constructor(e,t,n,r){super(e,t,n,r)}interpolate_(e,t,n,r){const i=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=e*s,l=o-s,h=(n-t)/(r-t),c=1-h;for(let e=0;e!==s;++e)i[e]=a[l+e]*c+a[o+e]*h;return i}}class mc extends uc{constructor(e,t,n,r){super(e,t,n,r)}interpolate_(e){return this.copySampleValue_(e-1)}}class fc{constructor(e,t,n,r){if(void 0===e)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=cc.convertArray(t,this.TimeBufferType),this.values=cc.convertArray(n,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;var r;return t.toJSON!==this.toJSON?n=t.toJSON(e):(n={name:e.name,times:cc.convertArray(e.times,Array),values:cc.convertArray(e.values,Array)},(r=e.getInterpolation())!==e.DefaultInterpolation&&(n.interpolation=r)),n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new mc(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new pc(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new dc(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case Ht:t=this.InterpolantFactoryMethodDiscrete;break;case Ut:t=this.InterpolantFactoryMethodLinear;break;case Gt:t=this.InterpolantFactoryMethodSmooth}if(void 0!==t)return this.createInterpolant=t,this;var n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e===this.DefaultInterpolation)throw new Error(n);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",n),this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Ht;case this.InterpolantFactoryMethodLinear:return Ut;case this.InterpolantFactoryMethodSmooth:return Gt}}getValueSize(){return this.values.length/this.times.length}shift(n){if(0!==n){const r=this.times;for(let e=0,t=r.length;e!==t;++e)r[e]+=n}return this}scale(n){if(1!==n){const r=this.times;for(let e=0,t=r.length;e!==t;++e)r[e]*=n}return this}trim(e,t){var n,r=this.times,i=r.length;let a=0,s=i-1;for(;a!==i&&r[a]<e;)++a;for(;-1!==s&&r[s]>t;)--s;return++s,0===a&&s===i||(a>=s&&(s=Math.max(s,1),a=s-1),n=this.getValueSize(),this.times=cc.arraySlice(r,a,s),this.values=cc.arraySlice(this.values,a*n,s*n)),this}validate(){let n=!0;var e=this.getValueSize();e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),n=!1);var t=this.times,r=this.values,i=t.length;0===i&&(console.error("THREE.KeyframeTrack: Track is empty.",this),n=!1);let a=null;for(let e=0;e!==i;e++){var s=t[e];if("number"==typeof s&&isNaN(s)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,e,s),n=!1;break}if(null!==a&&a>s){console.error("THREE.KeyframeTrack: Out of order keys.",this,e,s,a),n=!1;break}a=s}if(void 0!==r&&cc.isTypedArray(r))for(let e=0,t=r.length;e!==t;++e){var o=r[e];if(isNaN(o)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,e,o),n=!1;break}}return n}optimize(){const n=cc.arraySlice(this.times),r=cc.arraySlice(this.values),i=this.getValueSize(),a=this.getInterpolation()===Gt,s=n.length-1;let o=1;for(let e=1;e<s;++e){let t=!1;var l=n[e];if(l!==n[e+1]&&(1!==e||l!==n[0]))if(a)t=!0;else{var h=e*i,c=h-i,u=h+i;for(let e=0;e!==i;++e){var d=r[h+e];if(d!==r[c+e]||d!==r[u+e]){t=!0;break}}}if(t){if(e!==o){n[o]=n[e];var p=e*i,m=o*i;for(let e=0;e!==i;++e)r[m+e]=r[p+e]}++o}}if(0<s){n[o]=n[s];for(let e=s*i,t=o*i,n=0;n!==i;++n)r[t+n]=r[e+n];++o}return o!==n.length?(this.times=cc.arraySlice(n,0,o),this.values=cc.arraySlice(r,0,o*i)):(this.times=n,this.values=r),this}clone(){var e=cc.arraySlice(this.times,0),t=cc.arraySlice(this.values,0);const n=this.constructor,r=new n(this.name,e,t);return r.createInterpolant=this.createInterpolant,r}}fc.prototype.TimeBufferType=Float32Array,fc.prototype.ValueBufferType=Float32Array,fc.prototype.DefaultInterpolation=Ut;class gc extends fc{}gc.prototype.ValueTypeName="bool",gc.prototype.ValueBufferType=Array,gc.prototype.DefaultInterpolation=Ht,gc.prototype.InterpolantFactoryMethodLinear=void 0,gc.prototype.InterpolantFactoryMethodSmooth=void 0;class vc extends fc{}vc.prototype.ValueTypeName="color";class yc extends fc{}yc.prototype.ValueTypeName="number";class xc extends uc{constructor(e,t,n,r){super(e,t,n,r)}interpolate_(e,t,n,r){var i=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=(n-t)/(r-t);let l=e*s;for(var h=l+s;l!==h;l+=4)ar.slerpFlat(i,0,a,l-s,a,l,o);return i}}class _c extends fc{InterpolantFactoryMethodLinear(e){return new xc(this.times,this.values,this.getValueSize(),e)}}_c.prototype.ValueTypeName="quaternion",_c.prototype.DefaultInterpolation=Ut,_c.prototype.InterpolantFactoryMethodSmooth=void 0;class bc extends fc{}bc.prototype.ValueTypeName="string",bc.prototype.ValueBufferType=Array,bc.prototype.DefaultInterpolation=Ht,bc.prototype.InterpolantFactoryMethodLinear=void 0,bc.prototype.InterpolantFactoryMethodSmooth=void 0;class wc extends fc{}class Mc{constructor(e,t=-1,n,r=jt){this.name=e,this.tracks=n,this.duration=t,this.blendMode=r,this.uuid=Gn(),this.duration<0&&this.resetDuration()}static parse(e){const n=[],r=e.tracks,i=1/(e.fps||1);for(let e=0,t=r.length;e!==t;++e)n.push(function(e){if(void 0===e.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=function(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return yc;case"vector":case"vector2":case"vector3":case"vector4":return wc;case"color":return vc;case"quaternion":return _c;case"bool":case"boolean":return gc;case"string":return bc}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}(e.type);{var n,r;void 0===e.times&&(n=[],r=[],cc.flattenJSON(e.keys,n,r,"value"),e.times=n,e.values=r)}return void 0!==t.parse?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)}(r[e]).scale(i));const t=new this(e.name,e.duration,n,e.blendMode);return t.uuid=e.uuid,t}static toJSON(e){const n=[],r=e.tracks;e={name:e.name,duration:e.duration,tracks:n,uuid:e.uuid,blendMode:e.blendMode};for(let e=0,t=r.length;e!==t;++e)n.push(fc.toJSON(r[e]));return e}static CreateFromMorphTargetSequence(e,r,i,a){var s=r.length;const o=[];for(let n=0;n<s;n++){let e=[],t=[];e.push((n+s-1)%s,n,(n+1)%s),t.push(0,1,0);var l=cc.getKeyframeOrder(e);e=cc.sortedArray(e,1,l),t=cc.sortedArray(t,1,l),a||0!==e[0]||(e.push(s),t.push(t[0])),o.push(new yc(".morphTargetInfluences["+r[n].name+"]",e,t).scale(1/i))}return new this(e,-1,o)}static findByName(e,t){let n=e;Array.isArray(e)||(n=e.geometry&&e.geometry.animations||e.animations);for(let e=0;e<n.length;e++)if(n[e].name===t)return n[e];return null}static CreateClipsFromMorphTargetSequences(n,e,t){const r={};var i=/^([\w-]*?)([\d]+)$/;for(let e=0,t=n.length;e<t;e++){const o=n[e];var a=o.name.match(i);if(a&&1<a.length){a=a[1];let e=r[a];e||(r[a]=e=[]),e.push(o)}}const s=[];for(const l in r)s.push(this.CreateFromMorphTargetSequence(l,r[l],e,t));return s}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;function n(e,t,n,r,i){var a,s;0!==n.length&&(a=[],s=[],cc.flattenJSON(n,a,s,r),0!==a.length&&i.push(new e(t,a,s)))}const r=[];var i=e.name||"default",a=e.fps||30,s=e.blendMode;let o=e.length||-1;var l=e.hierarchy||[];for(let e=0;e<l.length;e++){var h=l[e].keys;if(h&&0!==h.length)if(h[0].morphTargets){const d={};let t;for(t=0;t<h.length;t++)if(h[t].morphTargets)for(let e=0;e<h[t].morphTargets.length;e++)d[h[t].morphTargets[e]]=-1;for(const p in d){const m=[],f=[];for(let e=0;e!==h[t].morphTargets.length;++e){var c=h[t];m.push(c.time),f.push(c.morphTarget===p?1:0)}r.push(new yc(".morphTargetInfluence["+p+"]",m,f))}o=d.length*(a||1)}else{var u=".bones["+t[e].name+"]";n(wc,u+".position",h,"pos",r),n(_c,u+".quaternion",h,"rot",r),n(wc,u+".scale",h,"scl",r)}}return 0===r.length?null:new this(i,o,r,s)}resetDuration(){var n=this.tracks;let r=0;for(let e=0,t=n.length;e!==t;++e){var i=this.tracks[e];r=Math.max(r,i.times[i.times.length-1])}return this.duration=r,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}const Sc={enabled:!(wc.prototype.ValueTypeName="vector"),files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};class Tc{constructor(e,t,n){const r=this;let i=!1,a=0,s=0,o=void 0;const l=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(e){s++,!1===i&&void 0!==r.onStart&&r.onStart(e,a,s),i=!0},this.itemEnd=function(e){a++,void 0!==r.onProgress&&r.onProgress(e,a,s),a===s&&(i=!1,void 0!==r.onLoad&&r.onLoad())},this.itemError=function(e){void 0!==r.onError&&r.onError(e)},this.resolveURL=function(e){return o?o(e):e},this.setURLModifier=function(e){return o=e,this},this.addHandler=function(e,t){return l.push(e,t),this},this.removeHandler=function(e){e=l.indexOf(e);return-1!==e&&l.splice(e,2),this},this.getHandler=function(n){for(let e=0,t=l.length;e<t;e+=2){const i=l[e];var r=l[e+1];if(i.global&&(i.lastIndex=0),i.test(n))return r}return null}}}const Ec=new Tc;class Ac{constructor(e){this.manager=void 0!==e?e:Ec,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(n,r){const i=this;return new Promise(function(e,t){i.load(n,e,r,t)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const Lc={};class Rc extends Ac{constructor(e){super(e)}load(o,n,t,r){void 0===o&&(o=""),void 0!==this.path&&(o=this.path+o),o=this.manager.resolveURL(o);const l=this,e=Sc.get(o);if(void 0!==e)return l.manager.itemStart(o),setTimeout(function(){n&&n(e),l.manager.itemEnd(o)},0),e;if(void 0===Lc[o]){var i=o.match(/^data:(.*?)(;base64)?,(.*)$/);let e;if(i){var a=i[1],s=!!i[2];let t=i[3];t=decodeURIComponent(t),s&&(t=atob(t));try{let e;var h=(this.responseType||"").toLowerCase();switch(h){case"arraybuffer":case"blob":const c=new Uint8Array(t.length);for(let e=0;e<t.length;e++)c[e]=t.charCodeAt(e);e="blob"===h?new Blob([c.buffer],{type:a}):c.buffer;break;case"document":const u=new DOMParser;e=u.parseFromString(t,a);break;case"json":e=JSON.parse(t);break;default:e=t}setTimeout(function(){n&&n(e),l.manager.itemEnd(o)},0)}catch(e){setTimeout(function(){r&&r(e),l.manager.itemError(o),l.manager.itemEnd(o)},0)}}else{Lc[o]=[],Lc[o].push({onLoad:n,onProgress:t,onError:r}),e=new XMLHttpRequest,e.open("GET",o,!0),e.addEventListener("load",function(n){var r=this.response,i=Lc[o];if(delete Lc[o],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),Sc.add(o,r);for(let e=0,t=i.length;e<t;e++){const a=i[e];a.onLoad&&a.onLoad(r)}l.manager.itemEnd(o)}else{for(let e=0,t=i.length;e<t;e++){const s=i[e];s.onError&&s.onError(n)}l.manager.itemError(o),l.manager.itemEnd(o)}},!1),e.addEventListener("progress",function(n){var r=Lc[o];for(let e=0,t=r.length;e<t;e++){const i=r[e];i.onProgress&&i.onProgress(n)}},!1),e.addEventListener("error",function(n){var r=Lc[o];delete Lc[o];for(let e=0,t=r.length;e<t;e++){const i=r[e];i.onError&&i.onError(n)}l.manager.itemError(o),l.manager.itemEnd(o)},!1),e.addEventListener("abort",function(n){var r=Lc[o];delete Lc[o];for(let e=0,t=r.length;e<t;e++){const i=r[e];i.onError&&i.onError(n)}l.manager.itemError(o),l.manager.itemEnd(o)},!1),void 0!==this.responseType&&(e.responseType=this.responseType),void 0!==this.withCredentials&&(e.withCredentials=this.withCredentials),e.overrideMimeType&&e.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(const d in this.requestHeader)e.setRequestHeader(d,this.requestHeader[d]);e.send(null)}return l.manager.itemStart(o),e}Lc[o].push({onLoad:n,onProgress:t,onError:r})}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class Cc extends Ac{constructor(e){super(e)}load(t,n,e,r){const i=this,a=new Rc(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(t,function(e){try{n(i.parse(JSON.parse(e)))}catch(e){r?r(e):console.error(e),i.manager.itemError(t)}},e,r)}parse(t){const n=[];for(let e=0;e<t.length;e++){var r=Mc.parse(t[e]);n.push(r)}return n}}class Pc extends Ac{constructor(e){super(e)}load(n,i,r,a){const s=this,o=[],l=new ih,h=new Rc(this.manager);h.setPath(this.path),h.setResponseType("arraybuffer"),h.setRequestHeader(this.requestHeader),h.setWithCredentials(s.withCredentials);let c=0;if(Array.isArray(n))for(let e=0,t=n.length;e<t;++e)!function(t){h.load(n[t],function(e){e=s.parse(e,!0);o[t]={width:e.width,height:e.height,format:e.format,mipmaps:e.mipmaps},c+=1,6===c&&(1===e.mipmapCount&&(l.minFilter=Ae),l.image=o,l.format=e.format,l.needsUpdate=!0,i&&i(l))},r,a)}(e);else h.load(n,function(e){var n=s.parse(e,!0);if(n.isCubemap){var r=n.mipmaps.length/n.mipmapCount;for(let t=0;t<r;t++){o[t]={mipmaps:[]};for(let e=0;e<n.mipmapCount;e++)o[t].mipmaps.push(n.mipmaps[t*n.mipmapCount+e]),o[t].format=n.format,o[t].width=n.width,o[t].height=n.height}l.image=o}else l.image.width=n.width,l.image.height=n.height,l.mipmaps=n.mipmaps;1===n.mipmapCount&&(l.minFilter=Ae),l.format=n.format,l.needsUpdate=!0,i&&i(l)},r,a);return l}}class Dc extends Ac{constructor(e){super(e)}load(t,e,n,r){void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const i=this,a=Sc.get(t);if(void 0!==a)return i.manager.itemStart(t),setTimeout(function(){e&&e(a),i.manager.itemEnd(t)},0),a;const s=document.createElementNS("http://www.w3.org/1999/xhtml","img");function o(){s.removeEventListener("load",o,!1),s.removeEventListener("error",l,!1),Sc.add(t,this),e&&e(this),i.manager.itemEnd(t)}function l(e){s.removeEventListener("load",o,!1),s.removeEventListener("error",l,!1),r&&r(e),i.manager.itemError(t),i.manager.itemEnd(t)}return s.addEventListener("load",o,!1),s.addEventListener("error",l,!1),"data:"!==t.substr(0,5)&&void 0!==this.crossOrigin&&(s.crossOrigin=this.crossOrigin),i.manager.itemStart(t),s.src=t,s}}class Ic extends Ac{constructor(e){super(e)}load(n,r,e,i){const a=new Pa,s=new Dc(this.manager);s.setCrossOrigin(this.crossOrigin),s.setPath(this.path);let o=0;for(let e=0;e<n.length;++e)!function(t){s.load(n[t],function(e){a.images[t]=e,o++,6===o&&(a.needsUpdate=!0,r&&r(a))},void 0,i)}(e);return a}}class Nc extends Ac{constructor(e){super(e)}load(e,t,n,r){const i=this,a=new Ia,s=new Rc(this.manager);return s.setResponseType("arraybuffer"),s.setRequestHeader(this.requestHeader),s.setPath(this.path),s.setWithCredentials(i.withCredentials),s.load(e,function(e){e=i.parse(e);e&&(void 0!==e.image?a.image=e.image:void 0!==e.data&&(a.image.width=e.width,a.image.height=e.height,a.image.data=e.data),a.wrapS=void 0!==e.wrapS?e.wrapS:U,a.wrapT=void 0!==e.wrapT?e.wrapT:U,a.magFilter=void 0!==e.magFilter?e.magFilter:Ae,a.minFilter=void 0!==e.minFilter?e.minFilter:Ae,a.anisotropy=void 0!==e.anisotropy?e.anisotropy:1,void 0!==e.encoding&&(a.encoding=e.encoding),void 0!==e.flipY&&(a.flipY=e.flipY),void 0!==e.format&&(a.format=e.format),void 0!==e.type&&(a.type=e.type),void 0!==e.mipmaps&&(a.mipmaps=e.mipmaps,a.minFilter=Re),1===e.mipmapCount&&(a.minFilter=Ae),void 0!==e.generateMipmaps&&(a.generateMipmaps=e.generateMipmaps),a.needsUpdate=!0,t&&t(a,e))},n,r),a}}class zc extends Ac{constructor(e){super(e)}load(t,n,e,r){const i=new er,a=new Dc(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(t,function(e){i.image=e;e=0<t.search(/\.jpe?g($|\?)/i)||0===t.search(/^data\:image\/jpeg/);i.format=e?Oe:Fe,i.needsUpdate=!0,void 0!==n&&n(i)},e,r),i}}class Bc{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){e=this.getUtoTmapping(e);return this.getPoint(e,t)}getPoints(t=5){const n=[];for(let e=0;e<=t;e++)n.push(this.getPoint(e/t));return n}getSpacedPoints(t=5){const n=[];for(let e=0;e<=t;e++)n.push(this.getPointAt(e/t));return n}getLength(){var e=this.getLengths();return e[e.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const n=[];let r,i=this.getPoint(0),a=0;n.push(0);for(let e=1;e<=t;e++)r=this.getPoint(e/t),a+=r.distanceTo(i),n.push(a),i=r;return this.cacheArcLengths=n,n}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){var n=this.getLengths();let r=0;var i=n.length;let a;a=t||e*n[i-1];let s=0,o=i-1,l;for(;s<=o;)if(r=Math.floor(s+(o-s)/2),(l=n[r]-a)<0)s=r+1;else{if(!(0<l)){o=r;break}o=r-1}if(r=o,n[r]===a)return r/(i-1);t=n[r],e=n[r+1],t=(a-t)/(e-t);return(r+t)/(i-1)}getTangent(e,t){let n=e-1e-4,r=e+1e-4;n<0&&(n=0),1<r&&(r=1);var i=this.getPoint(n),e=this.getPoint(r);const a=t||new(i.isVector2?Zn:sr);return a.copy(e).sub(i).normalize(),a}getTangentAt(e,t){e=this.getUtoTmapping(e);return this.getTangent(e,t)}computeFrenetFrames(n,e){const t=new sr,r=[],i=[],a=[],s=new sr,o=new Or;for(let e=0;e<=n;e++){var l=e/n;r[e]=this.getTangentAt(l,new sr),r[e].normalize()}i[0]=new sr,a[0]=new sr;let h=Number.MAX_VALUE;var c,u=Math.abs(r[0].x),d=Math.abs(r[0].y),p=Math.abs(r[0].z);u<=h&&(h=u,t.set(1,0,0)),d<=h&&(h=d,t.set(0,1,0)),p<=h&&t.set(0,0,1),s.crossVectors(r[0],t).normalize(),i[0].crossVectors(r[0],s),a[0].crossVectors(r[0],i[0]);for(let e=1;e<=n;e++)i[e]=i[e-1].clone(),a[e]=a[e-1].clone(),s.crossVectors(r[e-1],r[e]),s.length()>Number.EPSILON&&(s.normalize(),c=Math.acos(Vn(r[e-1].dot(r[e]),-1,1)),i[e].applyMatrix4(o.makeRotationAxis(s,c))),a[e].crossVectors(r[e],i[e]);if(!0===e){let t=Math.acos(Vn(i[0].dot(i[n]),-1,1));t/=n,0<r[0].dot(s.crossVectors(i[0],i[n]))&&(t=-t);for(let e=1;e<=n;e++)i[e].applyMatrix4(o.makeRotationAxis(r[e],t*e)),a[e].crossVectors(r[e],i[e])}return{tangents:r,normals:i,binormals:a}}clone(){return(new this.constructor).copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class Oc extends Bc{constructor(e=0,t=0,n=1,r=1,i=0,a=2*Math.PI,s=!1,o=0){super(),this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=r,this.aStartAngle=i,this.aEndAngle=a,this.aClockwise=s,this.aRotation=o}getPoint(e,t){const n=t||new Zn;var r=2*Math.PI;let i=this.aEndAngle-this.aStartAngle;for(var a=Math.abs(i)<Number.EPSILON;i<0;)i+=r;for(;i>r;)i-=r;i<Number.EPSILON&&(i=a?0:r),!0!==this.aClockwise||a||(i===r?i=-r:i-=r);var s=this.aStartAngle+e*i;let o=this.aX+this.xRadius*Math.cos(s),l=this.aY+this.yRadius*Math.sin(s);return 0!==this.aRotation&&(t=Math.cos(this.aRotation),a=Math.sin(this.aRotation),e=o-this.aX,s=l-this.aY,o=e*t-s*a+this.aX,l=e*a+s*t+this.aY),n.set(o,l)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}Oc.prototype.isEllipseCurve=!0;class Fc extends Oc{constructor(e,t,n,r,i,a){super(e,t,n,n,r,i,a),this.type="ArcCurve"}}function Hc(){let i=0,a=0,s=0,o=0;function l(e,t,n,r){i=e,a=n,s=-3*e+3*t-2*n-r,o=2*e-2*t+n+r}return{initCatmullRom:function(e,t,n,r,i){l(t,n,i*(n-e),i*(r-t))},initNonuniformCatmullRom:function(e,t,n,r,i,a,s){i=(t-e)/i-(n-e)/(i+a)+(n-t)/a,s=(n-t)/a-(r-t)/(a+s)+(r-n)/s;l(t,n,i*=a,s*=a)},calc:function(e){var t=e*e,n=t*e;return i+a*e+s*t+o*n}}}Fc.prototype.isArcCurve=!0;const Uc=new sr,Gc=new Hc,Vc=new Hc,kc=new Hc;class Wc extends Bc{constructor(e=[],t=!1,n="centripetal",r=.5){super(),this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=r}getPoint(e,r=new sr){const t=r;var n=this.points,r=n.length,e=(r-(this.closed?0:1))*e;let i=Math.floor(e),a=e-i;this.closed?i+=0<i?0:(Math.floor(Math.abs(i)/r)+1)*r:0===a&&i===r-1&&(i=r-2,a=1);let s,o;s=this.closed||0<i?n[(i-1)%r]:(Uc.subVectors(n[0],n[1]).add(n[0]),Uc);const l=n[i%r],h=n[(i+1)%r];if(o=this.closed||i+2<r?n[(i+2)%r]:(Uc.subVectors(n[r-1],n[r-2]).add(n[r-1]),Uc),"centripetal"===this.curveType||"chordal"===this.curveType){r="chordal"===this.curveType?.5:.25;let e=Math.pow(s.distanceToSquared(l),r),t=Math.pow(l.distanceToSquared(h),r),n=Math.pow(h.distanceToSquared(o),r);t<1e-4&&(t=1),e<1e-4&&(e=t),n<1e-4&&(n=t),Gc.initNonuniformCatmullRom(s.x,l.x,h.x,o.x,e,t,n),Vc.initNonuniformCatmullRom(s.y,l.y,h.y,o.y,e,t,n),kc.initNonuniformCatmullRom(s.z,l.z,h.z,o.z,e,t,n)}else"catmullrom"===this.curveType&&(Gc.initCatmullRom(s.x,l.x,h.x,o.x,this.tension),Vc.initCatmullRom(s.y,l.y,h.y,o.y,this.tension),kc.initCatmullRom(s.z,l.z,h.z,o.z,this.tension));return t.set(Gc.calc(a),Vc.calc(a),kc.calc(a)),t}copy(n){super.copy(n),this.points=[];for(let e=0,t=n.points.length;e<t;e++){const r=n.points[e];this.points.push(r.clone())}return this.closed=n.closed,this.curveType=n.curveType,this.tension=n.tension,this}toJSON(){const n=super.toJSON();n.points=[];for(let e=0,t=this.points.length;e<t;e++){const r=this.points[e];n.points.push(r.toArray())}return n.closed=this.closed,n.curveType=this.curveType,n.tension=this.tension,n}fromJSON(n){super.fromJSON(n),this.points=[];for(let e=0,t=n.points.length;e<t;e++){var r=n.points[e];this.points.push((new sr).fromArray(r))}return this.closed=n.closed,this.curveType=n.curveType,this.tension=n.tension,this}}function jc(e,t,n,r,i){var a=.5*(r-t),t=.5*(i-n),i=e*e;return(2*n-2*r+a+t)*(e*i)+(-3*n+3*r-2*a-t)*i+a*e+n}function qc(e,t,n,r){return(i=1-(i=e))*i*t+2*(1-(t=e))*t*n+(e=e)*e*r;var i}function Xc(e,t,n,r,i){return(a=1-(a=e))*a*a*t+3*(t=1-(a=e))*t*a*n+3*(1-(n=e))*n*n*r+(e=e)*e*e*i;var a}Wc.prototype.isCatmullRomCurve3=!0;class Yc extends Bc{constructor(e=new Zn,t=new Zn,n=new Zn,r=new Zn){super(),this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=r}getPoint(e,t=new Zn){const n=t;var r=this.v0,i=this.v1,a=this.v2,t=this.v3;return n.set(Xc(e,r.x,i.x,a.x,t.x),Xc(e,r.y,i.y,a.y,t.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}Yc.prototype.isCubicBezierCurve=!0;class Zc extends Bc{constructor(e=new sr,t=new sr,n=new sr,r=new sr){super(),this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=r}getPoint(e,t=new sr){const n=t;var r=this.v0,i=this.v1,a=this.v2,t=this.v3;return n.set(Xc(e,r.x,i.x,a.x,t.x),Xc(e,r.y,i.y,a.y,t.y),Xc(e,r.z,i.z,a.z,t.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}Zc.prototype.isCubicBezierCurve3=!0;class Jc extends Bc{constructor(e=new Zn,t=new Zn){super(),this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new Zn){const n=t;return 1===e?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t){const n=t||new Zn;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}Jc.prototype.isLineCurve=!0;class Qc extends Bc{constructor(e=new sr,t=new sr){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=e,this.v2=t}getPoint(e,t=new sr){const n=t;return 1===e?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class Kc extends Bc{constructor(e=new Zn,t=new Zn,n=new Zn){super(),this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new Zn){const n=t;var r=this.v0,i=this.v1,t=this.v2;return n.set(qc(e,r.x,i.x,t.x),qc(e,r.y,i.y,t.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}Kc.prototype.isQuadraticBezierCurve=!0;class $c extends Bc{constructor(e=new sr,t=new sr,n=new sr){super(),this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new sr){const n=t;var r=this.v0,i=this.v1,t=this.v2;return n.set(qc(e,r.x,i.x,t.x),qc(e,r.y,i.y,t.y),qc(e,r.z,i.z,t.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}$c.prototype.isQuadraticBezierCurve3=!0;class eu extends Bc{constructor(e=[]){super(),this.type="SplineCurve",this.points=e}getPoint(e,t=new Zn){const n=t;var r=this.points,i=(r.length-1)*e,a=Math.floor(i),s=i-a,t=r[0===a?a:a-1],e=r[a],i=r[a>r.length-2?r.length-1:a+1],a=r[a>r.length-3?r.length-1:a+2];return n.set(jc(s,t.x,e.x,i.x,a.x),jc(s,t.y,e.y,i.y,a.y)),n}copy(n){super.copy(n),this.points=[];for(let e=0,t=n.points.length;e<t;e++){const r=n.points[e];this.points.push(r.clone())}return this}toJSON(){const n=super.toJSON();n.points=[];for(let e=0,t=this.points.length;e<t;e++){const r=this.points[e];n.points.push(r.toArray())}return n}fromJSON(n){super.fromJSON(n),this.points=[];for(let e=0,t=n.points.length;e<t;e++){var r=n.points[e];this.points.push((new Zn).fromArray(r))}return this}}eu.prototype.isSplineCurve=!0;var tu=Object.freeze({__proto__:null,ArcCurve:Fc,CatmullRomCurve3:Wc,CubicBezierCurve:Yc,CubicBezierCurve3:Zc,EllipseCurve:Oc,LineCurve:Jc,LineCurve3:Qc,QuadraticBezierCurve:Kc,QuadraticBezierCurve3:$c,SplineCurve:eu});class nu extends Bc{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0);var t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new Jc(t,e))}getPoint(e){var t=e*this.getLength(),n=this.getCurveLengths();let r=0;for(;r<n.length;){if(n[r]>=t){var i=n[r]-t;const s=this.curves[r];var a=s.getLength();return s.getPointAt(0===a?0:1-i/a)}r++}return null}getLength(){var e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const n=[];let r=0;for(let e=0,t=this.curves.length;e<t;e++)r+=this.curves[e].getLength(),n.push(r);return this.cacheLengths=n,n}getSpacedPoints(t=40){const n=[];for(let e=0;e<=t;e++)n.push(this.getPoint(e/t));return this.autoClose&&n.push(n[0]),n}getPoints(n=12){const r=[];let i;for(let e=0,t=this.curves;e<t.length;e++){const l=t[e];var a=l&&l.isEllipseCurve?2*n:l&&(l.isLineCurve||l.isLineCurve3)?1:l&&l.isSplineCurve?n*l.points.length:n,s=l.getPoints(a);for(let e=0;e<s.length;e++){var o=s[e];i&&i.equals(o)||(r.push(o),i=o)}}return this.autoClose&&1<r.length&&!r[r.length-1].equals(r[0])&&r.push(r[0]),r}copy(n){super.copy(n),this.curves=[];for(let e=0,t=n.curves.length;e<t;e++){const r=n.curves[e];this.curves.push(r.clone())}return this.autoClose=n.autoClose,this}toJSON(){const n=super.toJSON();n.autoClose=this.autoClose,n.curves=[];for(let e=0,t=this.curves.length;e<t;e++){const r=this.curves[e];n.curves.push(r.toJSON())}return n}fromJSON(n){super.fromJSON(n),this.autoClose=n.autoClose,this.curves=[];for(let e=0,t=n.curves.length;e<t;e++){var r=n.curves[e];this.curves.push((new tu[r.type]).fromJSON(r))}return this}}class ru extends nu{constructor(e){super(),this.type="Path",this.currentPoint=new Zn,e&&this.setFromPoints(e)}setFromPoints(n){this.moveTo(n[0].x,n[0].y);for(let e=1,t=n.length;e<t;e++)this.lineTo(n[e].x,n[e].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){var n=new Jc(this.currentPoint.clone(),new Zn(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,r){t=new Kc(this.currentPoint.clone(),new Zn(e,t),new Zn(n,r));return this.curves.push(t),this.currentPoint.set(n,r),this}bezierCurveTo(e,t,n,r,i,a){r=new Yc(this.currentPoint.clone(),new Zn(e,t),new Zn(n,r),new Zn(i,a));return this.curves.push(r),this.currentPoint.set(i,a),this}splineThru(e){var t=[this.currentPoint.clone()].concat(e),t=new eu(t);return this.curves.push(t),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,r,i,a){var s=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(e+s,t+o,n,r,i,a),this}absarc(e,t,n,r,i,a){return this.absellipse(e,t,n,n,r,i,a),this}ellipse(e,t,n,r,i,a,s,o){var l=this.currentPoint.x,h=this.currentPoint.y;return this.absellipse(e+l,t+h,n,r,i,a,s,o),this}absellipse(e,t,n,r,i,a,s,o){const l=new Oc(e,t,n,r,i,a,s,o);if(0<this.curves.length){const h=l.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(l);o=l.getPoint(1);return this.currentPoint.copy(o),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class iu extends ru{constructor(e){super(e),this.uuid=Gn(),this.type="Shape",this.holes=[]}getPointsHoles(n){const r=[];for(let e=0,t=this.holes.length;e<t;e++)r[e]=this.holes[e].getPoints(n);return r}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(n){super.copy(n),this.holes=[];for(let e=0,t=n.holes.length;e<t;e++){const r=n.holes[e];this.holes.push(r.clone())}return this}toJSON(){const n=super.toJSON();n.uuid=this.uuid,n.holes=[];for(let e=0,t=this.holes.length;e<t;e++){const r=this.holes[e];n.holes.push(r.toJSON())}return n}fromJSON(n){super.fromJSON(n),this.uuid=n.uuid,this.holes=[];for(let e=0,t=n.holes.length;e<t;e++){var r=n.holes[e];this.holes.push((new ru).fromJSON(r))}return this}}class au extends li{constructor(e,t=1){super(),this.type="Light",this.color=new Di(e),this.intensity=t}dispose(){}copy(e){return super.copy(e),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}au.prototype.isLight=!0;class su extends au{constructor(e,t,n){super(e,n),this.type="HemisphereLight",this.position.copy(li.DefaultUp),this.updateMatrix(),this.groundColor=new Di(t)}copy(e){return au.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}su.prototype.isHemisphereLight=!0;const ou=new Or,lu=new sr,hu=new sr;class cu{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new Zn(512,512),this.map=null,this.mapPass=null,this.matrix=new Or,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Ba,this._frameExtents=new Zn(1,1),this._viewportCount=1,this._viewports=[new nr(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;lu.setFromMatrixPosition(e.matrixWorld),t.position.copy(lu),hu.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(hu),t.updateMatrixWorld(),ou.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(ou),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(t.projectionMatrix),n.multiply(t.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const e={};return 0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class uu extends cu{constructor(){super(new Ra(50,1,.5,500)),this.focus=1}updateMatrices(e){const t=this.camera;var n=2*Un*e.angle*this.focus,r=this.mapSize.width/this.mapSize.height,i=e.distance||t.far;n===t.fov&&r===t.aspect&&i===t.far||(t.fov=n,t.aspect=r,t.far=i,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}uu.prototype.isSpotLightShadow=!0;class du extends au{constructor(e,t,n=0,r=Math.PI/3,i=0,a=1){super(e,t),this.type="SpotLight",this.position.copy(li.DefaultUp),this.updateMatrix(),this.target=new li,this.distance=n,this.angle=r,this.penumbra=i,this.decay=a,this.shadow=new uu}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}du.prototype.isSpotLight=!0;const pu=new Or,mu=new sr,fu=new sr;class gu extends cu{constructor(){super(new Ra(90,1,.5,500)),this._frameExtents=new Zn(4,2),this._viewportCount=6,this._viewports=[new nr(2,1,1,1),new nr(0,1,1,1),new nr(3,1,1,1),new nr(1,1,1,1),new nr(3,0,1,1),new nr(1,0,1,1)],this._cubeDirections=[new sr(1,0,0),new sr(-1,0,0),new sr(0,0,1),new sr(0,0,-1),new sr(0,1,0),new sr(0,-1,0)],this._cubeUps=[new sr(0,1,0),new sr(0,1,0),new sr(0,1,0),new sr(0,1,0),new sr(0,0,1),new sr(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,r=this.matrix;var i=e.distance||n.far;i!==n.far&&(n.far=i,n.updateProjectionMatrix()),mu.setFromMatrixPosition(e.matrixWorld),n.position.copy(mu),fu.copy(n.position),fu.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(fu),n.updateMatrixWorld(),r.makeTranslation(-mu.x,-mu.y,-mu.z),pu.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(pu)}}gu.prototype.isPointLightShadow=!0;class vu extends au{constructor(e,t,n=0,r=1){super(e,t),this.type="PointLight",this.distance=n,this.decay=r,this.shadow=new gu}get power(){return 4*this.intensity*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}vu.prototype.isPointLight=!0;class yu extends La{constructor(e=-1,t=1,n=1,r=-1,i=.1,a=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=r,this.near=i,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}setViewOffset(e,t,n,r,i,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){var e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let i=n-e,a=n+e,s=r+t,o=r-t;null!==this.view&&this.view.enabled&&(r=(this.right-this.left)/this.view.fullWidth/this.zoom,t=(this.top-this.bottom)/this.view.fullHeight/this.zoom,i+=r*this.view.offsetX,a=i+r*this.view.width,s-=t*this.view.offsetY,o=s-t*this.view.height),this.projectionMatrix.makeOrthographic(i,a,s,o,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}yu.prototype.isOrthographicCamera=!0;class xu extends cu{constructor(){super(new yu(-5,5,5,-5,.5,500))}}xu.prototype.isDirectionalLightShadow=!0;class _u extends au{constructor(e,t){super(e,t),this.type="DirectionalLight",this.position.copy(li.DefaultUp),this.updateMatrix(),this.target=new li,this.shadow=new xu}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}_u.prototype.isDirectionalLight=!0;class bu extends au{constructor(e,t){super(e,t),this.type="AmbientLight"}}bu.prototype.isAmbientLight=!0;class wu extends au{constructor(e,t,n=10,r=10){super(e,t),this.type="RectAreaLight",this.width=n,this.height=r}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}wu.prototype.isRectAreaLight=!0;class Mu{constructor(){this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new sr)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){var n=e.x,r=e.y,i=e.z,e=this.coefficients;return t.copy(e[0]).multiplyScalar(.282095),t.addScaledVector(e[1],.488603*r),t.addScaledVector(e[2],.488603*i),t.addScaledVector(e[3],.488603*n),t.addScaledVector(e[4],n*r*1.092548),t.addScaledVector(e[5],r*i*1.092548),t.addScaledVector(e[6],.315392*(3*i*i-1)),t.addScaledVector(e[7],n*i*1.092548),t.addScaledVector(e[8],.546274*(n*n-r*r)),t}getIrradianceAt(e,t){var n=e.x,r=e.y,i=e.z,e=this.coefficients;return t.copy(e[0]).multiplyScalar(.886227),t.addScaledVector(e[1],1.023328*r),t.addScaledVector(e[2],1.023328*i),t.addScaledVector(e[3],1.023328*n),t.addScaledVector(e[4],.858086*n*r),t.addScaledVector(e[5],.858086*r*i),t.addScaledVector(e[6],.743125*i*i-.247708),t.addScaledVector(e[7],.858086*n*i),t.addScaledVector(e[8],.429043*(n*n-r*r)),t}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,n){for(let e=0;e<9;e++)this.coefficients[e].addScaledVector(t.coefficients[e],n);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,n){for(let e=0;e<9;e++)this.coefficients[e].lerp(t.coefficients[e],n);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(t,n=0){const r=this.coefficients;for(let e=0;e<9;e++)r[e].fromArray(t,n+3*e);return this}toArray(t=[],n=0){const r=this.coefficients;for(let e=0;e<9;e++)r[e].toArray(t,n+3*e);return t}static getBasisAt(e,t){var n=e.x,r=e.y,e=e.z;t[0]=.282095,t[1]=.488603*r,t[2]=.488603*e,t[3]=.488603*n,t[4]=1.092548*n*r,t[5]=1.092548*r*e,t[6]=.315392*(3*e*e-1),t[7]=1.092548*n*e,t[8]=.546274*(n*n-r*r)}}Mu.prototype.isSphericalHarmonics3=!0;class Su extends au{constructor(e=new Mu,t=1){super(void 0,t),this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}Su.prototype.isLightProbe=!0;class Tu extends Ac{constructor(e){super(e),this.textures={}}load(t,n,e,r){const i=this,a=new Rc(i.manager);a.setPath(i.path),a.setRequestHeader(i.requestHeader),a.setWithCredentials(i.withCredentials),a.load(t,function(e){try{n(i.parse(JSON.parse(e)))}catch(e){r?r(e):console.error(e),i.manager.itemError(t)}},e,r)}parse(t){const n=this.textures;function e(e){return void 0===n[e]&&console.warn("THREE.MaterialLoader: Undefined texture",e),n[e]}const r=new hc[t.type];if(void 0!==t.uuid&&(r.uuid=t.uuid),void 0!==t.name&&(r.name=t.name),void 0!==t.color&&void 0!==r.color&&r.color.setHex(t.color),void 0!==t.roughness&&(r.roughness=t.roughness),void 0!==t.metalness&&(r.metalness=t.metalness),void 0!==t.sheen&&(r.sheen=(new Di).setHex(t.sheen)),void 0!==t.emissive&&void 0!==r.emissive&&r.emissive.setHex(t.emissive),void 0!==t.specular&&void 0!==r.specular&&r.specular.setHex(t.specular),void 0!==t.shininess&&(r.shininess=t.shininess),void 0!==t.clearcoat&&(r.clearcoat=t.clearcoat),void 0!==t.clearcoatRoughness&&(r.clearcoatRoughness=t.clearcoatRoughness),void 0!==t.fog&&(r.fog=t.fog),void 0!==t.flatShading&&(r.flatShading=t.flatShading),void 0!==t.blending&&(r.blending=t.blending),void 0!==t.combine&&(r.combine=t.combine),void 0!==t.side&&(r.side=t.side),void 0!==t.shadowSide&&(r.shadowSide=t.shadowSide),void 0!==t.opacity&&(r.opacity=t.opacity),void 0!==t.transparent&&(r.transparent=t.transparent),void 0!==t.alphaTest&&(r.alphaTest=t.alphaTest),void 0!==t.depthTest&&(r.depthTest=t.depthTest),void 0!==t.depthWrite&&(r.depthWrite=t.depthWrite),void 0!==t.colorWrite&&(r.colorWrite=t.colorWrite),void 0!==t.stencilWrite&&(r.stencilWrite=t.stencilWrite),void 0!==t.stencilWriteMask&&(r.stencilWriteMask=t.stencilWriteMask),void 0!==t.stencilFunc&&(r.stencilFunc=t.stencilFunc),void 0!==t.stencilRef&&(r.stencilRef=t.stencilRef),void 0!==t.stencilFuncMask&&(r.stencilFuncMask=t.stencilFuncMask),void 0!==t.stencilFail&&(r.stencilFail=t.stencilFail),void 0!==t.stencilZFail&&(r.stencilZFail=t.stencilZFail),void 0!==t.stencilZPass&&(r.stencilZPass=t.stencilZPass),void 0!==t.wireframe&&(r.wireframe=t.wireframe),void 0!==t.wireframeLinewidth&&(r.wireframeLinewidth=t.wireframeLinewidth),void 0!==t.wireframeLinecap&&(r.wireframeLinecap=t.wireframeLinecap),void 0!==t.wireframeLinejoin&&(r.wireframeLinejoin=t.wireframeLinejoin),void 0!==t.rotation&&(r.rotation=t.rotation),1!==t.linewidth&&(r.linewidth=t.linewidth),void 0!==t.dashSize&&(r.dashSize=t.dashSize),void 0!==t.gapSize&&(r.gapSize=t.gapSize),void 0!==t.scale&&(r.scale=t.scale),void 0!==t.polygonOffset&&(r.polygonOffset=t.polygonOffset),void 0!==t.polygonOffsetFactor&&(r.polygonOffsetFactor=t.polygonOffsetFactor),void 0!==t.polygonOffsetUnits&&(r.polygonOffsetUnits=t.polygonOffsetUnits),void 0!==t.skinning&&(r.skinning=t.skinning),void 0!==t.morphTargets&&(r.morphTargets=t.morphTargets),void 0!==t.morphNormals&&(r.morphNormals=t.morphNormals),void 0!==t.dithering&&(r.dithering=t.dithering),void 0!==t.alphaToCoverage&&(r.alphaToCoverage=t.alphaToCoverage),void 0!==t.premultipliedAlpha&&(r.premultipliedAlpha=t.premultipliedAlpha),void 0!==t.vertexTangents&&(r.vertexTangents=t.vertexTangents),void 0!==t.visible&&(r.visible=t.visible),void 0!==t.toneMapped&&(r.toneMapped=t.toneMapped),void 0!==t.userData&&(r.userData=t.userData),void 0!==t.vertexColors&&("number"==typeof t.vertexColors?r.vertexColors=0<t.vertexColors:r.vertexColors=t.vertexColors),void 0!==t.uniforms)for(const a in t.uniforms){var i=t.uniforms[a];switch(r.uniforms[a]={},i.type){case"t":r.uniforms[a].value=e(i.value);break;case"c":r.uniforms[a].value=(new Di).setHex(i.value);break;case"v2":r.uniforms[a].value=(new Zn).fromArray(i.value);break;case"v3":r.uniforms[a].value=(new sr).fromArray(i.value);break;case"v4":r.uniforms[a].value=(new nr).fromArray(i.value);break;case"m3":r.uniforms[a].value=(new Jn).fromArray(i.value);break;case"m4":r.uniforms[a].value=(new Or).fromArray(i.value);break;default:r.uniforms[a].value=i.value}}if(void 0!==t.defines&&(r.defines=t.defines),void 0!==t.vertexShader&&(r.vertexShader=t.vertexShader),void 0!==t.fragmentShader&&(r.fragmentShader=t.fragmentShader),void 0!==t.extensions)for(const s in t.extensions)r.extensions[s]=t.extensions[s];if(void 0!==t.shading&&(r.flatShading=1===t.shading),void 0!==t.size&&(r.size=t.size),void 0!==t.sizeAttenuation&&(r.sizeAttenuation=t.sizeAttenuation),void 0!==t.map&&(r.map=e(t.map)),void 0!==t.matcap&&(r.matcap=e(t.matcap)),void 0!==t.alphaMap&&(r.alphaMap=e(t.alphaMap)),void 0!==t.bumpMap&&(r.bumpMap=e(t.bumpMap)),void 0!==t.bumpScale&&(r.bumpScale=t.bumpScale),void 0!==t.normalMap&&(r.normalMap=e(t.normalMap)),void 0!==t.normalMapType&&(r.normalMapType=t.normalMapType),void 0!==t.normalScale){let e=t.normalScale;!1===Array.isArray(e)&&(e=[e,e]),r.normalScale=(new Zn).fromArray(e)}return void 0!==t.displacementMap&&(r.displacementMap=e(t.displacementMap)),void 0!==t.displacementScale&&(r.displacementScale=t.displacementScale),void 0!==t.displacementBias&&(r.displacementBias=t.displacementBias),void 0!==t.roughnessMap&&(r.roughnessMap=e(t.roughnessMap)),void 0!==t.metalnessMap&&(r.metalnessMap=e(t.metalnessMap)),void 0!==t.emissiveMap&&(r.emissiveMap=e(t.emissiveMap)),void 0!==t.emissiveIntensity&&(r.emissiveIntensity=t.emissiveIntensity),void 0!==t.specularMap&&(r.specularMap=e(t.specularMap)),void 0!==t.envMap&&(r.envMap=e(t.envMap)),void 0!==t.envMapIntensity&&(r.envMapIntensity=t.envMapIntensity),void 0!==t.reflectivity&&(r.reflectivity=t.reflectivity),void 0!==t.refractionRatio&&(r.refractionRatio=t.refractionRatio),void 0!==t.lightMap&&(r.lightMap=e(t.lightMap)),void 0!==t.lightMapIntensity&&(r.lightMapIntensity=t.lightMapIntensity),void 0!==t.aoMap&&(r.aoMap=e(t.aoMap)),void 0!==t.aoMapIntensity&&(r.aoMapIntensity=t.aoMapIntensity),void 0!==t.gradientMap&&(r.gradientMap=e(t.gradientMap)),void 0!==t.clearcoatMap&&(r.clearcoatMap=e(t.clearcoatMap)),void 0!==t.clearcoatRoughnessMap&&(r.clearcoatRoughnessMap=e(t.clearcoatRoughnessMap)),void 0!==t.clearcoatNormalMap&&(r.clearcoatNormalMap=e(t.clearcoatNormalMap)),void 0!==t.clearcoatNormalScale&&(r.clearcoatNormalScale=(new Zn).fromArray(t.clearcoatNormalScale)),void 0!==t.transmission&&(r.transmission=t.transmission),void 0!==t.transmissionMap&&(r.transmissionMap=e(t.transmissionMap)),r}setTextures(e){return this.textures=e,this}}class Eu{static decodeText(n){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(n);let r="";for(let e=0,t=n.length;e<t;e++)r+=String.fromCharCode(n[e]);try{return decodeURIComponent(escape(r))}catch(e){return r}}static extractUrlBase(e){var t=e.lastIndexOf("/");return-1===t?"./":e.substr(0,t+1)}}class Au extends ra{constructor(){super(),this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}clone(){return(new this.constructor).copy(this)}toJSON(){const e=super.toJSON(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}Au.prototype.isInstancedBufferGeometry=!0;class Lu extends Bi{constructor(e,t,n,r){"number"==typeof n&&(r=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(e,t,n),this.meshPerAttribute=r||1}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}Lu.prototype.isInstancedBufferAttribute=!0;class Ru extends Ac{constructor(e){super(e)}load(t,n,e,r){const i=this,a=new Rc(i.manager);a.setPath(i.path),a.setRequestHeader(i.requestHeader),a.setWithCredentials(i.withCredentials),a.load(t,function(e){try{n(i.parse(JSON.parse(e)))}catch(e){r?r(e):console.error(e),i.manager.itemError(t)}},e,r)}parse(n){const i={},a={};function r(e,t){if(void 0!==i[t])return i[t];var n=e.interleavedBuffers[t],e=function(e,t){if(void 0!==a[t])return a[t];e=e.arrayBuffers,e=e[t],e=new Uint32Array(e).buffer;return a[t]=e}(e,n.buffer),e=Zi(n.type,e);const r=new nl(e,n.stride);return r.uuid=n.uuid,i[t]=r,r}const s=new(n.isInstancedBufferGeometry?Au:ra);var e=n.data.index;void 0!==e&&(f=Zi(e.type,e.array),s.setIndex(new Bi(f,1)));var t=n.data.attributes;for(const g in t){var o=t[g];let e;if(o.isInterleavedBufferAttribute){var l=r(n.data,o.data);e=new il(l,o.itemSize,o.offset,o.normalized)}else{l=Zi(o.type,o.array);const v=o.isInstancedBufferAttribute?Lu:Bi;e=new v(l,o.itemSize,o.normalized)}void 0!==o.name&&(e.name=o.name),void 0!==o.usage&&e.setUsage(o.usage),void 0!==o.updateRange&&(e.updateRange.offset=o.updateRange.offset,e.updateRange.count=o.updateRange.count),s.setAttribute(g,e)}var h=n.data.morphAttributes;if(h)for(const y in h){var c=h[y];const x=[];for(let t=0,e=c.length;t<e;t++){var u,d=c[t];let e;e=d.isInterleavedBufferAttribute?(u=r(n.data,d.data),new il(u,d.itemSize,d.offset,d.normalized)):(u=Zi(d.type,d.array),new Bi(u,d.itemSize,d.normalized)),void 0!==d.name&&(e.name=d.name),x.push(e)}s.morphAttributes[y]=x}n.data.morphTargetsRelative&&(s.morphTargetsRelative=!0);var p=n.data.groups||n.data.drawcalls||n.data.offsets;if(void 0!==p)for(let e=0,t=p.length;e!==t;++e){var m=p[e];s.addGroup(m.start,m.count,m.materialIndex)}var f=n.data.boundingSphere;if(void 0!==f){const _=new sr;void 0!==f.center&&_.fromArray(f.center),s.boundingSphere=new Lr(_,f.radius)}return n.name&&(s.name=n.name),n.userData&&(s.userData=n.userData),s}}class Cu extends Ac{constructor(e){super(e)}load(r,i,e,a){const s=this;var t=""===this.path?Eu.extractUrlBase(r):this.path;this.resourcePath=this.resourcePath||t;const n=new Rc(this.manager);n.setPath(this.path),n.setRequestHeader(this.requestHeader),n.setWithCredentials(this.withCredentials),n.load(r,function(e){let t=null;try{t=JSON.parse(e)}catch(e){return void 0!==a&&a(e),void console.error("THREE:ObjectLoader: Can't parse "+r+".",e.message)}const n=t.metadata;void 0!==n&&void 0!==n.type&&"geometry"!==n.type.toLowerCase()?s.parse(t,i):console.error("THREE.ObjectLoader: Can't load "+r)},e,a)}parse(e,t){var n=this.parseAnimations(e.animations),r=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,r),a=this.parseImages(e.images,function(){void 0!==t&&t(s)}),r=this.parseTextures(e.textures,a),r=this.parseMaterials(e.materials,r);const s=this.parseObject(e.object,i,r,n);e=this.parseSkeletons(e.skeletons,s);if(this.bindSkeletons(s,e),void 0!==t){let e=!1;for(const o in a)if(a[o]instanceof HTMLImageElement){e=!0;break}!1===e&&t(s)}return s}parseShapes(n){const r={};if(void 0!==n)for(let e=0,t=n.length;e<t;e++){var i=(new iu).fromJSON(n[e]);r[i.uuid]=i}return r}parseSkeletons(n,e){const r={},i={};if(e.traverse(function(e){e.isBone&&(i[e.uuid]=e)}),void 0!==n)for(let e=0,t=n.length;e<t;e++){var a=(new Il).fromJSON(n[e],i);r[a.uuid]=a}return r}parseGeometries(n,r){const i={};let a;if(void 0!==n){const h=new Ru;for(let t=0,e=n.length;t<e;t++){let e;const c=n[t];switch(c.type){case"PlaneGeometry":case"PlaneBufferGeometry":e=new Kh[c.type](c.width,c.height,c.widthSegments,c.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":e=new Kh[c.type](c.width,c.height,c.depth,c.widthSegments,c.heightSegments,c.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":e=new Kh[c.type](c.radius,c.segments,c.thetaStart,c.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":e=new Kh[c.type](c.radiusTop,c.radiusBottom,c.height,c.radialSegments,c.heightSegments,c.openEnded,c.thetaStart,c.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":e=new Kh[c.type](c.radius,c.height,c.radialSegments,c.heightSegments,c.openEnded,c.thetaStart,c.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":e=new Kh[c.type](c.radius,c.widthSegments,c.heightSegments,c.phiStart,c.phiLength,c.thetaStart,c.thetaLength);break;case"DodecahedronGeometry":case"DodecahedronBufferGeometry":case"IcosahedronGeometry":case"IcosahedronBufferGeometry":case"OctahedronGeometry":case"OctahedronBufferGeometry":case"TetrahedronGeometry":case"TetrahedronBufferGeometry":e=new Kh[c.type](c.radius,c.detail);break;case"RingGeometry":case"RingBufferGeometry":e=new Kh[c.type](c.innerRadius,c.outerRadius,c.thetaSegments,c.phiSegments,c.thetaStart,c.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":e=new Kh[c.type](c.radius,c.tube,c.radialSegments,c.tubularSegments,c.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":e=new Kh[c.type](c.radius,c.tube,c.tubularSegments,c.radialSegments,c.p,c.q);break;case"TubeGeometry":case"TubeBufferGeometry":e=new Kh[c.type]((new tu[c.path.type]).fromJSON(c.path),c.tubularSegments,c.radius,c.radialSegments,c.closed);break;case"LatheGeometry":case"LatheBufferGeometry":e=new Kh[c.type](c.points,c.segments,c.phiStart,c.phiLength);break;case"PolyhedronGeometry":case"PolyhedronBufferGeometry":e=new Kh[c.type](c.vertices,c.indices,c.radius,c.details);break;case"ShapeGeometry":case"ShapeBufferGeometry":a=[];for(let e=0,t=c.shapes.length;e<t;e++){var s=r[c.shapes[e]];a.push(s)}e=new Kh[c.type](a,c.curveSegments);break;case"ExtrudeGeometry":case"ExtrudeBufferGeometry":a=[];for(let e=0,t=c.shapes.length;e<t;e++){var o=r[c.shapes[e]];a.push(o)}var l=c.options.extrudePath;void 0!==l&&(c.options.extrudePath=(new tu[l.type]).fromJSON(l)),e=new Kh[c.type](a,c.options);break;case"BufferGeometry":case"InstancedBufferGeometry":e=h.parse(c);break;case"Geometry":console.error('THREE.ObjectLoader: Loading "Geometry" is not supported anymore.');break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+c.type+'"');continue}e.uuid=c.uuid,void 0!==c.name&&(e.name=c.name),!0===e.isBufferGeometry&&void 0!==c.userData&&(e.userData=c.userData),i[c.uuid]=e}}return i}parseMaterials(n,e){const r={},i={};if(void 0!==n){const o=new Tu;o.setTextures(e);for(let e=0,t=n.length;e<t;e++){var a=n[e];if("MultiMaterial"===a.type){const l=[];for(let e=0;e<a.materials.length;e++){var s=a.materials[e];void 0===r[s.uuid]&&(r[s.uuid]=o.parse(s)),l.push(r[s.uuid])}i[a.uuid]=l}else void 0===r[a.uuid]&&(r[a.uuid]=o.parse(a)),i[a.uuid]=r[a.uuid]}}return i}parseAnimations(t){const n={};if(void 0!==t)for(let e=0;e<t.length;e++){var r=t[e],r=Mc.parse(r);n[r.uuid]=r}return n}parseImages(n,e){const r=this,i={};let a;function s(e){if("string"!=typeof e)return e.data?{data:Zi(e.type,e.data),width:e.width,height:e.height}:null;var t,e=e,e=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(e)?e:r.resourcePath+e;return t=e,r.manager.itemStart(t),a.load(t,function(){r.manager.itemEnd(t)},void 0,function(){r.manager.itemError(t),r.manager.itemEnd(t)})}if(void 0!==n&&0<n.length){e=new Tc(e);a=new Dc(e),a.setCrossOrigin(this.crossOrigin);for(let e=0,t=n.length;e<t;e++){var o=n[e],l=o.url;if(Array.isArray(l)){i[o.uuid]=[];for(let e=0,t=l.length;e<t;e++){var h=s(l[e]);null!==h&&(h instanceof HTMLImageElement?i[o.uuid].push(h):i[o.uuid].push(new Ia(h.data,h.width,h.height)))}}else{var c=s(o.url);null!==c&&(i[o.uuid]=c)}}}return i}parseTextures(n,r){function i(e,t){return"number"==typeof e?e:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",e),t[e])}const a={};if(void 0!==n)for(let t=0,e=n.length;t<e;t++){var s=n[t];void 0===s.image&&console.warn('THREE.ObjectLoader: No "image" specified for',s.uuid),void 0===r[s.image]&&console.warn("THREE.ObjectLoader: Undefined image",s.image);let e;var o=r[s.image];Array.isArray(o)?(e=new Pa(o),6===o.length&&(e.needsUpdate=!0)):(e=o&&o.data?new Ia(o.data,o.width,o.height):new er(o),o&&(e.needsUpdate=!0)),e.uuid=s.uuid,void 0!==s.name&&(e.name=s.name),void 0!==s.mapping&&(e.mapping=i(s.mapping,Pu)),void 0!==s.offset&&e.offset.fromArray(s.offset),void 0!==s.repeat&&e.repeat.fromArray(s.repeat),void 0!==s.center&&e.center.fromArray(s.center),void 0!==s.rotation&&(e.rotation=s.rotation),void 0!==s.wrap&&(e.wrapS=i(s.wrap[0],Du),e.wrapT=i(s.wrap[1],Du)),void 0!==s.format&&(e.format=s.format),void 0!==s.type&&(e.type=s.type),void 0!==s.encoding&&(e.encoding=s.encoding),void 0!==s.minFilter&&(e.minFilter=i(s.minFilter,Iu)),void 0!==s.magFilter&&(e.magFilter=i(s.magFilter,Iu)),void 0!==s.anisotropy&&(e.anisotropy=s.anisotropy),void 0!==s.flipY&&(e.flipY=s.flipY),void 0!==s.premultiplyAlpha&&(e.premultiplyAlpha=s.premultiplyAlpha),void 0!==s.unpackAlignment&&(e.unpackAlignment=s.unpackAlignment),a[s.uuid]=e}return a}parseObject(e,t,a,n){let r;function i(e){return void 0===t[e]&&console.warn("THREE.ObjectLoader: Undefined geometry",e),t[e]}function s(n){if(void 0!==n){if(Array.isArray(n)){const i=[];for(let e=0,t=n.length;e<t;e++){var r=n[e];void 0===a[r]&&console.warn("THREE.ObjectLoader: Undefined material",r),i.push(a[r])}return i}return void 0===a[n]&&console.warn("THREE.ObjectLoader: Undefined material",n),a[n]}}let o,l;switch(e.type){case"Scene":r=new tl,void 0!==e.background&&Number.isInteger(e.background)&&(r.background=new Di(e.background)),void 0!==e.fog&&("Fog"===e.fog.type?r.fog=new el(e.fog.color,e.fog.near,e.fog.far):"FogExp2"===e.fog.type&&(r.fog=new $o(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":r=new Ra(e.fov,e.aspect,e.near,e.far),void 0!==e.focus&&(r.focus=e.focus),void 0!==e.zoom&&(r.zoom=e.zoom),void 0!==e.filmGauge&&(r.filmGauge=e.filmGauge),void 0!==e.filmOffset&&(r.filmOffset=e.filmOffset),void 0!==e.view&&(r.view=Object.assign({},e.view));break;case"OrthographicCamera":r=new yu(e.left,e.right,e.top,e.bottom,e.near,e.far),void 0!==e.zoom&&(r.zoom=e.zoom),void 0!==e.view&&(r.view=Object.assign({},e.view));break;case"AmbientLight":r=new bu(e.color,e.intensity);break;case"DirectionalLight":r=new _u(e.color,e.intensity);break;case"PointLight":r=new vu(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":r=new wu(e.color,e.intensity,e.width,e.height);break;case"SpotLight":r=new du(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":r=new su(e.color,e.groundColor,e.intensity);break;case"LightProbe":r=(new Su).fromJSON(e);break;case"SkinnedMesh":o=i(e.geometry),l=s(e.material),r=new Rl(o,l),void 0!==e.bindMode&&(r.bindMode=e.bindMode),void 0!==e.bindMatrix&&r.bindMatrix.fromArray(e.bindMatrix),void 0!==e.skeleton&&(r.skeleton=e.skeleton);break;case"Mesh":o=i(e.geometry),l=s(e.material),r=new ba(o,l);break;case"InstancedMesh":o=i(e.geometry),l=s(e.material);var h=e.count,c=e.instanceMatrix,u=e.instanceColor;r=new Fl(o,l,h),r.instanceMatrix=new Bi(new Float32Array(c.array),16),void 0!==u&&(r.instanceColor=new Bi(new Float32Array(u.array),u.itemSize));break;case"LOD":r=new Ml;break;case"Line":r=new jl(i(e.geometry),s(e.material));break;case"LineLoop":r=new Zl(i(e.geometry),s(e.material));break;case"LineSegments":r=new Yl(i(e.geometry),s(e.material));break;case"PointCloud":case"Points":r=new th(i(e.geometry),s(e.material));break;case"Sprite":r=new xl(s(e.material));break;case"Group":r=new qo;break;case"Bone":r=new Cl;break;default:r=new li}if(r.uuid=e.uuid,void 0!==e.name&&(r.name=e.name),void 0!==e.matrix?(r.matrix.fromArray(e.matrix),void 0!==e.matrixAutoUpdate&&(r.matrixAutoUpdate=e.matrixAutoUpdate),r.matrixAutoUpdate&&r.matrix.decompose(r.position,r.quaternion,r.scale)):(void 0!==e.position&&r.position.fromArray(e.position),void 0!==e.rotation&&r.rotation.fromArray(e.rotation),void 0!==e.quaternion&&r.quaternion.fromArray(e.quaternion),void 0!==e.scale&&r.scale.fromArray(e.scale)),void 0!==e.castShadow&&(r.castShadow=e.castShadow),void 0!==e.receiveShadow&&(r.receiveShadow=e.receiveShadow),e.shadow&&(void 0!==e.shadow.bias&&(r.shadow.bias=e.shadow.bias),void 0!==e.shadow.normalBias&&(r.shadow.normalBias=e.shadow.normalBias),void 0!==e.shadow.radius&&(r.shadow.radius=e.shadow.radius),void 0!==e.shadow.mapSize&&r.shadow.mapSize.fromArray(e.shadow.mapSize),void 0!==e.shadow.camera&&(r.shadow.camera=this.parseObject(e.shadow.camera))),void 0!==e.visible&&(r.visible=e.visible),void 0!==e.frustumCulled&&(r.frustumCulled=e.frustumCulled),void 0!==e.renderOrder&&(r.renderOrder=e.renderOrder),void 0!==e.userData&&(r.userData=e.userData),void 0!==e.layers&&(r.layers.mask=e.layers),void 0!==e.children){var d=e.children;for(let e=0;e<d.length;e++)r.add(this.parseObject(d[e],t,a,n))}if(void 0!==e.animations){var p=e.animations;for(let e=0;e<p.length;e++){var m=p[e];r.animations.push(n[m])}}if("LOD"===e.type){void 0!==e.autoUpdate&&(r.autoUpdate=e.autoUpdate);var f=e.levels;for(let e=0;e<f.length;e++){var g=f[e],v=r.getObjectByProperty("uuid",g.object);void 0!==v&&r.addLevel(v,g.distance)}}return r}bindSkeletons(e,n){0!==Object.keys(n).length&&e.traverse(function(e){var t;!0===e.isSkinnedMesh&&void 0!==e.skeleton&&(void 0===(t=n[e.skeleton])?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",e.skeleton):e.bind(t,e.bindMatrix))})}setTexturePath(e){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(e)}}const Pu={UVMapping:c,CubeReflectionMapping:z,CubeRefractionMapping:B,EquirectangularReflectionMapping:u,EquirectangularRefractionMapping:d,CubeUVReflectionMapping:O,CubeUVRefractionMapping:F},Du={RepeatWrapping:H,ClampToEdgeWrapping:U,MirroredRepeatWrapping:G},Iu={NearestFilter:V,NearestMipmapNearestFilter:k,NearestMipmapLinearFilter:Te,LinearFilter:Ae,LinearMipmapNearestFilter:Le,LinearMipmapLinearFilter:Re};class Nu extends Ac{constructor(e){super(e),"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(t,n,e,r){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const i=this,a=Sc.get(t);if(void 0!==a)return i.manager.itemStart(t),setTimeout(function(){n&&n(a),i.manager.itemEnd(t)},0),a;const s={};s.credentials="anonymous"===this.crossOrigin?"same-origin":"include",s.headers=this.requestHeader,fetch(t,s).then(function(e){return e.blob()}).then(function(e){return createImageBitmap(e,Object.assign(i.options,{colorSpaceConversion:"none"}))}).then(function(e){Sc.add(t,e),n&&n(e),i.manager.itemEnd(t)}).catch(function(e){r&&r(e),i.manager.itemError(t),i.manager.itemEnd(t)}),i.manager.itemStart(t)}}Nu.prototype.isImageBitmapLoader=!0;class zu{constructor(){this.type="ShapePath",this.color=new Di,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new ru,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,r){return this.currentPath.quadraticCurveTo(e,t,n,r),this}bezierCurveTo(e,t,n,r,i,a){return this.currentPath.bezierCurveTo(e,t,n,r,i,a),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(n,e){function t(n){const r=[];for(let e=0,t=n.length;e<t;e++){var i=n[e];const a=new iu;a.curves=i.curves,r.push(a)}return r}const r=Nh.isClockWise,i=this.subPaths;if(0===i.length)return[];if(!0===e)return t(i);let a,s,o;const l=[];if(1===i.length)return s=i[0],o=new iu,o.curves=s.curves,l.push(o),l;let h=!r(i[0].getPoints());h=n?!h:h;const c=[],u=[];let d=[],p=0;var m,f;u[p]=void 0,d[p]=[];for(let e=0,t=i.length;e<t;e++)s=i[e],m=s.getPoints(),a=r(m),a=n?!a:a,a?(!h&&u[p]&&p++,u[p]={s:new iu,p:m},u[p].s.curves=s.curves,h&&p++,d[p]=[]):d[p].push({h:s,p:m[0]});if(!u[0])return t(i);if(1<u.length){let i=!1;const y=[];for(let e=0,t=u.length;e<t;e++)c[e]=[];for(let r=0,e=u.length;r<e;r++){var g=d[r];for(let n=0;n<g.length;n++){var v=g[n];let t=!0;for(let e=0;e<u.length;e++)!function(s,o){var e=o.length;let l=!1;for(let i=e-1,a=0;a<e;i=a++){let e=o[i],t=o[a],n=t.x-e.x,r=t.y-e.y;if(Math.abs(r)>Number.EPSILON){if(r<0&&(e=o[a],n=-n,t=o[i],r=-r),!(s.y<e.y||s.y>t.y))if(s.y===e.y){if(s.x===e.x)return 1}else{var h=r*(s.x-e.x)-n*(s.y-e.y);if(0==h)return 1;h<0||(l=!l)}}else if(s.y===e.y&&(t.x<=s.x&&s.x<=e.x||e.x<=s.x&&s.x<=t.x))return 1}return l}(v.p,u[e].p)||(r!==e&&y.push({froms:r,tos:e,hole:n}),t?(t=!1,c[e].push(v)):i=!0);t&&c[r].push(v)}}0<y.length&&(i||(d=c))}for(let e=0,t=u.length;e<t;e++){o=u[e].s,l.push(o),f=d[e];for(let e=0,t=f.length;e<t;e++)o.holes.push(f[e].h)}return l}}class Bu{constructor(e){this.type="Font",this.data=e}generateShapes(e,t=100){var n=[];const r=function(e,t,n){const r=Array.from(e),i=t/n.resolution,a=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*i,s=[];let o=0,l=0;for(let e=0;e<r.length;e++){var h=r[e];"\n"===h?(o=0,l-=a):(h=function(e,c,u,d,t){const p=t.glyphs[e]||t.glyphs["?"];if(p){const f=new zu;let n,r,i,a,s,o,l,h;if(p.o){var m=p._cachedOutline||(p._cachedOutline=p.o.split(" "));for(let e=0,t=m.length;e<t;)switch(m[e++]){case"m":n=m[e++]*c+u,r=m[e++]*c+d,f.moveTo(n,r);break;case"l":n=m[e++]*c+u,r=m[e++]*c+d,f.lineTo(n,r);break;case"q":i=m[e++]*c+u,a=m[e++]*c+d,s=m[e++]*c+u,o=m[e++]*c+d,f.quadraticCurveTo(s,o,i,a);break;case"b":i=m[e++]*c+u,a=m[e++]*c+d,s=m[e++]*c+u,o=m[e++]*c+d,l=m[e++]*c+u,h=m[e++]*c+d,f.bezierCurveTo(s,o,l,h,i,a)}}return{offsetX:p.ha*c,path:f}}console.error('THREE.Font: character "'+e+'" does not exists in font family '+t.familyName+".")}(h,i,o,l,n),o+=h.offsetX,s.push(h.path))}return s}(e,t,this.data);for(let e=0,t=r.length;e<t;e++)Array.prototype.push.apply(n,r[e].toShapes());return n}}Bu.prototype.isFont=!0;class Ou extends Ac{constructor(e){super(e)}load(e,r,t,n){const i=this,a=new Rc(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(i.withCredentials),a.load(e,function(t){let n;try{n=JSON.parse(t)}catch(e){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),n=JSON.parse(t.substring(65,t.length-2))}t=i.parse(n);r&&r(t)},t,n)}parse(e){return new Bu(e)}}let Fu;const Hu={getContext:function(){return void 0===Fu&&(Fu=new(window.AudioContext||window.webkitAudioContext)),Fu},setContext:function(e){Fu=e}};class Uu extends Ac{constructor(e){super(e)}load(r,i,e,a){const s=this,t=new Rc(this.manager);t.setResponseType("arraybuffer"),t.setPath(this.path),t.setRequestHeader(this.requestHeader),t.setWithCredentials(this.withCredentials),t.load(r,function(e){try{var t=e.slice(0);const n=Hu.getContext();n.decodeAudioData(t,function(e){i(e)})}catch(e){a?a(e):console.error(e),s.manager.itemError(r)}},e,a)}}class Gu extends Su{constructor(e,t,n=1){super(void 0,n);var r=(new Di).set(e),n=(new Di).set(t),e=new sr(r.r,r.g,r.b),t=new sr(n.r,n.g,n.b),r=Math.sqrt(Math.PI),n=r*Math.sqrt(.75);this.sh.coefficients[0].copy(e).add(t).multiplyScalar(r),this.sh.coefficients[1].copy(e).sub(t).multiplyScalar(n)}}Gu.prototype.isHemisphereLightProbe=!0;class Vu extends Su{constructor(e,t=1){super(void 0,t);e=(new Di).set(e);this.sh.coefficients[0].set(e.r,e.g,e.b).multiplyScalar(2*Math.sqrt(Math.PI))}}Vu.prototype.isAmbientLightProbe=!0;const ku=new Or,Wu=new Or;class ju{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Ra,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Ra,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep;const s=e.projectionMatrix.clone();var n,r=t.eyeSep/2,i=r*t.near/t.focus,a=t.near*Math.tan(Hn*t.fov*.5)/t.zoom;Wu.elements[12]=-r,ku.elements[12]=r,n=-a*t.aspect+i,r=a*t.aspect+i,s.elements[0]=2*t.near/(r-n),s.elements[8]=(r+n)/(r-n),this.cameraL.projectionMatrix.copy(s),n=-a*t.aspect-i,r=a*t.aspect-i,s.elements[0]=2*t.near/(r-n),s.elements[8]=(r+n)/(r-n),this.cameraR.projectionMatrix.copy(s)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(Wu),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(ku)}}class qu{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=Xu(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;return this.autoStart&&!this.running?(this.start(),0):(this.running&&(t=Xu(),e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e),e);var t}}function Xu(){return("undefined"==typeof performance?Date:performance).now()}const Yu=new sr,Zu=new ar,Ju=new sr,Qu=new sr;class Ku extends li{constructor(){super(),this.type="AudioListener",this.context=Hu.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new qu}getInput(){return this.gain}removeFilter(){return null!==this.filter&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return null!==this.filter?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener;var n=this.up;this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Yu,Zu,Ju),Qu.set(0,0,-1).applyQuaternion(Zu),t.positionX?(e=this.context.currentTime+this.timeDelta,t.positionX.linearRampToValueAtTime(Yu.x,e),t.positionY.linearRampToValueAtTime(Yu.y,e),t.positionZ.linearRampToValueAtTime(Yu.z,e),t.forwardX.linearRampToValueAtTime(Qu.x,e),t.forwardY.linearRampToValueAtTime(Qu.y,e),t.forwardZ.linearRampToValueAtTime(Qu.z,e),t.upX.linearRampToValueAtTime(n.x,e),t.upY.linearRampToValueAtTime(n.y,e),t.upZ.linearRampToValueAtTime(n.z,e)):(t.setPosition(Yu.x,Yu.y,Yu.z),t.setOrientation(Qu.x,Qu.y,Qu.z,n.x,n.y,n.z))}}class $u extends li{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(!0!==this.isPlaying){if(!1!==this.hasPlaybackControl){this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}console.warn("THREE.Audio: this Audio has no playback control.")}else console.warn("THREE.Audio: Audio is already playing.")}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(0<this.filters.length){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(0<this.filters.length){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e=e||[],!0===this._connected?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(!1!==this.hasPlaybackControl)return this.playbackRate=e,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(!1!==this.hasPlaybackControl)return this.loop=e,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const ed=new sr,td=new ar,nd=new sr,rd=new sr;class id extends $u{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),!0!==this.hasPlaybackControl||!1!==this.isPlaying){this.matrixWorld.decompose(ed,td,nd),rd.set(0,0,1).applyQuaternion(td);const t=this.panner;t.positionX?(e=this.context.currentTime+this.listener.timeDelta,t.positionX.linearRampToValueAtTime(ed.x,e),t.positionY.linearRampToValueAtTime(ed.y,e),t.positionZ.linearRampToValueAtTime(ed.z,e),t.orientationX.linearRampToValueAtTime(rd.x,e),t.orientationY.linearRampToValueAtTime(rd.y,e),t.orientationZ.linearRampToValueAtTime(rd.z,e)):(t.setPosition(ed.x,ed.y,ed.z),t.setOrientation(rd.x,rd.y,rd.z))}}}class ad{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let t=0;var n=this.getFrequencyData();for(let e=0;e<n.length;e++)t+=n[e];return t/n.length}}class sd{constructor(e,t,n){this.binding=e,this.valueSize=n;let r,i,a;switch(t){case"quaternion":r=this._slerp,i=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*n),this._workIndex=5;break;case"string":case"bool":r=this._select,i=this._select,a=this._setAdditiveIdentityOther,this.buffer=new Array(5*n);break;default:r=this._lerp,i=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*n)}this._mixBufferRegion=r,this._mixBufferRegionAdditive=i,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,r=this.valueSize,i=e*r+r;let a=this.cumulativeWeight;if(0===a){for(let e=0;e!==r;++e)n[i+e]=n[e];a=t}else{a+=t;t=t/a;this._mixBufferRegion(n,i,0,t,r)}this.cumulativeWeight=a}accumulateAdditive(e){var t=this.buffer,n=this.valueSize,r=n*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(t,r,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const n=this.valueSize,r=this.buffer,i=e*n+n,t=this.cumulativeWeight,a=this.cumulativeWeightAdditive,s=this.binding;this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,t<1&&(e=n*this._origIndex,this._mixBufferRegion(r,i,e,1-t,n)),0<a&&this._mixBufferRegionAdditive(r,i,this._addIndex*n,1,n);for(let e=n,t=n+n;e!==t;++e)if(r[e]!==r[e+n]){s.setValue(r,i);break}}saveOriginalState(){const e=this.binding,n=this.buffer,r=this.valueSize,i=r*this._origIndex;e.getValue(n,i);for(let e=r,t=i;e!==t;++e)n[e]=n[i+e%r];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){var e=3*this.valueSize;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){var t=this._addIndex*this.valueSize,n=t+this.valueSize;for(let e=t;e<n;e++)this.buffer[e]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){var t=this._origIndex*this.valueSize,n=this._addIndex*this.valueSize;for(let e=0;e<this.valueSize;e++)this.buffer[n+e]=this.buffer[t+e]}_select(t,n,r,e,i){if(.5<=e)for(let e=0;e!==i;++e)t[n+e]=t[r+e]}_slerp(e,t,n,r){ar.slerpFlat(e,t,e,t,e,n,r)}_slerpAdditive(e,t,n,r,i){i=this._workIndex*i;ar.multiplyQuaternionsFlat(e,i,e,t,e,n),ar.slerpFlat(e,t,e,t,e,i,r)}_lerp(t,n,r,i,a){var s=1-i;for(let e=0;e!==a;++e){var o=n+e;t[o]=t[o]*s+t[r+e]*i}}_lerpAdditive(t,n,r,i,a){for(let e=0;e!==a;++e){var s=n+e;t[s]=t[s]+t[r+e]*i}}}var od="\\[\\]\\.:\\/";const ld=new RegExp("["+od+"]","g");var hd="[^"+od+"]",n="[^"+od.replace("\\.","")+"]",t=/((?:WC+[\/:])*)/.source.replace("WC",hd),od=/(WCOD+)?/.source.replace("WCOD",n),n=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",hd),hd=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",hd);const cd=new RegExp("^"+t+od+n+hd+"$"),ud=["material","materials","bones"];class dd{constructor(e,t,n){this.path=t,this.parsedPath=n||dd.parseTrackName(t),this.node=dd.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return new(e&&e.isAnimationObjectGroup?dd.Composite:dd)(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(ld,"")}static parseTrackName(e){var t=cd.exec(e);if(!t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]};var r=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==r&&-1!==r&&(t=n.nodeName.substring(r+1),-1!==ud.indexOf(t)&&(n.nodeName=n.nodeName.substring(0,r),n.objectName=t)),null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,r){if(!r||""===r||"."===r||-1===r||r===e.name||r===e.uuid)return e;if(e.skeleton){var t=e.skeleton.getBoneByName(r);if(void 0!==t)return t}if(e.children){const i=function(t){for(let e=0;e<t.length;e++){var n=t[e];if(n.name===r||n.uuid===r)return n;n=i(n.children);if(n)return n}return null};e=i(e.children);if(e)return e}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.node[this.propertyName]}_getValue_array(n,r){var i=this.resolvedProperty;for(let e=0,t=i.length;e!==t;++e)n[r++]=i[e]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(n,r){const i=this.resolvedProperty;for(let e=0,t=i.length;e!==t;++e)i[e]=n[r++]}_setValue_array_setNeedsUpdate(n,r){const i=this.resolvedProperty;for(let e=0,t=i.length;e!==t;++e)i[e]=n[r++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(n,r){const i=this.resolvedProperty;for(let e=0,t=i.length;e!==t;++e)i[e]=n[r++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let n=this.node;var e=this.parsedPath,r=e.objectName,i=e.propertyName;let a=e.propertyIndex;if(n||(n=dd.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=n),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,n){if(r){let t=e.objectIndex;switch(r){case"materials":if(!n.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!n.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);n=n.material.materials;break;case"bones":if(!n.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);n=n.skeleton.bones;for(let e=0;e<n.length;e++)if(n[e].name===t){t=e;break}break;default:if(void 0===n[r])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);n=n[r]}if(void 0!==t){if(void 0===n[t])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,n);n=n[t]}}var s=n[i];if(void 0!==s){let e=this.Versioning.None;this.targetObject=n,void 0!==n.needsUpdate?e=this.Versioning.NeedsUpdate:void 0!==n.matrixWorldNeedsUpdate&&(e=this.Versioning.MatrixWorldNeedsUpdate);let t=this.BindingType.Direct;if(void 0!==a){if("morphTargetInfluences"===i){if(!n.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!n.geometry.isBufferGeometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);if(!n.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==n.morphTargetDictionary[a]&&(a=n.morphTargetDictionary[a])}t=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=a}else void 0!==s.fromArray&&void 0!==s.toArray?(t=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(t=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=i;this.getValue=this.GetterByBindingType[t],this.setValue=this.SetterByBindingTypeAndVersioning[t][e]}else{e=e.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+e+"."+i+" but it wasn't found.",n)}}else console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.")}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}dd.Composite=class{constructor(e,t,n){n=n||dd.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,n)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,r=this._bindings[n];void 0!==r&&r.getValue(e,t)}setValue(n,r){const i=this._bindings;for(let e=this._targetGroup.nCachedObjects_,t=i.length;e!==t;++e)i[e].setValue(n,r)}bind(){const n=this._bindings;for(let e=this._targetGroup.nCachedObjects_,t=n.length;e!==t;++e)n[e].bind()}unbind(){const n=this._bindings;for(let e=this._targetGroup.nCachedObjects_,t=n.length;e!==t;++e)n[e].unbind()}},dd.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},dd.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},dd.prototype.GetterByBindingType=[dd.prototype._getValue_direct,dd.prototype._getValue_array,dd.prototype._getValue_arrayElement,dd.prototype._getValue_toArray],dd.prototype.SetterByBindingTypeAndVersioning=[[dd.prototype._setValue_direct,dd.prototype._setValue_direct_setNeedsUpdate,dd.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[dd.prototype._setValue_array,dd.prototype._setValue_array_setNeedsUpdate,dd.prototype._setValue_array_setMatrixWorldNeedsUpdate],[dd.prototype._setValue_arrayElement,dd.prototype._setValue_arrayElement_setNeedsUpdate,dd.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[dd.prototype._setValue_fromArray,dd.prototype._setValue_fromArray_setNeedsUpdate,dd.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class pd{constructor(){this.uuid=Gn(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const n={};this._indicesByUUID=n;for(let e=0,t=arguments.length;e!==t;++e)n[arguments[e].uuid]=e;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}add(){const r=this._objects,i=this._indicesByUUID,a=this._paths,s=this._parsedPaths,o=this._bindings,l=o.length;let h=void 0,c=r.length,u=this.nCachedObjects_;for(let e=0,t=arguments.length;e!==t;++e){var d=arguments[e],p=d.uuid;let n=i[p];if(void 0===n){n=c++,i[p]=n,r.push(d);for(let e=0,t=l;e!==t;++e)o[e].push(new dd(d,a[e],s[e]))}else if(n<u){h=r[n];var m=--u,f=r[m];i[f.uuid]=n,r[n]=f,i[p]=m,r[m]=d;for(let t=0,e=l;t!==e;++t){const g=o[t],v=g[m];let e=g[n];g[n]=v,void 0===e&&(e=new dd(d,a[t],s[t])),g[m]=e}}else r[n]!==h&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=u}remove(){const n=this._objects,r=this._indicesByUUID,i=this._bindings,a=i.length;let s=this.nCachedObjects_;for(let e=0,t=arguments.length;e!==t;++e){var o=arguments[e],l=o.uuid,h=r[l];if(void 0!==h&&h>=s){var c=s++,u=n[c];r[u.uuid]=h,n[h]=u,r[l]=c,n[c]=o;for(let e=0,t=a;e!==t;++e){const d=i[e],p=d[c],m=d[h];d[h]=p,d[c]=m}}}this.nCachedObjects_=s}uncache(){const n=this._objects,r=this._indicesByUUID,i=this._bindings,a=i.length;let s=this.nCachedObjects_,o=n.length;for(let e=0,t=arguments.length;e!==t;++e){var l=arguments[e].uuid,h=r[l];if(void 0!==h)if(delete r[l],h<s){var c=--s,l=n[c],u=--o,d=n[u];r[l.uuid]=h,n[h]=l,r[d.uuid]=c,n[c]=d,n.pop();for(let e=0,t=a;e!==t;++e){const m=i[e],f=m[c],g=m[u];m[h]=f,m[c]=g,m.pop()}}else{var p=--o,d=n[p];0<p&&(r[d.uuid]=h),n[h]=d,n.pop();for(let e=0,t=a;e!==t;++e){const v=i[e];v[h]=v[p],v.pop()}}}this.nCachedObjects_=s}subscribe_(n,r){const e=this._bindingsIndicesByPath;let t=e[n];const i=this._bindings;if(void 0!==t)return i[t];const a=this._paths,s=this._parsedPaths,o=this._objects,l=o.length,h=this.nCachedObjects_,c=new Array(l);t=i.length,e[n]=t,a.push(n),s.push(r),i.push(c);for(let e=h,t=o.length;e!==t;++e){var u=o[e];c[e]=new dd(u,n,r)}return c}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(void 0!==n){const r=this._paths,i=this._parsedPaths,a=this._bindings,s=a.length-1,o=a[s],l=e[s];t[l]=n,a[n]=o,a.pop(),i[n]=i[s],i.pop(),r[n]=r[s],r.pop()}}}pd.prototype.isAnimationObjectGroup=!0;class md{constructor(e,t,n=null,r=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=r;const i=t.tracks,a=i.length,s=new Array(a);var o={endingStart:Vt,endingEnd:Vt};for(let e=0;e!==a;++e){const l=i[e].createInterpolant(null);s[e]=l,l.settings=o}this._interpolantSettings=o,this._interpolants=s,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Ot,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){var r,i;return e.fadeOut(t),this.fadeIn(t),n&&(n=(r=this._clip.duration)/(i=e._clip.duration),e.warp(1,i/r,t),this.warp(n,1,t)),this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){var e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const r=this._mixer,i=r.time,a=this.timeScale;let s=this._timeScaleInterpolant;null===s&&(s=r._lendControlInterpolant(),this._timeScaleInterpolant=s);const o=s.parameterPositions,l=s.sampleValues;return o[0]=i,o[1]=i+n,l[0]=e/a,l[1]=t/a,this}stopWarping(){var e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,r){if(this.enabled){var i=this._startTime;if(null!==i){i=(e-i)*n;if(i<0||0===n)return;this._startTime=null,t=n*i}t*=this._updateTimeScale(e);var a=this._updateTime(t),s=this._updateWeight(e);if(0<s){const o=this._interpolants,l=this._propertyBindings;switch(this.blendMode){case qt:for(let e=0,t=o.length;e!==t;++e)o[e].evaluate(a),l[e].accumulateAdditive(s);break;case jt:default:for(let e=0,t=o.length;e!==t;++e)o[e].evaluate(a),l[e].accumulate(r,s)}}}else this._updateWeight(e)}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const r=this._weightInterpolant;var n;null!==r&&(n=r.evaluate(e)[0],t*=n,e>r.parameterPositions[1]&&(this.stopFading(),0===n&&(this.enabled=!1)))}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const r=this._timeScaleInterpolant;var n;null!==r&&(n=r.evaluate(e)[0],t*=n,e>r.parameterPositions[1]&&(this.stopWarping(),0===t?this.paused=!0:this.timeScale=t))}return this._effectiveTimeScale=t,t}_updateTime(e){var t=this._clip.duration,n=this.loop;let r=this.time+e,i=this._loopCount;var a,s=n===Ft;if(0===e)return-1!==i&&s&&1==(1&i)?t-r:r;if(n===Bt){-1===i&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(r>=t)r=t;else{if(!(r<0)){this.time=r;break e}r=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else if(-1===i&&(0<=e?(i=0,this._setEndings(!0,0===this.repetitions,s)):this._setEndings(0===this.repetitions,!0,s)),r>=t||r<0?(a=Math.floor(r/t),r-=t*a,i+=Math.abs(a),(n=this.repetitions-i)<=0?(this.clampWhenFinished?this.paused=!0:this.enabled=!1,r=0<e?t:0,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:0<e?1:-1})):(1==n?this._setEndings(n=e<0,!n,s):this._setEndings(!1,!1,s),this._loopCount=i,this.time=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a}))):this.time=r,s&&1==(1&i))return t-r;return r}_setEndings(e,t,n){const r=this._interpolantSettings;n?(r.endingStart=kt,r.endingEnd=kt):(r.endingStart=e?this.zeroSlopeAtStart?kt:Vt:Wt,r.endingEnd=t?this.zeroSlopeAtEnd?kt:Vt:Wt)}_scheduleFading(e,t,n){const r=this._mixer,i=r.time;let a=this._weightInterpolant;null===a&&(a=r._lendControlInterpolant(),this._weightInterpolant=a);const s=a.parameterPositions,o=a.sampleValues;return s[0]=i,o[0]=t,s[1]=i+e,o[1]=n,this}}class fd extends Bn{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,n){const r=e._localRoot||this._root,i=e._clip.tracks,a=i.length,s=e._propertyBindings,o=e._interpolants,l=r.uuid,t=this._bindingsByRootAndName;let h=t[l];void 0===h&&(h={},t[l]=h);for(let t=0;t!==a;++t){const u=i[t],d=u.name;let e=h[d];if(void 0!==e)s[t]=e;else{if(e=s[t],void 0!==e){null===e._cacheIndex&&(++e.referenceCount,this._addInactiveBinding(e,l,d));continue}var c=n&&n._propertyBindings[t].binding.parsedPath;e=new sd(dd.create(r,d,c),u.ValueTypeName,u.getValueSize()),++e.referenceCount,this._addInactiveBinding(e,l,d),s[t]=e}o[t].resultBuffer=e.buffer}}_activateAction(e){if(!this._isActiveAction(e)){var t,n,r;null===e._cacheIndex&&(t=(e._localRoot||this._root).uuid,n=e._clip.uuid,r=this._actionsByClip[n],this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,n,t));var i=e._propertyBindings;for(let e=0,t=i.length;e!==t;++e){const a=i[e];0==a.useCount++&&(this._lendBinding(a),a.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){var n=e._propertyBindings;for(let e=0,t=n.length;e!==t;++e){const r=n[e];0==--r.useCount&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){e=e._cacheIndex;return null!==e&&e<this._nActiveActions}_addInactiveAction(e,t,n){const r=this._actions,i=this._actionsByClip;let a=i[t];if(void 0===a)a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,i[t]=a;else{const s=a.knownActions;e._byClipCacheIndex=s.length,s.push(e)}e._cacheIndex=r.length,r.push(e),a.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],r=e._cacheIndex;n._cacheIndex=r,t[r]=n,t.pop(),e._cacheIndex=null;const i=e._clip.uuid,a=this._actionsByClip,s=a[i],o=s.knownActions,l=o[o.length-1],h=e._byClipCacheIndex;l._byClipCacheIndex=h,o[h]=l,o.pop(),e._byClipCacheIndex=null;const c=s.actionByRoot,u=(e._localRoot||this._root).uuid;delete c[u],0===o.length&&delete a[i],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){var n=e._propertyBindings;for(let e=0,t=n.length;e!==t;++e){const r=n[e];0==--r.referenceCount&&this._removeInactiveBinding(r)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,r=this._nActiveActions++,i=t[r];e._cacheIndex=r,t[r]=e,i._cacheIndex=n,t[n]=i}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,r=--this._nActiveActions,i=t[r];e._cacheIndex=r,t[r]=e,i._cacheIndex=n,t[n]=i}_addInactiveBinding(e,t,n){const r=this._bindingsByRootAndName,i=this._bindings;let a=r[t];void 0===a&&(a={},r[t]=a),(a[n]=e)._cacheIndex=i.length,i.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,r=n.rootNode.uuid,i=n.path,a=this._bindingsByRootAndName,s=a[r],o=t[t.length-1],l=e._cacheIndex;o._cacheIndex=l,t[l]=o,t.pop(),delete s[i],0===Object.keys(s).length&&delete a[r]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,r=this._nActiveBindings++,i=t[r];e._cacheIndex=r,t[r]=e,i._cacheIndex=n,t[n]=i}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,r=--this._nActiveBindings,i=t[r];e._cacheIndex=r,t[r]=e,i._cacheIndex=n,t[n]=i}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return void 0===n&&(n=new pc(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,r=--this._nActiveControlInterpolants,i=t[r];e.__cacheIndex=r,t[r]=e,i.__cacheIndex=n,t[n]=i}clipAction(e,t,n){var r=t||this._root,i=r.uuid;let a="string"==typeof e?Mc.findByName(r,e):e;var s=null!==a?a.uuid:e,r=this._actionsByClip[s];let o=null;if(void 0===n&&(n=null!==a?a.blendMode:jt),void 0!==r){e=r.actionByRoot[i];if(void 0!==e&&e.blendMode===n)return e;o=r.knownActions[0],null===a&&(a=o._clip)}if(null===a)return null;n=new md(this,a,t,n);return this._bindAction(n,o),this._addInactiveAction(n,s,i),n}existingAction(e,t){var n=t||this._root,t=n.uuid,n="string"==typeof e?Mc.findByName(n,e):e,e=n?n.uuid:e,e=this._actionsByClip[e];return void 0!==e&&e.actionByRoot[t]||null}stopAllAction(){const t=this._actions,n=this._nActiveActions;for(let e=n-1;0<=e;--e)t[e].stop();return this}update(t){t*=this.timeScale;var n=this._actions,r=this._nActiveActions,i=this.time+=t,a=Math.sign(t),s=this._accuIndex^=1;for(let e=0;e!==r;++e){const h=n[e];h._update(i,t,a,s)}const o=this._bindings,l=this._nActiveBindings;for(let e=0;e!==l;++e)o[e].apply(s);return this}setTime(e){for(let e=this.time=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const n=this._actions,t=e.uuid,r=this._actionsByClip,i=r[t];if(void 0!==i){var a=i.knownActions;for(let e=0,t=a.length;e!==t;++e){const s=a[e];this._deactivateAction(s);const o=s._cacheIndex,l=n[n.length-1];s._cacheIndex=null,s._byClipCacheIndex=null,l._cacheIndex=o,n[o]=l,n.pop(),this._removeInactiveBindingsForAction(s)}delete r[t]}}uncacheRoot(e){var t=e.uuid,n=this._actionsByClip;for(const a in n){var r=n[a].actionByRoot[t];void 0!==r&&(this._deactivateAction(r),this._removeInactiveAction(r))}var i=this._bindingsByRootAndName[t];if(void 0!==i)for(const s in i){const o=i[s];o.restoreOriginalState(),this._removeInactiveBinding(o)}}uncacheAction(e,t){t=this.existingAction(e,t);null!==t&&(this._deactivateAction(t),this._removeInactiveAction(t))}}fd.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class gd{constructor(e){"string"==typeof e&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}clone(){return new gd(void 0===this.value.clone?this.value:this.value.clone())}}class vd extends nl{constructor(e,t,n=1){super(e,t),this.meshPerAttribute=n||1}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}vd.prototype.isInstancedInterleavedBuffer=!0;class yd{constructor(e,t,n,r,i){this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=r,this.count=i,this.version=0}set needsUpdate(e){!0===e&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}yd.prototype.isGLBufferAttribute=!0;class xd{constructor(e,t,n=0,r=1/0){this.ray=new Br(e,t),this.near=n,this.far=r,this.camera=null,this.layers=new Yr,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t&&t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t&&t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!1,n=[]){return bd(e,this,n,t),n.sort(_d),n}intersectObjects(n,r=!1,i=[]){for(let e=0,t=n.length;e<t;e++)bd(n[e],this,i,r);return i.sort(_d),i}}function _d(e,t){return e.distance-t.distance}function bd(e,n,r,t){if(e.layers.test(n.layers)&&e.raycast(n,r),!0===t){var i=e.children;for(let e=0,t=i.length;e<t;e++)bd(i[e],n,r,!0)}}class wd{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(Vn(t/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}}class Md{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return(new this.constructor).copy(this)}}const Sd=new Zn;class Td{constructor(e=new Zn(1/0,1/0),t=new Zn(-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(n){this.makeEmpty();for(let e=0,t=n.length;e<t;e++)this.expandByPoint(n[e]);return this}setFromCenterAndSize(e,t){t=Sd.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(t),this.max.copy(e).add(t),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return void 0===e&&(console.warn("THREE.Box2: .getCenter() target is now required"),e=new Zn),this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return void 0===e&&(console.warn("THREE.Box2: .getSize() target is now required"),e=new Zn),this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return void 0===t&&(console.warn("THREE.Box2: .getParameter() target is now required"),t=new Zn),t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return void 0===t&&(console.warn("THREE.Box2: .clampPoint() target is now required"),t=new Zn),t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){const t=Sd.copy(e).clamp(this.min,this.max);return t.sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}Td.prototype.isBox2=!0;const Ed=new sr,Ad=new sr;class Ld{constructor(e=new sr,t=new sr){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return void 0===e&&(console.warn("THREE.Line3: .getCenter() target is now required"),e=new sr),e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return void 0===e&&(console.warn("THREE.Line3: .delta() target is now required"),e=new sr),e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return void 0===t&&(console.warn("THREE.Line3: .at() target is now required"),t=new sr),this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){Ed.subVectors(e,this.start),Ad.subVectors(this.end,this.start);e=Ad.dot(Ad);let n=Ad.dot(Ed)/e;return t&&(n=Vn(n,0,1)),n}closestPointToPoint(e,t,n){t=this.closestPointToPointParameter(e,t);return void 0===n&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),n=new sr),this.delta(n).multiplyScalar(t).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return(new this.constructor).copy(this)}}class Rd extends li{constructor(e){super(),this.material=e,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}}Rd.prototype.isImmediateRenderObject=!0;const Cd=new sr;class Pd extends li{constructor(e,t){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t;const n=new ra,r=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let e=0,t=1;e<32;e++,t++){var i=e/32*Math.PI*2,a=t/32*Math.PI*2;r.push(Math.cos(i),Math.sin(i),1,Math.cos(a),Math.sin(a),1)}n.setAttribute("position",new ji(r,3));t=new Hl({fog:!1,toneMapped:!1});this.cone=new Yl(n,t),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();var e=this.light.distance||1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),Cd.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(Cd),void 0!==this.color?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Dd=new sr,Id=new Or,Nd=new Or;class zd extends Yl{constructor(e){var t=function t(n){const r=[];n&&n.isBone&&r.push(n);for(let e=0;e<n.children.length;e++)r.push.apply(r,t(n.children[e]));return r}(e);const n=new ra,r=[],i=[];var a=new Di(0,0,1),s=new Di(0,1,0);for(let e=0;e<t.length;e++){var o=t[e];o.parent&&o.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),i.push(a.r,a.g,a.b),i.push(s.r,s.g,s.b))}n.setAttribute("position",new ji(r,3)),n.setAttribute("color",new ji(i,3));var l=new Hl({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,l),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){var n=this.bones;const t=this.geometry,r=t.getAttribute("position");Nd.copy(this.root.matrixWorld).invert();for(let e=0,t=0;e<n.length;e++){var i=n[e];i.parent&&i.parent.isBone&&(Id.multiplyMatrices(Nd,i.matrixWorld),Dd.setFromMatrixPosition(Id),r.setXYZ(t,Dd.x,Dd.y,Dd.z),Id.multiplyMatrices(Nd,i.parent.matrixWorld),Dd.setFromMatrixPosition(Id),r.setXYZ(t+1,Dd.x,Dd.y,Dd.z),t+=2)}t.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}class Bd extends ba{constructor(e,t,n){super(new jh(t,4,2),new Ii({wireframe:!0,fog:!1,toneMapped:!1})),this.light=e,this.light.updateMatrixWorld(),this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){void 0!==this.color?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const Od=new sr,Fd=new Di,Hd=new Di;class Ud extends li{constructor(e,t,n){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n;const r=new Gh(t);r.rotateY(.5*Math.PI),this.material=new Ii({wireframe:!0,fog:!1,toneMapped:!1}),void 0===this.color&&(this.material.vertexColors=!0);t=r.getAttribute("position"),t=new Float32Array(3*t.count);r.setAttribute("color",new Bi(t,3)),this.add(new ba(r,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(void 0!==this.color)this.material.color.set(this.color);else{const r=e.geometry.getAttribute("color");Fd.copy(this.light.color),Hd.copy(this.light.groundColor);for(let e=0,t=r.count;e<t;e++){var n=e<t/2?Fd:Hd;r.setXYZ(e,n.r,n.g,n.b)}r.needsUpdate=!0}e.lookAt(Od.setFromMatrixPosition(this.light.matrixWorld).negate())}}class Gd extends Yl{constructor(e=10,r=10,i=4473924,a=8947848){i=new Di(i),a=new Di(a);var s=r/2,o=e/r,l=e/2;const h=[],c=[];for(let e=0,t=0,n=-l;e<=r;e++,n+=o){h.push(-l,0,n,l,0,n),h.push(n,0,-l,n,0,l);const u=e===s?i:a;u.toArray(c,t),t+=3,u.toArray(c,t),t+=3,u.toArray(c,t),t+=3,u.toArray(c,t),t+=3}const t=new ra;t.setAttribute("position",new ji(h,3)),t.setAttribute("color",new ji(c,3));e=new Hl({vertexColors:!0,toneMapped:!1});super(t,e),this.type="GridHelper"}}class Vd extends Yl{constructor(t=10,n=16,r=8,i=64,a=4473924,s=8947848){a=new Di(a),s=new Di(s);const o=[],l=[];for(let e=0;e<=n;e++){var h=e/n*(2*Math.PI),c=Math.sin(h)*t,h=Math.cos(h)*t;o.push(0,0,0),o.push(c,0,h);h=1&e?a:s;l.push(h.r,h.g,h.b),l.push(h.r,h.g,h.b)}for(let e=0;e<=r;e++){var u=1&e?a:s,d=t-t/r*e;for(let e=0;e<i;e++){var p=e/i*(2*Math.PI),m=Math.sin(p)*d,f=Math.cos(p)*d;o.push(m,0,f),l.push(u.r,u.g,u.b),p=(e+1)/i*(2*Math.PI),m=Math.sin(p)*d,f=Math.cos(p)*d,o.push(m,0,f),l.push(u.r,u.g,u.b)}}const e=new ra;e.setAttribute("position",new ji(o,3)),e.setAttribute("color",new ji(l,3));var g=new Hl({vertexColors:!0,toneMapped:!1});super(e,g),this.type="PolarGridHelper"}}const kd=new sr,Wd=new sr,jd=new sr;class qd extends li{constructor(e,t,n){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,void 0===t&&(t=1);let r=new ra;r.setAttribute("position",new ji([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));t=new Hl({fog:!1,toneMapped:!1});this.lightPlane=new jl(r,t),this.add(this.lightPlane),r=new ra,r.setAttribute("position",new ji([0,0,0,0,0,1],3)),this.targetLine=new jl(r,t),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){kd.setFromMatrixPosition(this.light.matrixWorld),Wd.setFromMatrixPosition(this.light.target.matrixWorld),jd.subVectors(Wd,kd),this.lightPlane.lookAt(Wd),void 0!==this.color?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Wd),this.targetLine.scale.z=jd.length()}}const Xd=new sr,Yd=new La;class Zd extends Yl{constructor(e){const t=new ra;var n=new Hl({color:16777215,vertexColors:!0,toneMapped:!1});const r=[],i=[],a={};var s=new Di(16755200),o=new Di(16711680),l=new Di(43775),h=new Di(16777215),c=new Di(3355443);function u(e,t,n){d(e,n),d(t,n)}function d(e,t){r.push(0,0,0),i.push(t.r,t.g,t.b),void 0===a[e]&&(a[e]=[]),a[e].push(r.length/3-1)}u("n1","n2",s),u("n2","n4",s),u("n4","n3",s),u("n3","n1",s),u("f1","f2",s),u("f2","f4",s),u("f4","f3",s),u("f3","f1",s),u("n1","f1",s),u("n2","f2",s),u("n3","f3",s),u("n4","f4",s),u("p","n1",o),u("p","n2",o),u("p","n3",o),u("p","n4",o),u("u1","u2",l),u("u2","u3",l),u("u3","u1",l),u("c","t",h),u("p","c",c),u("cn1","cn2",c),u("cn3","cn4",c),u("cf1","cf2",c),u("cf3","cf4",c),t.setAttribute("position",new ji(r,3)),t.setAttribute("color",new ji(i,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update()}update(){const e=this.geometry;var t=this.pointMap;Yd.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),Jd("c",t,e,Yd,0,0,-1),Jd("t",t,e,Yd,0,0,1),Jd("n1",t,e,Yd,-1,-1,-1),Jd("n2",t,e,Yd,1,-1,-1),Jd("n3",t,e,Yd,-1,1,-1),Jd("n4",t,e,Yd,1,1,-1),Jd("f1",t,e,Yd,-1,-1,1),Jd("f2",t,e,Yd,1,-1,1),Jd("f3",t,e,Yd,-1,1,1),Jd("f4",t,e,Yd,1,1,1),Jd("u1",t,e,Yd,.7,1.1,-1),Jd("u2",t,e,Yd,-.7,1.1,-1),Jd("u3",t,e,Yd,0,2,-1),Jd("cf1",t,e,Yd,-1,0,1),Jd("cf2",t,e,Yd,1,0,1),Jd("cf3",t,e,Yd,0,-1,1),Jd("cf4",t,e,Yd,0,1,1),Jd("cn1",t,e,Yd,-1,0,-1),Jd("cn2",t,e,Yd,1,0,-1),Jd("cn3",t,e,Yd,0,-1,-1),Jd("cn4",t,e,Yd,0,1,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function Jd(e,t,n,r,i,a,s){Xd.set(i,a,s).unproject(r);var o=t[e];if(void 0!==o){const l=n.getAttribute("position");for(let e=0,t=o.length;e<t;e++)l.setXYZ(o[e],Xd.x,Xd.y,Xd.z)}}const Qd=new hr;class Kd extends Yl{constructor(e,t=16776960){var n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Float32Array(24);const i=new ra;i.setIndex(new Bi(n,1)),i.setAttribute("position",new Bi(r,3)),super(i,new Hl({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(void 0!==e&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),void 0!==this.object&&Qd.setFromObject(this.object),!Qd.isEmpty()){var t=Qd.min,e=Qd.max;const n=this.geometry.attributes.position,r=n.array;r[0]=e.x,r[1]=e.y,r[2]=e.z,r[3]=t.x,r[4]=e.y,r[5]=e.z,r[6]=t.x,r[7]=t.y,r[8]=e.z,r[9]=e.x,r[10]=t.y,r[11]=e.z,r[12]=e.x,r[13]=e.y,r[14]=t.z,r[15]=t.x,r[16]=e.y,r[17]=t.z,r[18]=t.x,r[19]=t.y,r[20]=t.z,r[21]=e.x,r[22]=t.y,r[23]=t.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()}}setFromObject(e){return this.object=e,this.update(),this}copy(e){return Yl.prototype.copy.call(this,e),this.object=e.object,this}}class $d extends Yl{constructor(e,t=16776960){var n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]);const r=new ra;r.setIndex(new Bi(n,1)),r.setAttribute("position",new ji([1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],3)),super(r,new Hl({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}}class ep extends jl{constructor(e,t=1,n=16776960){const r=new ra;r.setAttribute("position",new ji([1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],3)),r.computeBoundingSphere(),super(r,new Hl({color:n,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const i=new ra;i.setAttribute("position",new ji([1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],3)),i.computeBoundingSphere(),this.add(new ba(i,new Ii({color:n,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){let t=-this.plane.constant;Math.abs(t)<1e-8&&(t=1e-8),this.scale.set(.5*this.size,.5*this.size,t),this.children[0].material.side=t<0?X:R,this.lookAt(this.plane.normal),super.updateMatrixWorld(e)}}const tp=new sr;let np,rp;class ip extends li{constructor(e=new sr(0,0,1),t=new sr(0,0,0),n=1,r=16776960,i=.2*n,a=.2*i){super(),this.type="ArrowHelper",void 0===np&&(np=new ra,np.setAttribute("position",new ji([0,0,0,0,1,0],3)),rp=new lh(0,.5,1,5,1),rp.translate(0,-.5,0)),this.position.copy(t),this.line=new jl(np,new Hl({color:r,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new ba(rp,new Ii({color:r,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,i,a)}setDirection(e){.99999<e.y?this.quaternion.set(0,0,0,1):e.y<-.99999?this.quaternion.set(1,0,0,0):(tp.set(e.z,0,-e.x).normalize(),e=Math.acos(e.y),this.quaternion.setFromAxisAngle(tp,e))}setLength(e,t=.2*e,n=.2*t){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}}class ap extends Yl{constructor(e=1){e=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e];const t=new ra;t.setAttribute("position",new ji(e,3)),t.setAttribute("color",new ji([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],3));e=new Hl({vertexColors:!0,toneMapped:!1});super(t,e),this.type="AxesHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const sp=new Float32Array(1),op=new Int32Array(sp.buffer);class lp{static toHalfFloat(e){sp[0]=e;var t=op[0];let n=t>>16&32768,r=t>>12&2047;e=t>>23&255;return e<103||(142<e?(n|=31744,n|=(255==e?0:1)&&8388607&t):e<113?(r|=2048,n|=(r>>114-e)+(r>>113-e&1)):(n|=e-112<<10|r>>1,n+=1&r)),n}}const hp=Math.pow(2,8),cp=[.125,.215,.35,.446,.526,.582],up=5+cp.length,dp={[Jt]:0,[Qt]:1,[$t]:2,[tn]:3,[nn]:4,[rn]:5,[Kt]:6},pp=new Ii({side:X,depthWrite:!1,depthTest:!1}),mp=new ba(new Ma,pp),fp=new yu,{_lodPlanes:gp,_sizeLods:vp,_sigmas:yp}=Sp(),xp=new Di;let _p=null;n=(1+Math.sqrt(5))/2,hd=1/n;const bp=[new sr(1,1,1),new sr(-1,1,1),new sr(1,1,-1),new sr(-1,1,-1),new sr(0,n,hd),new sr(0,n,-hd),new sr(hd,0,n),new sr(-hd,0,n),new sr(n,hd,0),new sr(-n,hd,0)];function wp(e){var t=Math.max(e.r,e.g,e.b),t=Math.min(Math.max(Math.ceil(Math.log2(t)),-128),127);return e.multiplyScalar(Math.pow(2,-t)),(t+128)/255}class Mp{constructor(e){var t,n;this._renderer=e,this._pingPongRenderTarget=null,this._blurMaterial=(t=20,n=new Float32Array(t),e=new sr(0,1,0),e=new ec({name:"SphericalGaussianBlur",defines:{n:t},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:e},inputEncoding:{value:dp[Jt]},outputEncoding:{value:dp[Jt]}},vertexShader:Rp(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			${Cp()}

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:Z,depthTest:!1,depthWrite:!1})),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,r=100){_p=this._renderer.getRenderTarget();var i=this._allocateTargets();return this._sceneToCubeUV(e,n,r,i),0<t&&this._blur(i,0,0,t),this._applyPMREM(i),this._cleanup(i),i}fromEquirectangular(e){return this._fromTexture(e)}fromCubemap(e){return this._fromTexture(e)}compileCubemapShader(){null===this._cubemapShader&&(this._cubemapShader=Lp(),this._compileMaterial(this._cubemapShader))}compileEquirectangularShader(){null===this._equirectShader&&(this._equirectShader=Ap(),this._compileMaterial(this._equirectShader))}dispose(){this._blurMaterial.dispose(),null!==this._cubemapShader&&this._cubemapShader.dispose(),null!==this._equirectShader&&this._equirectShader.dispose();for(let e=0;e<gp.length;e++)gp[e].dispose()}_cleanup(e){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(_p),e.scissorTest=!1,Ep(e,0,0,e.width,e.height)}_fromTexture(e){_p=this._renderer.getRenderTarget();var t=this._allocateTargets(e);return this._textureToCubeUV(e,t),this._applyPMREM(t),this._cleanup(t),t}_allocateTargets(e){var t,t={magFilter:V,minFilter:V,generateMipmaps:!1,type:Ce,format:Ge,encoding:void 0===(t=e)||t.type!==Ce||t.encoding!==Jt&&t.encoding!==Qt&&t.encoding!==Kt?$t:e.encoding,depthBuffer:!1};const n=Tp(t);return n.depthBuffer=!e,this._pingPongRenderTarget=Tp(t),n}_compileMaterial(e){e=new ba(gp[0],e);this._renderer.compile(e,fp)}_sceneToCubeUV(t,e,n,r){const i=new Ra(90,1,e,n);var a=[1,-1,1,1,1,1],s=[1,1,1,-1,-1,-1];const o=this._renderer;var l=o.autoClear,h=o.outputEncoding,e=o.toneMapping;o.getClearColor(xp),o.toneMapping=Ee,o.outputEncoding=Jt;let c=o.autoClear=!1;var u,n=t.background;n?n.isColor&&(pp.color.copy(n).convertSRGBToLinear(),t.background=null,u=wp(pp.color),pp.opacity=u,c=!0):(pp.color.copy(xp).convertSRGBToLinear(),u=wp(pp.color),pp.opacity=u,c=!0);for(let e=0;e<6;e++){var d=e%3;0==d?(i.up.set(0,a[e],0),i.lookAt(s[e],0,0)):1==d?(i.up.set(0,0,a[e]),i.lookAt(0,s[e],0)):(i.up.set(0,a[e],0),i.lookAt(0,0,s[e])),Ep(r,d*hp,2<e?hp:0,hp,hp),o.setRenderTarget(r),c&&o.render(mp,i),o.render(t,i)}o.toneMapping=e,o.outputEncoding=h,o.autoClear=l}_textureToCubeUV(e,t){const n=this._renderer;e.isCubeTexture?null==this._cubemapShader&&(this._cubemapShader=Lp()):null==this._equirectShader&&(this._equirectShader=Ap());var r=e.isCubeTexture?this._cubemapShader:this._equirectShader,i=new ba(gp[0],r);const a=r.uniforms;(a.envMap.value=e).isCubeTexture||a.texelSize.value.set(1/e.image.width,1/e.image.height),a.inputEncoding.value=dp[e.encoding],a.outputEncoding.value=dp[t.texture.encoding],Ep(t,0,0,3*hp,2*hp),n.setRenderTarget(t),n.render(i,fp)}_applyPMREM(t){const e=this._renderer;var n=e.autoClear;e.autoClear=!1;for(let e=1;e<up;e++){var r=Math.sqrt(yp[e]*yp[e]-yp[e-1]*yp[e-1]),i=bp[(e-1)%bp.length];this._blur(t,e-1,e,r,i)}e.autoClear=n}_blur(e,t,n,r,i){var a=this._pingPongRenderTarget;this._halfBlur(e,a,t,n,r,"latitudinal",i),this._halfBlur(a,e,n,n,r,"longitudinal",i)}_halfBlur(e,t,n,r,i,a,s){const o=this._renderer;var l=this._blurMaterial;"latitudinal"!==a&&"longitudinal"!==a&&console.error("blur direction must be either latitudinal or longitudinal!");var h=new ba(gp[r],l);const c=l.uniforms;var l=vp[n]-1,l=isFinite(i)?Math.PI/(2*l):2*Math.PI/39,u=i/l,d=isFinite(i)?1+Math.floor(3*u):20;20<d&&console.warn(`sigmaRadians, ${i}, is too large and will clip, as it requested ${d} samples when the maximum is set to 20`);const p=[];let m=0;for(let e=0;e<20;++e){const g=e/u;var f=Math.exp(-g*g/2);p.push(f),0==e?m+=f:e<d&&(m+=2*f)}for(let e=0;e<p.length;e++)p[e]=p[e]/m;c.envMap.value=e.texture,c.samples.value=d,c.weights.value=p,c.latitudinal.value="latitudinal"===a,s&&(c.poleAxis.value=s),c.dTheta.value=l,c.mipInt.value=8-n,c.inputEncoding.value=dp[e.texture.encoding],c.outputEncoding.value=dp[e.texture.encoding];e=vp[r];const g=3*Math.max(0,hp-2*e);r=(0===r?0:2*hp)+2*e*(4<r?r-8+4:0);Ep(t,g,r,3*e,2*e),o.setRenderTarget(t),o.render(h,fp)}}function Sp(){const n=[],r=[],i=[];let a=8;for(let t=0;t<up;t++){var s=Math.pow(2,a);r.push(s);let e=1/s;4<t?e=cp[t-8+4-1]:0==t&&(e=0),i.push(e);var o=1/(s-1),s=-o/2,o=1+o/2,l=[s,s,o,s,o,o,s,s,o,o,s,o];const u=new Float32Array(108),d=new Float32Array(72),p=new Float32Array(36);for(let e=0;e<6;e++){var h=e%3*2/3-1,c=2<e?0:-1;u.set([h,c,0,h+2/3,c,0,h+2/3,1+c,0,h,c,0,h+2/3,1+c,0,h,1+c,0],18*e),d.set(l,12*e);c=[e,e,e,e,e,e];p.set(c,6*e)}const m=new ra;m.setAttribute("position",new Bi(u,3)),m.setAttribute("uv",new Bi(d,2)),m.setAttribute("faceIndex",new Bi(p,1)),n.push(m),4<a&&a--}return{_lodPlanes:n,_sizeLods:r,_sigmas:i}}function Tp(e){const t=new rr(3*hp,3*hp,e);return t.texture.mapping=O,t.texture.name="PMREM.cubeUv",t.scissorTest=!0,t}function Ep(e,t,n,r,i){e.viewport.set(t,n,r,i),e.scissor.set(t,n,r,i)}function Ap(){var e=new Zn(1,1);return new ec({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:e},inputEncoding:{value:dp[Jt]},outputEncoding:{value:dp[Jt]}},vertexShader:Rp(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform vec2 texelSize;

			${Cp()}

			#include <common>

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				vec2 f = fract( uv / texelSize - 0.5 );
				uv -= f * texelSize;
				vec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x += texelSize.x;
				vec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.y += texelSize.y;
				vec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;
				uv.x -= texelSize.x;
				vec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;

				vec3 tm = mix( tl, tr, f.x );
				vec3 bm = mix( bl, br, f.x );
				gl_FragColor.rgb = mix( tm, bm, f.y );

				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:Z,depthTest:!1,depthWrite:!1})}function Lp(){return new ec({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:dp[Jt]},outputEncoding:{value:dp[Jt]}},vertexShader:Rp(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			${Cp()}

			void main() {

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;
				gl_FragColor = linearToOutputTexel( gl_FragColor );

			}
		`,blending:Z,depthTest:!1,depthWrite:!1})}function Rp(){return`

		precision mediump float;
		precision mediump int;

		attribute vec3 position;
		attribute vec2 uv;
		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function Cp(){return`

		uniform int inputEncoding;
		uniform int outputEncoding;

		#include <encodings_pars_fragment>

		vec4 inputTexelToLinear( vec4 value ) {

			if ( inputEncoding == 0 ) {

				return value;

			} else if ( inputEncoding == 1 ) {

				return sRGBToLinear( value );

			} else if ( inputEncoding == 2 ) {

				return RGBEToLinear( value );

			} else if ( inputEncoding == 3 ) {

				return RGBMToLinear( value, 7.0 );

			} else if ( inputEncoding == 4 ) {

				return RGBMToLinear( value, 16.0 );

			} else if ( inputEncoding == 5 ) {

				return RGBDToLinear( value, 256.0 );

			} else {

				return GammaToLinear( value, 2.2 );

			}

		}

		vec4 linearToOutputTexel( vec4 value ) {

			if ( outputEncoding == 0 ) {

				return value;

			} else if ( outputEncoding == 1 ) {

				return LinearTosRGB( value );

			} else if ( outputEncoding == 2 ) {

				return LinearToRGBE( value );

			} else if ( outputEncoding == 3 ) {

				return LinearToRGBM( value, 7.0 );

			} else if ( outputEncoding == 4 ) {

				return LinearToRGBM( value, 16.0 );

			} else if ( outputEncoding == 5 ) {

				return LinearToRGBD( value, 256.0 );

			} else {

				return LinearToGamma( value, 2.2 );

			}

		}

		vec4 envMapTexelToLinear( vec4 color ) {

			return inputTexelToLinear( color );

		}
	`}const Pp=0,Dp=1,Ip=0,Np=1,zp=2;Bc.create=function(e,t){return console.log("THREE.Curve.create() has been deprecated"),e.prototype=Object.create(Bc.prototype),(e.prototype.constructor=e).prototype.getPoint=t,e},ru.prototype.fromPoints=function(e){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(e)},Gd.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},zd.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},Ac.prototype.extractUrlBase=function(e){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),Eu.extractUrlBase(e)},Ac.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},Td.prototype.center=function(e){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(e)},Td.prototype.empty=function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},Td.prototype.isIntersectionBox=function(e){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},Td.prototype.size=function(e){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(e)},hr.prototype.center=function(e){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(e)},hr.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},hr.prototype.isIntersectionBox=function(e){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},hr.prototype.isIntersectionSphere=function(e){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},hr.prototype.size=function(e){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(e)},Lr.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()},Ba.prototype.setFromMatrix=function(e){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(e)},Ld.prototype.center=function(e){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(e)},Jn.prototype.flattenToArrayOffset=function(e,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},Jn.prototype.multiplyVector3=function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},Jn.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},Jn.prototype.applyToBufferAttribute=function(e){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},Jn.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},Jn.prototype.getInverse=function(e){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()},Or.prototype.extractPosition=function(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},Or.prototype.flattenToArrayOffset=function(e,t){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},Or.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new sr).setFromMatrixColumn(this,3)},Or.prototype.setRotationFromQuaternion=function(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},Or.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},Or.prototype.multiplyVector3=function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},Or.prototype.multiplyVector4=function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},Or.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},Or.prototype.rotateAxis=function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},Or.prototype.crossVector=function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},Or.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")},Or.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},Or.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},Or.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},Or.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},Or.prototype.applyToBufferAttribute=function(e){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},Or.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},Or.prototype.makeFrustum=function(e,t,n,r,i,a){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(e,t,r,n,i,a)},Or.prototype.getInverse=function(e){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()},di.prototype.isIntersectionLine=function(e){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(e)},ar.prototype.multiplyVector3=function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},ar.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()},Br.prototype.isIntersectionBox=function(e){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},Br.prototype.isIntersectionPlane=function(e){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(e)},Br.prototype.isIntersectionSphere=function(e){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},Mi.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},Mi.prototype.barycoordFromPoint=function(e,t){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(e,t)},Mi.prototype.midpoint=function(e){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(e)},Mi.prototypenormal=function(e){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(e)},Mi.prototype.plane=function(e){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(e)},Mi.barycoordFromPoint=function(e,t,n,r,i){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),Mi.getBarycoord(e,t,n,r,i)},Mi.normal=function(e,t,n,r){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),Mi.getNormal(e,t,n,r)},iu.prototype.extractAllPoints=function(e){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(e)},iu.prototype.extrude=function(e){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new Oh(this,e)},iu.prototype.makeGeometry=function(e){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new Wh(this,e)},Zn.prototype.fromAttribute=function(e,t,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},Zn.prototype.distanceToManhattan=function(e){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},Zn.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},sr.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},sr.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},sr.prototype.getPositionFromMatrix=function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},sr.prototype.getScaleFromMatrix=function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},sr.prototype.getColumnFromMatrix=function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)},sr.prototype.applyProjection=function(e){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(e)},sr.prototype.fromAttribute=function(e,t,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},sr.prototype.distanceToManhattan=function(e){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},sr.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},nr.prototype.fromAttribute=function(e,t,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},nr.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},li.prototype.getChildByName=function(e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)},li.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},li.prototype.translate=function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)},li.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},li.prototype.applyMatrix=function(e){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)},Object.defineProperties(li.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=e}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),ba.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")},Object.defineProperties(ba.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),Xt},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),Rl.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},Ra.prototype.setLens=function(e,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==t&&(this.filmGauge=t),this.setFocalLength(e)},Object.defineProperties(au.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=e}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(e){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=e}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(e){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=e}}}),Object.defineProperties(Bi.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===En},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(En)}}}),Bi.prototype.setDynamic=function(e){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?En:Tn),this},Bi.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},Bi.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},ra.prototype.addIndex=function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(e)},ra.prototype.addAttribute=function(e,t){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),t&&t.isBufferAttribute||t&&t.isInterleavedBufferAttribute?"index"===e?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(t),this):this.setAttribute(e,t):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(e,new Bi(t,arguments[2])))},ra.prototype.addDrawCall=function(e,t,n){void 0!==n&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(e,t)},ra.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},ra.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},ra.prototype.removeAttribute=function(e){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(e)},ra.prototype.applyMatrix=function(e){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)},Object.defineProperties(ra.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),nl.prototype.setDynamic=function(e){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?En:Tn),this},nl.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},Oh.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},Oh.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},Oh.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")},tl.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")},gd.prototype.onUpdate=function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this},Object.defineProperties(Ti.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new Di}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=e===l}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(e){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=e}}}),Object.defineProperties(Aa.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=e}}}),Qo.prototype.clearTarget=function(e,t,n,r){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(e),this.clear(t,n,r)},Qo.prototype.animate=function(e){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(e)},Qo.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},Qo.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},Qo.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},Qo.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},Qo.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},Qo.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},Qo.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},Qo.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},Qo.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},Qo.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},Qo.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},Qo.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},Qo.prototype.enableScissorTest=function(e){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(e)},Qo.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},Qo.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},Qo.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},Qo.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},Qo.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},Qo.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},Qo.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},Qo.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},Qo.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},Qo.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()},Object.defineProperties(Qo.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=e}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(e){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===e?Qt:Jt}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}}),Object.defineProperties(Go.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(rr.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=e}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=e}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=e}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=e}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=e}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=e}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=e}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=e}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=e}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=e}}}),$u.prototype.load=function(e){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const t=this,n=new Uu;return n.load(e,function(e){t.setBuffer(e)}),this},ad.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},Ca.prototype.updateCubeMap=function(e,t){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(e,t)},Ca.prototype.clear=function(e,t,n,r){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(e,t,n,r)},Kn.crossOrigin=void 0,Kn.loadTexture=function(e,t,n,r){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const i=new zc;i.setCrossOrigin(this.crossOrigin);const a=i.load(e,n,void 0,r);return t&&(a.mapping=t),a},Kn.loadTextureCube=function(e,t,n,r){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const i=new Ic;i.setCrossOrigin(this.crossOrigin);const a=i.load(e,n,void 0,r);return t&&(a.mapping=t),a},Kn.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},Kn.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};const Bp={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")}};"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:r}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=r)},886:(e,t,n)=>{n.r(t),n.d(t,{OrbitControls:()=>r,MapControls:()=>i});var j=n(212);const q={type:"change"},X={type:"start"},Y={type:"end"};class r extends j.EventDispatcher{constructor(e,t){super(),void 0===t&&console.warn('THREE.OrbitControls: The second parameter "domElement" is now mandatory.'),t===document&&console.error('THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),this.object=e,this.domElement=t,this.enabled=!0,this.target=new j.Vector3,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:j.MOUSE.ROTATE,MIDDLE:j.MOUSE.DOLLY,RIGHT:j.MOUSE.PAN},this.touches={ONE:j.TOUCH.ROTATE,TWO:j.TOUCH.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return p.phi},this.getAzimuthalAngle=function(){return p.theta},this.listenToKeyEvents=function(e){e.addEventListener("keydown",U),this._domElementKeyEvents=e},this.saveState=function(){h.target0.copy(h.target),h.position0.copy(h.object.position),h.zoom0=h.object.zoom},this.reset=function(){h.target.copy(h.target0),h.object.position.copy(h.position0),h.object.zoom=h.zoom0,h.object.updateProjectionMatrix(),h.dispatchEvent(q),h.update(),u=c.NONE},this.update=function(){const r=new j.Vector3,i=(new j.Quaternion).setFromUnitVectors(e.up,new j.Vector3(0,1,0)),a=i.clone().invert(),s=new j.Vector3,o=new j.Quaternion,l=2*Math.PI;return function(){const e=h.object.position;r.copy(e).sub(h.target),r.applyQuaternion(i),p.setFromVector3(r),h.autoRotate&&u===c.NONE&&b(2*Math.PI/60/60*h.autoRotateSpeed),h.enableDamping?(p.theta+=m.theta*h.dampingFactor,p.phi+=m.phi*h.dampingFactor):(p.theta+=m.theta,p.phi+=m.phi);let t=h.minAzimuthAngle,n=h.maxAzimuthAngle;return isFinite(t)&&isFinite(n)&&(t<-Math.PI?t+=l:t>Math.PI&&(t-=l),n<-Math.PI?n+=l:n>Math.PI&&(n-=l),t<=n?p.theta=Math.max(t,Math.min(n,p.theta)):p.theta=p.theta>(t+n)/2?Math.max(t,p.theta):Math.min(n,p.theta)),p.phi=Math.max(h.minPolarAngle,Math.min(h.maxPolarAngle,p.phi)),p.makeSafe(),p.radius*=f,p.radius=Math.max(h.minDistance,Math.min(h.maxDistance,p.radius)),!0===h.enableDamping?h.target.addScaledVector(g,h.dampingFactor):h.target.add(g),r.setFromSpherical(p),r.applyQuaternion(a),e.copy(h.target).add(r),h.object.lookAt(h.target),!0===h.enableDamping?(m.theta*=1-h.dampingFactor,m.phi*=1-h.dampingFactor,g.multiplyScalar(1-h.dampingFactor)):(m.set(0,0,0),g.set(0,0,0)),f=1,!!(v||s.distanceToSquared(h.object.position)>d||8*(1-o.dot(h.object.quaternion))>d)&&(h.dispatchEvent(q),s.copy(h.object.position),o.copy(h.object.quaternion),!(v=!1))}}(),this.dispose=function(){h.domElement.removeEventListener("contextmenu",W),h.domElement.removeEventListener("pointerdown",B),h.domElement.removeEventListener("wheel",H),h.domElement.removeEventListener("touchstart",G),h.domElement.removeEventListener("touchend",k),h.domElement.removeEventListener("touchmove",V),h.domElement.ownerDocument.removeEventListener("pointermove",O),h.domElement.ownerDocument.removeEventListener("pointerup",F),null!==h._domElementKeyEvents&&h._domElementKeyEvents.removeEventListener("keydown",U)};const h=this,c={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let u=c.NONE;const d=1e-6,p=new j.Spherical,m=new j.Spherical;let f=1;const g=new j.Vector3;let v=!1;const r=new j.Vector2,i=new j.Vector2,a=new j.Vector2,n=new j.Vector2,s=new j.Vector2,o=new j.Vector2,l=new j.Vector2,y=new j.Vector2,x=new j.Vector2;function _(){return Math.pow(.95,h.zoomSpeed)}function b(e){m.theta-=e}function w(e){m.phi-=e}const M=function(){const n=new j.Vector3;return function(e,t){n.setFromMatrixColumn(t,0),n.multiplyScalar(-e),g.add(n)}}(),S=function(){const n=new j.Vector3;return function(e,t){!0===h.screenSpacePanning?n.setFromMatrixColumn(t,1):(n.setFromMatrixColumn(t,0),n.crossVectors(h.object.up,n)),n.multiplyScalar(e),g.add(n)}}(),T=function(){const i=new j.Vector3;return function(e,t){var n,r=h.domElement;h.object.isPerspectiveCamera?(n=h.object.position,i.copy(n).sub(h.target),n=i.length(),n*=Math.tan(h.object.fov/2*Math.PI/180),M(2*e*n/r.clientHeight,h.object.matrix),S(2*t*n/r.clientHeight,h.object.matrix)):h.object.isOrthographicCamera?(M(e*(h.object.right-h.object.left)/h.object.zoom/r.clientWidth,h.object.matrix),S(t*(h.object.top-h.object.bottom)/h.object.zoom/r.clientHeight,h.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),h.enablePan=!1)}}();function E(e){h.object.isPerspectiveCamera?f/=e:h.object.isOrthographicCamera?(h.object.zoom=Math.max(h.minZoom,Math.min(h.maxZoom,h.object.zoom*e)),h.object.updateProjectionMatrix(),v=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),h.enableZoom=!1)}function A(e){h.object.isPerspectiveCamera?f*=e:h.object.isOrthographicCamera?(h.object.zoom=Math.max(h.minZoom,Math.min(h.maxZoom,h.object.zoom/e)),h.object.updateProjectionMatrix(),v=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),h.enableZoom=!1)}function L(e){r.set(e.clientX,e.clientY)}function R(e){n.set(e.clientX,e.clientY)}function C(e){var t;1==e.touches.length?r.set(e.touches[0].pageX,e.touches[0].pageY):(t=.5*(e.touches[0].pageX+e.touches[1].pageX),e=.5*(e.touches[0].pageY+e.touches[1].pageY),r.set(t,e))}function P(e){var t;1==e.touches.length?n.set(e.touches[0].pageX,e.touches[0].pageY):(t=.5*(e.touches[0].pageX+e.touches[1].pageX),e=.5*(e.touches[0].pageY+e.touches[1].pageY),n.set(t,e))}function D(e){var t=e.touches[0].pageX-e.touches[1].pageX,e=e.touches[0].pageY-e.touches[1].pageY,e=Math.sqrt(t*t+e*e);l.set(0,e)}function I(e){var t;1==e.touches.length?i.set(e.touches[0].pageX,e.touches[0].pageY):(t=.5*(e.touches[0].pageX+e.touches[1].pageX),n=.5*(e.touches[0].pageY+e.touches[1].pageY),i.set(t,n)),a.subVectors(i,r).multiplyScalar(h.rotateSpeed);var n=h.domElement;b(2*Math.PI*a.x/n.clientHeight),w(2*Math.PI*a.y/n.clientHeight),r.copy(i)}function N(e){var t;1==e.touches.length?s.set(e.touches[0].pageX,e.touches[0].pageY):(t=.5*(e.touches[0].pageX+e.touches[1].pageX),e=.5*(e.touches[0].pageY+e.touches[1].pageY),s.set(t,e)),o.subVectors(s,n).multiplyScalar(h.panSpeed),T(o.x,o.y),n.copy(s)}function z(e){var t=e.touches[0].pageX-e.touches[1].pageX,e=e.touches[0].pageY-e.touches[1].pageY,e=Math.sqrt(t*t+e*e);y.set(0,e),x.set(0,Math.pow(y.y/l.y,h.zoomSpeed)),E(x.y),l.copy(y)}function B(e){if(!1!==h.enabled)switch(e.pointerType){case"mouse":case"pen":!function(e){e.preventDefault(),(h.domElement.focus?h.domElement:window).focus();let t;switch(e.button){case 0:t=h.mouseButtons.LEFT;break;case 1:t=h.mouseButtons.MIDDLE;break;case 2:t=h.mouseButtons.RIGHT;break;default:t=-1}switch(t){case j.MOUSE.DOLLY:if(!1===h.enableZoom)return;!function(e){l.set(e.clientX,e.clientY)}(e),u=c.DOLLY;break;case j.MOUSE.ROTATE:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===h.enablePan)return;R(e),u=c.PAN}else{if(!1===h.enableRotate)return;L(e),u=c.ROTATE}break;case j.MOUSE.PAN:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===h.enableRotate)return;L(e),u=c.ROTATE}else{if(!1===h.enablePan)return;R(e),u=c.PAN}break;default:u=c.NONE}u!==c.NONE&&(h.domElement.ownerDocument.addEventListener("pointermove",O),h.domElement.ownerDocument.addEventListener("pointerup",F),h.dispatchEvent(X))}(e)}}function O(e){if(!1!==h.enabled)switch(e.pointerType){case"mouse":case"pen":!function(e){if(!1!==h.enabled)switch(e.preventDefault(),u){case c.ROTATE:if(!1===h.enableRotate)return;!function(e){i.set(e.clientX,e.clientY),a.subVectors(i,r).multiplyScalar(h.rotateSpeed),e=h.domElement,b(2*Math.PI*a.x/e.clientHeight),w(2*Math.PI*a.y/e.clientHeight),r.copy(i),h.update()}(e);break;case c.DOLLY:if(!1===h.enableZoom)return;!function(e){y.set(e.clientX,e.clientY),x.subVectors(y,l),0<x.y?E(_()):x.y<0&&A(_()),l.copy(y),h.update()}(e);break;case c.PAN:if(!1===h.enablePan)return;!function(e){s.set(e.clientX,e.clientY),o.subVectors(s,n).multiplyScalar(h.panSpeed),T(o.x,o.y),n.copy(s),h.update()}(e)}}(e)}}function F(e){switch(e.pointerType){case"mouse":case"pen":h.domElement.ownerDocument.removeEventListener("pointermove",O),h.domElement.ownerDocument.removeEventListener("pointerup",F),!1!==h.enabled&&(h.dispatchEvent(Y),u=c.NONE)}}function H(e){!1===h.enabled||!1===h.enableZoom||u!==c.NONE&&u!==c.ROTATE||(e.preventDefault(),h.dispatchEvent(X),(e=e).deltaY<0?A(_()):0<e.deltaY&&E(_()),h.update(),h.dispatchEvent(Y))}function U(e){!1!==h.enabled&&!1!==h.enablePan&&function(e){let t=!1;switch(e.code){case h.keys.UP:T(0,h.keyPanSpeed),t=!0;break;case h.keys.BOTTOM:T(0,-h.keyPanSpeed),t=!0;break;case h.keys.LEFT:T(h.keyPanSpeed,0),t=!0;break;case h.keys.RIGHT:T(-h.keyPanSpeed,0),t=!0}t&&(e.preventDefault(),h.update())}(e)}function G(e){if(!1!==h.enabled){switch(e.preventDefault(),e.touches.length){case 1:switch(h.touches.ONE){case j.TOUCH.ROTATE:if(!1===h.enableRotate)return;C(e),u=c.TOUCH_ROTATE;break;case j.TOUCH.PAN:if(!1===h.enablePan)return;P(e),u=c.TOUCH_PAN;break;default:u=c.NONE}break;case 2:switch(h.touches.TWO){case j.TOUCH.DOLLY_PAN:if(!1===h.enableZoom&&!1===h.enablePan)return;t=e,h.enableZoom&&D(t),h.enablePan&&P(t),u=c.TOUCH_DOLLY_PAN;break;case j.TOUCH.DOLLY_ROTATE:if(!1===h.enableZoom&&!1===h.enableRotate)return;t=e,h.enableZoom&&D(t),h.enableRotate&&C(t),u=c.TOUCH_DOLLY_ROTATE;break;default:u=c.NONE}break;default:u=c.NONE}var t;u!==c.NONE&&h.dispatchEvent(X)}}function V(e){var t;if(!1!==h.enabled)switch(e.preventDefault(),u){case c.TOUCH_ROTATE:if(!1===h.enableRotate)return;I(e),h.update();break;case c.TOUCH_PAN:if(!1===h.enablePan)return;N(e),h.update();break;case c.TOUCH_DOLLY_PAN:if(!1===h.enableZoom&&!1===h.enablePan)return;t=e,h.enableZoom&&z(t),h.enablePan&&N(t),h.update();break;case c.TOUCH_DOLLY_ROTATE:if(!1===h.enableZoom&&!1===h.enableRotate)return;t=e,h.enableZoom&&z(t),h.enableRotate&&I(t),h.update();break;default:u=c.NONE}}function k(e){!1!==h.enabled&&(h.dispatchEvent(Y),u=c.NONE)}function W(e){!1!==h.enabled&&e.preventDefault()}h.domElement.addEventListener("contextmenu",W),h.domElement.addEventListener("pointerdown",B),h.domElement.addEventListener("wheel",H,{passive:!1}),h.domElement.addEventListener("touchstart",G,{passive:!1}),h.domElement.addEventListener("touchend",k),h.domElement.addEventListener("touchmove",V,{passive:!1}),this.update()}}class i extends r{constructor(e,t){super(e,t),this.screenSpacePanning=!1,this.mouseButtons.LEFT=j.MOUSE.PAN,this.mouseButtons.RIGHT=j.MOUSE.ROTATE,this.touches.ONE=j.TOUCH.PAN,this.touches.TWO=j.TOUCH.DOLLY_ROTATE}}},86:(e,t,n)=>{n.r(t),n.d(t,{Lut:()=>r,ColorMapKeywords:()=>o});var c=n(212);class r{constructor(e,t){this.lut=[],this.setColorMap(e,t)}set(e){return e instanceof r&&this.copy(e),this}setMin(e){return this.minV=e,this}setMax(e){return this.maxV=e,this}setColorMap(e,t=32){this.map=o[e]||o.rainbow,this.n=t;var n=1/this.n;for(let t=this.lut.length=0;t<=1;t+=n)for(let e=0;e<this.map.length-1;e++)if(t>=this.map[e][0]&&t<this.map[e+1][0]){var r=this.map[e][0],i=this.map[e+1][0];const s=new c.Color(this.map[e][1]);var a=new c.Color(this.map[e+1][1]),r=s.lerp(a,(t-r)/(i-r));this.lut.push(r)}return this}copy(e){return this.lut=e.lut,this.map=e.map,this.n=e.n,this.minV=e.minV,this.maxV=e.maxV,this}getColor(e){e<=this.minV?e=this.minV:e>=this.maxV&&(e=this.maxV),e=(e-this.minV)/(this.maxV-this.minV);let t=Math.round(e*this.n);return t==this.n?--t:t,this.lut[t]}addColorMap(e,t){o[e]=t}createCanvas(){const e=document.createElement("canvas");return e.width=1,e.height=this.n,this.updateCanvas(e),e}updateCanvas(e){const t=e.getContext("2d",{alpha:!1});var n=t.getImageData(0,0,1,this.n);const r=n.data;let i=0;var a=1/this.n;for(let t=1;0<=t;t-=a)for(let e=this.map.length-1;0<=e;e--)if(t<this.map[e][0]&&t>=this.map[e-1][0]){var s=this.map[e-1][0],o=this.map[e][0];const h=new c.Color(this.map[e-1][1]);var l=new c.Color(this.map[e][1]),s=h.lerp(l,(t-s)/(o-s));r[4*i]=Math.round(255*s.r),r[4*i+1]=Math.round(255*s.g),r[4*i+2]=Math.round(255*s.b),r[4*i+3]=255,i+=1}return t.putImageData(n,0,0),e}}r.prototype.lut=[],r.prototype.map=[],r.prototype.n=256;const o={rainbow:[[r.prototype.minV=0,255],[.2,65535],[.5,65280],[.8,16776960],[r.prototype.maxV=1,16711680]],cooltowarm:[[0,3952322],[.2,10206463],[.5,14474460],[.8,16163717],[1,11797542]],blackbody:[[0,0],[.2,7864320],[.5,15086080],[.8,16776960],[1,16777215]],grayscale:[[0,0],[.2,4210752],[.5,8355712],[.8,12566463],[1,16777215]]}},302:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.LinePoint=void 0;const r=n(212);t.LinePoint=class{constructor(e,t,n=new r.Color("#29BEB0")){this.point=e,this.radius=t,this.color=n}}},837:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.LineTubeGeometry=void 0;const f=n(212);class r extends f.BufferGeometry{constructor(e=8){super(),this.pointsBuffer=[],this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.indices=[],this.segmentsRadialNumbers=[],this.type="LineTubeGeometry",this.pointsLength=0,this.radialSegments=e}dispose(){super.dispose(),this.pointsBuffer=[],this.normals=[],this.vertices=[],this.colors=[],this.uvs=[],this.indices=[],this.segmentsRadialNumbers=[]}add(e){this.pointsLength++,this.pointsBuffer.push(e),3===this.pointsBuffer.length?this.generateSegment(0):4<=this.pointsBuffer.length&&this.generateSegment(1)}finish(){2==this.pointsBuffer.length?this.generateSegment(0):this.generateSegment(1),this.setAttribute("position",new f.Float32BufferAttribute(this.vertices,3)),this.setAttribute("normal",new f.Float32BufferAttribute(this.normals,3)),this.setAttribute("color",new f.Float32BufferAttribute(this.colors,3)),this.generateUVs(),this.setAttribute("uv",new f.Float32BufferAttribute(this.uvs,2)),this.generateIndices(),this.setIndex(this.indices),this.segmentsRadialNumbers=[],this.normals=[],this.colors=[],this.uvs=[]}pointsCount(){return this.pointsLength}slice(n=0,r=this.pointsLength){if(n!==r){if(n<0||r<0)throw new Error("negative values are not supported, yet");var i=6*(this.radialSegments+1);let e=n*i*2,t=(r-1)*i*2;r===this.pointsLength&&(t+=6*this.radialSegments),0<n&&(e+=6*this.radialSegments),this.setIndex(this.indices.slice(e,t))}else this.setIndex([])}generateSegment(n){var e,r=this.pointsBuffer[n-1],i=this.pointsBuffer[n],a=this.pointsBuffer[n+1],s=this.pointsBuffer[n+2];if(void 0!==a){var o=this.computeFrenetFrames([i.point,a.point],!1),l=(null===(e=this.pointsBuffer[n-1])||void 0===e?void 0:e.radius)||0;const d=[[],[],[],[]];for(let t=0;t<=this.radialSegments;t++){var h=t/this.radialSegments*Math.PI*2,c=Math.sin(h),h=-Math.cos(h);let e=new f.Vector3;e.x=h*o.normals[0].x+c*o.binormals[0].x,e.y=h*o.normals[0].y+c*o.binormals[0].y,e.z=h*o.normals[0].z+c*o.binormals[0].z,e.normalize(),void 0===r&&d[0].push(u(n,t,e,i.point,l,i.color)),d[1].push(u(n,t,e,i.point,i.radius,i.color)),d[2].push(u(n,t,e,a.point,i.radius,i.color)),void 0===s&&d[3].push(u(n+1,t,e,a.point,0,i.color))}function u(e,t,n,r,i,a){return{pointNr:e,radialNr:t,normals:[n.x,n.y,n.z],vertices:[r.x+i*n.x,r.y+i*n.y,r.z+i*n.z],colors:a.toArray()}}d.forEach(e=>{var t=e.reduce((e,t)=>[...e,...t.normals],[]);this.normals.push(...t);t=e.reduce((e,t)=>[...e,...t.colors],[]);this.colors.push(...t);t=e.reduce((e,t)=>[...e,...t.vertices],[]);this.vertices.push(...t),this.segmentsRadialNumbers.push(...e.map(e=>e.radialNr))}),4<=this.pointsBuffer.length&&(this.pointsBuffer=this.pointsBuffer.slice(1))}}generateIndices(){for(let e=this.radialSegments+2;e<this.segmentsRadialNumbers.length;e++){var t=e-1,n=e-this.radialSegments-2,r=e-this.radialSegments-1,i=e;this.indices.push(t,n,r,i,t,r)}}generateUVs(){for(let e=0;e<this.segmentsRadialNumbers.length;e++)this.uvs.push(e/this.radialSegments-1,this.segmentsRadialNumbers[e]/this.radialSegments)}toJSON(){throw new Error("not implemented")}getTangent(e,t,n){const r=n||new f.Vector3;return r.copy(e).sub(t).normalize(),r}computeFrenetFrames(t,e){const n=new f.Vector3,r=[],i=[],a=[],s=new f.Vector3,o=new f.Matrix4;for(let e=1;e<Math.floor(t.length/2)+(t.length%2?0:1);e++){const m=this.getTangent(t[e-1],t[e]);m.normalize(),r.push(m)}var l=r.length-1;i[0]=new f.Vector3,a[0]=new f.Vector3;let h=Number.MAX_VALUE;var c,u=Math.abs(r[0].x),d=Math.abs(r[0].y),p=Math.abs(r[0].z);u<=h&&(h=u,n.set(1,0,0)),d<=h&&(h=d,n.set(0,1,0)),p<=h&&n.set(0,0,1),s.crossVectors(r[0],n).normalize(),i[0].crossVectors(r[0],s),a[0].crossVectors(r[0],i[0]);for(let e=1;e<=l;e++)i[e]=i[e-1].clone(),a[e]=a[e-1].clone(),s.crossVectors(r[e-1],r[e]),s.length()>Number.EPSILON&&(s.normalize(),c=Math.acos(f.MathUtils.clamp(r[e-1].dot(r[e]),-1,1)),i[e].applyMatrix4(o.makeRotationAxis(s,c))),a[e].crossVectors(r[e],i[e]);if(!0===e){let t=Math.acos(f.MathUtils.clamp(i[0].dot(i[l]),-1,1));t/=l,0<r[0].dot(s.crossVectors(i[0],i[l]))&&(t=-t);for(let e=1;e<=l;e++)i[e].applyMatrix4(o.makeRotationAxis(r[e],t*e)),a[e].crossVectors(r[e],i[e])}return{tangents:r,normals:i,binormals:a}}}t.LineTubeGeometry=r},346:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.TempColorizer=t.SpeedColorizer=t.LutColorizer=t.SimpleColorizer=void 0;const r=n(212),i=n(86);t.SimpleColorizer=class{constructor(e=new r.Color("#29BEB0")){this.color=e}getColor(){return this.color}};class a{constructor(e=new i.Lut("cooltowarm")){this.lut=e}}(class extends(t.LutColorizer=a){});t.SpeedColorizer=class extends a{constructor(e,t){super(),this.lut.setMin(e),this.lut.setMax(t)}getColor(e){return this.lut.getColor(e.speed)}};t.TempColorizer=class extends a{constructor(e,t){super(),this.lut.setMin(e),this.lut.setMax(t)}getColor(e){return this.lut.getColor(e.temp)}}},838:function(e,t,n){var r=this&&this.__awaiter||function(e,s,o,l){return new(o=o||Promise)(function(n,t){function r(e){try{a(l.next(e))}catch(e){t(e)}}function i(e){try{a(l.throw(e))}catch(e){t(e)}}function a(e){var t;e.done?n(e.value):((t=e.value)instanceof o?t:new o(function(e){e(t)})).then(r,i)}a((l=l.apply(e,s||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0}),t.GCodeRenderer=void 0;const i=n(212),a=n(886),s=n(215);t.GCodeRenderer=class{constructor(e,t,n,r){this.lineMaterial=new i.MeshPhongMaterial({vertexColors:!0}),this.scene=new i.Scene,this.renderer=new i.WebGLRenderer,this.renderer.setSize(t,n),this.renderer.setClearColor(r,1),this.camera=this.newCamera(t,n),this.parser=new s.GCodeParser(e)}get travelWidth(){return this.parser.travelWidth}set travelWidth(e){this.parser.travelWidth=e}get colorizer(){return this.parser.colorizer}set colorizer(e){this.parser.colorizer=e}get radialSegments(){return this.parser.radialSegments}set radialSegments(e){this.parser.radialSegments=e}get pointsPerObject(){return this.parser.pointsPerObject}set pointsPerObject(e){this.parser.pointsPerObject=e}getMinMaxValues(){return this.parser.getMinMaxValues()}newCamera(e,t){e=new i.PerspectiveCamera(75,e/t,.1,1e3);return this.cameraControl&&this.cameraControl.dispose(),this.cameraControl=new a.OrbitControls(e,this.renderer.domElement),this.cameraControl.enablePan=!0,this.cameraControl.enableZoom=!0,this.cameraControl.minDistance=-1/0,this.cameraControl.maxDistance=1/0,null!==(t=this.cameraControl)&&void 0!==t&&t.addEventListener("change",()=>{requestAnimationFrame(()=>this.draw())}),e}fitCamera(){var e;const t=new i.Box3(this.parser.min,this.parser.max);var n=new i.Vector3;t.getCenter(n),this.camera.position.x=((null===(e=this.parser.min)||void 0===e?void 0:e.x)||0)+(((null===(e=this.parser.max)||void 0===e?void 0:e.x)||0)-((null===(e=this.parser.min)||void 0===e?void 0:e.x)||0))/2,this.camera.position.z=(null===(e=this.parser.max)||void 0===e?void 0:e.z)||0,this.cameraControl&&(this.cameraControl.target=n),this.camera.lookAt(n),this.draw()}render(){return r(this,void 0,void 0,function*(){this.parser.parse(),this.parser.getGeometries().forEach(e=>{this.scene.add(new i.Mesh(e,this.lineMaterial))});var e=new i.AmbientLight(16777215,.5);this.scene.add(e);const t=new i.SpotLight(16777215,.9);t.position.set(200,400,300),t.lookAt(new i.Vector3(0,0,0));const n=new i.SpotLight(16777215,.9);n.position.set(-200,-400,-300),n.lookAt(new i.Vector3(0,0,0)),this.scene.add(t),this.scene.add(n),this.fitCamera()})}draw(){0!==this.parser.getGeometries().length&&void 0!==this.camera&&this.renderer.render(this.scene,this.camera)}slice(e=0,t=this.pointsCount()){this.parser.slice(e,t),this.draw()}sliceLayer(e,t){this.parser.sliceLayer(e,t),this.draw()}element(){return this.renderer.domElement}dispose(){var e;null!==(e=this.cameraControl)&&void 0!==e&&e.dispose(),this.parser.dispose()}pointsCount(){return this.parser.pointsCount()}layerCount(){return this.parser.layerCount()}resize(e,t){this.renderer.setSize(e,t);var n=this.camera.rotation,r=this.camera.position;this.camera=this.newCamera(e,t),this.fitCamera(),this.camera.rotation.copy(n),this.camera.position.copy(r),this.draw()}}},607:function(e,t,n){var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){e[r=void 0===r?n:r]=t[n]}),i=this&&this.__exportStar||function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||r(t,e,n)};Object.defineProperty(t,"__esModule",{value:!0}),t.Color=void 0,i(n(838),t),i(n(346),t);var a=n(212);Object.defineProperty(t,"Color",{enumerable:!0,get:function(){return a.Color}})},215:function(e,t,n){var r=this&&this.__awaiter||function(e,s,o,l){return new(o=o||Promise)(function(n,t){function r(e){try{a(l.next(e))}catch(e){t(e)}}function i(e){try{a(l.throw(e))}catch(e){t(e)}}function a(e){var t;e.done?n(e.value):((t=e.value)instanceof o?t:new o(function(e){e(t)})).then(r,i)}a((l=l.apply(e,s||[])).next())})};Object.defineProperty(t,"__esModule",{value:!0}),t.GCodeParser=void 0;const x=n(212),i=n(837),_=n(302),a=n(346);t.GCodeParser=class{constructor(e){this.combinedLines=[],this.minTemp=void 0,this.maxTemp=0,this.minSpeed=void 0,this.maxSpeed=0,this.layerIndex=[],this.travelWidth=.01,this.colorizer=new a.SimpleColorizer,this.radialSegments=8,this.pointsPerObject=12e4,this.gCode=e,this.calcMinMaxMetadata()}getMinMaxValues(){return{minTemp:this.minTemp,maxTemp:this.maxTemp,minSpeed:this.minSpeed,maxSpeed:this.maxSpeed}}calcMinMax(e){void 0===this.min&&(this.min=e.clone()),void 0===this.max&&(this.max=e.clone()),e.x>this.max.x&&(this.max.x=e.x),e.y>this.max.y&&(this.max.y=e.y),e.z>this.max.z&&(this.max.z=e.z),e.x<this.min.x&&(this.min.x=e.x),e.y<this.min.y&&(this.min.y=e.y),e.z<this.min.z&&(this.min.z=e.z)}parseValue(e){if(e)return Number.parseFloat(e.substring(1))}calcMinMaxMetadata(){this.gCode.split("\n").forEach((e,t)=>{if(void 0!==e&&";"!==e[0]){const r=e.split(" ");var n;"G0"===r[0]||"G1"===r[0]?void 0!==(n=this.parseValue(r.find(e=>"F"===e[0])))&&(n>this.maxSpeed&&(this.maxSpeed=n),(void 0===this.minSpeed||n<this.minSpeed)&&(this.minSpeed=n)):"M104"!==r[0]&&"M109"!==r[0]||((n=this.parseValue(r.find(e=>"S"===e[0]))||0)>this.maxTemp&&(this.maxTemp=n),(void 0===this.minTemp||n<this.minTemp)&&(this.minTemp=n))}})}parse(){return r(this,void 0,void 0,function*(){const l=new Map,h={x:!1,y:!1,z:!1,e:!1};let c=new x.Vector3(0,0,0),u=new x.Vector3(0,0,0),d=0,p=0,m=0;const f=(e,t,n,r)=>{let i=this.parseValue(e.find(e=>e[0]===t));return void 0!==i?r&&(i+=n):i=n,i};let g=this.gCode.split("\n");this.gCode="";let t=0,n=void 0,v=0;const y=e=>{0<v&&v%this.pointsPerObject==0&&(this.combinedLines[t].finish(),t++),void 0===this.combinedLines[t]&&(this.combinedLines[t]=new i.LineTubeGeometry(this.radialSegments),n&&this.combinedLines[t].add(n)),this.combinedLines[t].add(e),n=e,v++};g.forEach((t,e)=>{if(void 0!==t){const s=(t=t.split(";",2)[0]).split(" ");if("G0"===s[0]||"G1"===s[0]){var n=f(s,"X",u.x,h.x),r=f(s,"Y",u.y,h.y),i=f(s,"Z",u.z,h.z),a=f(s,"E",d,h.e),t=this.parseValue(s.find(e=>"F"===e[0]))||p,r=new x.Vector3(n,r,i);const o=new x.LineCurve3(u,r);i=o.getLength();if(0!==i){let e=(a-d)/i*10;0==e?e=this.travelWidth:this.calcMinMax(r);i=this.colorizer.getColor({radius:e,segmentStart:u,segmentEnd:r,speed:t,temp:m});if(y(new _.LinePoint(u.clone(),e,i)),u.z!==r.z){let e=l.get(u.z),t=l.get(r.z);void 0===e&&(e={end:0,start:0}),void 0===t&&(t={end:0,start:0}),e.end=v-1,t.start=v,l.set(u.z,e),l.set(r.z,t)}}c.copy(u),u.copy(r),d=a,p=t}else"G92"===s[0]?(c.copy(u),u=new x.Vector3(this.parseValue(s.find(e=>"X"===e[0]))||u.x,this.parseValue(s.find(e=>"Y"===e[0]))||u.y,this.parseValue(s.find(e=>"Z"===e[0]))||u.z),d=this.parseValue(s.find(e=>"E"===e[0]))||d):"M104"!==s[0]&&"M109"!==s[0]||(m=this.parseValue(s.find(e=>"S"===e[0]))||0);g[e]=void 0}}),this.combinedLines[t]&&this.combinedLines[t].finish(),this.layerIndex=Array.from(l.values()).sort((e,t)=>e.start-t.start),this.layerIndex[this.layerIndex.length-1].end=this.pointsCount()-1})}slice(i=0,a=this.pointsCount()){if(i<0||a<0)throw new Error("negative values are not supported, yet");const s=Math.floor(i/this.pointsPerObject),o=Math.ceil(a/this.pointsPerObject)-1;this.combinedLines.forEach((n,r)=>{if(void 0===i||i!==a){let e=0,t=n.pointsCount();r==s&&(e=i-r*this.pointsPerObject,0<s&&e++),r==o&&(t=a-r*this.pointsPerObject,o<=Math.floor(this.pointsCount()/this.pointsPerObject)&&t++),(r<s||r>o)&&(e=0,t=0),n.slice(e,t)}else n.slice(0,0)})}sliceLayer(e,t){this.slice(e&&(null===(e=this.layerIndex[e])||void 0===e?void 0:e.start),t&&(null===(t=this.layerIndex[t])||void 0===t?void 0:t.end)+1)}dispose(){this.combinedLines.forEach(e=>e.dispose())}pointsCount(){return this.combinedLines.reduce((e,t,n)=>0<n?e+t.pointsCount()-1:e+t.pointsCount(),0)}layerCount(){return this.layerIndex.length-1||0}getGeometries(){return this.combinedLines}}}},r={};function i(e){var t=r[e];if(void 0!==t)return t.exports;t=r[e]={exports:{}};return n[e].call(t.exports,t,t.exports,i),t.exports}return i.d=(e,t)=>{for(var n in t)i.o(t,n)&&!i.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),i.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i(607)})()});
//# sourceMappingURL=gcode-viewer.min.js.map